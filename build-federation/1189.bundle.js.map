{"version":3,"file":"1189.bundle.js","mappings":"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ClBC,GAAgB,WAChBC,GAAoB,WACpBC,GAAgB,WAChBC,GAAiB,WACjBC,GAAiB,WACjBC,GAAkB,WAClBC,GAAsB,UACtBC,GAAoB,UACpBC,GAA2B,UAC3BC,GAA+B,WAC/BC,GAAsB,WACtBC,GAA0B,WAC1BC,GAAW,WACXC,GAAe,UACfC,GAAY,WACZC,GAAY,WACZC,GAAgB,WAChBC,GAAiB,WACjBC,GAAqB,WACrBC,GAAyB,WACzBC,GAAuB,WACvBC,GAA2B,WAC3BC,GAAoB,WACpBC,GAA6B,UAC7BC,GAAoB,UACpBC,GAAU,WACVC,GAAuB,WACvBC,GAAsB,WACtBC,GAAc,WACdC,GAAmB,WACnBC,GAAuB,WACvBC,GAAY,WACZC,GAA4B,UAC5BC,GAA2B,UAC3BC,GAAwB,UACxBC,GAAiB,WACjBC,GAAgB,WAChBC,GAAkB,WAClBC,GAAiB,WACjBC,GAAc,WACdC,GAAkB,WAClBC,GAAc,WACdC,GAAsB,WACtBC,GAAU,WACVC,GAAc,CAChB7yB,EACAM,EACAC,EACAG,EACAE,EACAE,EACAU,EACAW,GACAS,GACAC,GACAE,GACAI,GACAc,GACAC,GACAC,GACAC,GACAC,GACAE,GACAG,GACAE,GACAG,GACAE,GACAE,GACAE,GACAE,GACAY,GACAE,GACAM,GACAK,GACAK,GACAC,GACAE,GACAQ,GACAE,GACAsB,GACAI,GACAE,GACAO,GACAO,GACAW,GACAE,GACAO,GACAG,GACAG,GACAE,GACAE,GACAE,GACAK,GACAG,GACAK,GACAE,GACAE,GACAK,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAC,GACAE,GACAO,GACAE,GACAE,GACAE,GACAS,GACAC,GACAa,GACAC,GACAE,GACAE,GACAE,GACAC,GACAC,GACAI,GACAE,GACAG,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAO,GACAK,GACAE,GACAU,GACAM,GACAM,GACAK,GACAY,GACA0B,GACAE,GACAE,GACAC,GACAK,GACAa,GACAC,GACAM,GAC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","sources":["webpack://ciqo/./node_modules/web-ifc/web-ifc-api.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __require = (x) => {\n  if (typeof require !== \"undefined\")\n    return require(x);\n  throw new Error('Dynamic require of \"' + x + '\" is not supported');\n};\nvar __commonJS = (cb, mod) => function __require2() {\n  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// (disabled):crypto\nvar require_crypto = __commonJS({\n  \"(disabled):crypto\"() {\n  }\n});\n\n// dist/web-ifc-mt.js\nvar require_web_ifc_mt = __commonJS({\n  \"dist/web-ifc-mt.js\"(exports, module) {\n    var WebIFCWasm2 = function() {\n      var _scriptDir = typeof document !== \"undefined\" && document.currentScript ? document.currentScript.src : void 0;\n      if (typeof __filename !== \"undefined\")\n        _scriptDir = _scriptDir || __filename;\n      return function(WebIFCWasm3) {\n        WebIFCWasm3 = WebIFCWasm3 || {};\n        function GROWABLE_HEAP_I8() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAP8;\n        }\n        function GROWABLE_HEAP_U8() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAPU8;\n        }\n        function GROWABLE_HEAP_I16() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAP16;\n        }\n        function GROWABLE_HEAP_U16() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAPU16;\n        }\n        function GROWABLE_HEAP_I32() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAP32;\n        }\n        function GROWABLE_HEAP_U32() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAPU32;\n        }\n        function GROWABLE_HEAP_F32() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAPF32;\n        }\n        function GROWABLE_HEAP_F64() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAPF64;\n        }\n        var Module = typeof WebIFCWasm3 !== \"undefined\" ? WebIFCWasm3 : {};\n        var readyPromiseResolve, readyPromiseReject;\n        Module[\"ready\"] = new Promise(function(resolve, reject) {\n          readyPromiseResolve = resolve;\n          readyPromiseReject = reject;\n        });\n        var moduleOverrides = {};\n        var key;\n        for (key in Module) {\n          if (Module.hasOwnProperty(key)) {\n            moduleOverrides[key] = Module[key];\n          }\n        }\n        var arguments_ = [];\n        var thisProgram = \"./this.program\";\n        var quit_ = function(status, toThrow) {\n          throw toThrow;\n        };\n        var ENVIRONMENT_IS_WEB = typeof window === \"object\";\n        var ENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n        var ENVIRONMENT_IS_NODE = typeof process === \"object\" && typeof process.versions === \"object\" && typeof process.versions.node === \"string\";\n        var ENVIRONMENT_IS_PTHREAD = Module[\"ENVIRONMENT_IS_PTHREAD\"] || false;\n        var scriptDirectory = \"\";\n        function locateFile(path) {\n          if (Module[\"locateFile\"]) {\n            return Module[\"locateFile\"](path, scriptDirectory);\n          }\n          return scriptDirectory + path;\n        }\n        var read_, readAsync, readBinary, setWindowTitle;\n        var nodeFS;\n        var nodePath;\n        if (ENVIRONMENT_IS_NODE) {\n          if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = __require(\"path\").dirname(scriptDirectory) + \"/\";\n          } else {\n            scriptDirectory = __dirname + \"/\";\n          }\n          read_ = function shell_read(filename, binary) {\n            if (!nodeFS)\n              nodeFS = __require(\"fs\");\n            if (!nodePath)\n              nodePath = __require(\"path\");\n            filename = nodePath[\"normalize\"](filename);\n            return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\n          };\n          readBinary = function readBinary2(filename) {\n            var ret = read_(filename, true);\n            if (!ret.buffer) {\n              ret = new Uint8Array(ret);\n            }\n            assert(ret.buffer);\n            return ret;\n          };\n          readAsync = function readAsync2(filename, onload, onerror) {\n            if (!nodeFS)\n              nodeFS = __require(\"fs\");\n            if (!nodePath)\n              nodePath = __require(\"path\");\n            filename = nodePath[\"normalize\"](filename);\n            nodeFS[\"readFile\"](filename, function(err2, data) {\n              if (err2)\n                onerror(err2);\n              else\n                onload(data.buffer);\n            });\n          };\n          if (process[\"argv\"].length > 1) {\n            thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\n          }\n          arguments_ = process[\"argv\"].slice(2);\n          process[\"on\"](\"uncaughtException\", function(ex) {\n            if (!(ex instanceof ExitStatus)) {\n              throw ex;\n            }\n          });\n          process[\"on\"](\"unhandledRejection\", abort);\n          quit_ = function(status, toThrow) {\n            if (keepRuntimeAlive()) {\n              process[\"exitCode\"] = status;\n              throw toThrow;\n            }\n            process[\"exit\"](status);\n          };\n          Module[\"inspect\"] = function() {\n            return \"[Emscripten Module object]\";\n          };\n          var nodeWorkerThreads;\n          try {\n            nodeWorkerThreads = __require(\"worker_threads\");\n          } catch (e) {\n            console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?');\n            throw e;\n          }\n          global.Worker = nodeWorkerThreads.Worker;\n        } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n          if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = self.location.href;\n          } else if (typeof document !== \"undefined\" && document.currentScript) {\n            scriptDirectory = document.currentScript.src;\n          }\n          if (_scriptDir) {\n            scriptDirectory = _scriptDir;\n          }\n          if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n            scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1);\n          } else {\n            scriptDirectory = \"\";\n          }\n          if (ENVIRONMENT_IS_NODE) {\n            read_ = function shell_read(filename, binary) {\n              if (!nodeFS)\n                nodeFS = __require(\"fs\");\n              if (!nodePath)\n                nodePath = __require(\"path\");\n              filename = nodePath[\"normalize\"](filename);\n              return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\n            };\n            readBinary = function readBinary2(filename) {\n              var ret = read_(filename, true);\n              if (!ret.buffer) {\n                ret = new Uint8Array(ret);\n              }\n              assert(ret.buffer);\n              return ret;\n            };\n            readAsync = function readAsync2(filename, onload, onerror) {\n              if (!nodeFS)\n                nodeFS = __require(\"fs\");\n              if (!nodePath)\n                nodePath = __require(\"path\");\n              filename = nodePath[\"normalize\"](filename);\n              nodeFS[\"readFile\"](filename, function(err2, data) {\n                if (err2)\n                  onerror(err2);\n                else\n                  onload(data.buffer);\n              });\n            };\n          } else {\n            read_ = function(url) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, false);\n              xhr.send(null);\n              return xhr.responseText;\n            };\n            if (ENVIRONMENT_IS_WORKER) {\n              readBinary = function(url) {\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url, false);\n                xhr.responseType = \"arraybuffer\";\n                xhr.send(null);\n                return new Uint8Array(xhr.response);\n              };\n            }\n            readAsync = function(url, onload, onerror) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, true);\n              xhr.responseType = \"arraybuffer\";\n              xhr.onload = function() {\n                if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                  onload(xhr.response);\n                  return;\n                }\n                onerror();\n              };\n              xhr.onerror = onerror;\n              xhr.send(null);\n            };\n          }\n          setWindowTitle = function(title) {\n            document.title = title;\n          };\n        } else {\n        }\n        if (ENVIRONMENT_IS_NODE) {\n          if (typeof performance === \"undefined\") {\n            global.performance = __require(\"perf_hooks\").performance;\n          }\n        }\n        var out = Module[\"print\"] || console.log.bind(console);\n        var err = Module[\"printErr\"] || console.warn.bind(console);\n        for (key in moduleOverrides) {\n          if (moduleOverrides.hasOwnProperty(key)) {\n            Module[key] = moduleOverrides[key];\n          }\n        }\n        moduleOverrides = null;\n        if (Module[\"arguments\"])\n          arguments_ = Module[\"arguments\"];\n        if (Module[\"thisProgram\"])\n          thisProgram = Module[\"thisProgram\"];\n        if (Module[\"quit\"])\n          quit_ = Module[\"quit\"];\n        var STACK_ALIGN = 16;\n        function alignMemory(size, factor) {\n          if (!factor)\n            factor = STACK_ALIGN;\n          return Math.ceil(size / factor) * factor;\n        }\n        function warnOnce(text) {\n          if (!warnOnce.shown)\n            warnOnce.shown = {};\n          if (!warnOnce.shown[text]) {\n            warnOnce.shown[text] = 1;\n            err(text);\n          }\n        }\n        var tempRet0 = 0;\n        var setTempRet0 = function(value) {\n          tempRet0 = value;\n        };\n        var Atomics_load = Atomics.load;\n        var Atomics_store = Atomics.store;\n        var Atomics_compareExchange = Atomics.compareExchange;\n        var wasmBinary;\n        if (Module[\"wasmBinary\"])\n          wasmBinary = Module[\"wasmBinary\"];\n        var noExitRuntime = Module[\"noExitRuntime\"] || true;\n        if (typeof WebAssembly !== \"object\") {\n          abort(\"no native wasm support detected\");\n        }\n        var wasmMemory;\n        var wasmModule;\n        var ABORT = false;\n        var EXITSTATUS;\n        function assert(condition, text) {\n          if (!condition) {\n            abort(\"Assertion failed: \" + text);\n          }\n        }\n        function TextDecoderWrapper(encoding) {\n          var textDecoder = new TextDecoder(encoding);\n          this.decode = function(data) {\n            if (data.buffer instanceof SharedArrayBuffer) {\n              data = new Uint8Array(data);\n            }\n            return textDecoder.decode.call(textDecoder, data);\n          };\n        }\n        var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoderWrapper(\"utf8\") : void 0;\n        function UTF8ArrayToString(heap, idx, maxBytesToRead) {\n          idx >>>= 0;\n          var endIdx = idx + maxBytesToRead;\n          var endPtr = idx;\n          while (heap[endPtr >>> 0] && !(endPtr >= endIdx))\n            ++endPtr;\n          if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n            return UTF8Decoder.decode(heap.subarray(idx >>> 0, endPtr >>> 0));\n          } else {\n            var str = \"\";\n            while (idx < endPtr) {\n              var u0 = heap[idx++ >>> 0];\n              if (!(u0 & 128)) {\n                str += String.fromCharCode(u0);\n                continue;\n              }\n              var u1 = heap[idx++ >>> 0] & 63;\n              if ((u0 & 224) == 192) {\n                str += String.fromCharCode((u0 & 31) << 6 | u1);\n                continue;\n              }\n              var u2 = heap[idx++ >>> 0] & 63;\n              if ((u0 & 240) == 224) {\n                u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n              } else {\n                u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++ >>> 0] & 63;\n              }\n              if (u0 < 65536) {\n                str += String.fromCharCode(u0);\n              } else {\n                var ch = u0 - 65536;\n                str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n              }\n            }\n          }\n          return str;\n        }\n        function UTF8ToString(ptr, maxBytesToRead) {\n          ptr >>>= 0;\n          return ptr ? UTF8ArrayToString(GROWABLE_HEAP_U8(), ptr, maxBytesToRead) : \"\";\n        }\n        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n          outIdx >>>= 0;\n          if (!(maxBytesToWrite > 0))\n            return 0;\n          var startIdx = outIdx;\n          var endIdx = outIdx + maxBytesToWrite - 1;\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343) {\n              var u1 = str.charCodeAt(++i);\n              u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n            }\n            if (u <= 127) {\n              if (outIdx >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = u;\n            } else if (u <= 2047) {\n              if (outIdx + 1 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 192 | u >> 6;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            } else if (u <= 65535) {\n              if (outIdx + 2 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 224 | u >> 12;\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            } else {\n              if (outIdx + 3 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 240 | u >> 18;\n              heap[outIdx++ >>> 0] = 128 | u >> 12 & 63;\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            }\n          }\n          heap[outIdx >>> 0] = 0;\n          return outIdx - startIdx;\n        }\n        function stringToUTF8(str, outPtr, maxBytesToWrite) {\n          return stringToUTF8Array(str, GROWABLE_HEAP_U8(), outPtr, maxBytesToWrite);\n        }\n        function lengthBytesUTF8(str) {\n          var len = 0;\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343)\n              u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n            if (u <= 127)\n              ++len;\n            else if (u <= 2047)\n              len += 2;\n            else if (u <= 65535)\n              len += 3;\n            else\n              len += 4;\n          }\n          return len;\n        }\n        var UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoderWrapper(\"utf-16le\") : void 0;\n        function UTF16ToString(ptr, maxBytesToRead) {\n          var endPtr = ptr;\n          var idx = endPtr >> 1;\n          var maxIdx = idx + maxBytesToRead / 2;\n          while (!(idx >= maxIdx) && GROWABLE_HEAP_U16()[idx >>> 0])\n            ++idx;\n          endPtr = idx << 1;\n          if (endPtr - ptr > 32 && UTF16Decoder) {\n            return UTF16Decoder.decode(GROWABLE_HEAP_U8().subarray(ptr >>> 0, endPtr >>> 0));\n          } else {\n            var str = \"\";\n            for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n              var codeUnit = GROWABLE_HEAP_I16()[ptr + i * 2 >>> 1];\n              if (codeUnit == 0)\n                break;\n              str += String.fromCharCode(codeUnit);\n            }\n            return str;\n          }\n        }\n        function stringToUTF16(str, outPtr, maxBytesToWrite) {\n          if (maxBytesToWrite === void 0) {\n            maxBytesToWrite = 2147483647;\n          }\n          if (maxBytesToWrite < 2)\n            return 0;\n          maxBytesToWrite -= 2;\n          var startPtr = outPtr;\n          var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n          for (var i = 0; i < numCharsToWrite; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            GROWABLE_HEAP_I16()[outPtr >>> 1] = codeUnit;\n            outPtr += 2;\n          }\n          GROWABLE_HEAP_I16()[outPtr >>> 1] = 0;\n          return outPtr - startPtr;\n        }\n        function lengthBytesUTF16(str) {\n          return str.length * 2;\n        }\n        function UTF32ToString(ptr, maxBytesToRead) {\n          var i = 0;\n          var str = \"\";\n          while (!(i >= maxBytesToRead / 4)) {\n            var utf32 = GROWABLE_HEAP_I32()[ptr + i * 4 >>> 2];\n            if (utf32 == 0)\n              break;\n            ++i;\n            if (utf32 >= 65536) {\n              var ch = utf32 - 65536;\n              str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n            } else {\n              str += String.fromCharCode(utf32);\n            }\n          }\n          return str;\n        }\n        function stringToUTF32(str, outPtr, maxBytesToWrite) {\n          outPtr >>>= 0;\n          if (maxBytesToWrite === void 0) {\n            maxBytesToWrite = 2147483647;\n          }\n          if (maxBytesToWrite < 4)\n            return 0;\n          var startPtr = outPtr;\n          var endPtr = startPtr + maxBytesToWrite - 4;\n          for (var i = 0; i < str.length; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            if (codeUnit >= 55296 && codeUnit <= 57343) {\n              var trailSurrogate = str.charCodeAt(++i);\n              codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n            }\n            GROWABLE_HEAP_I32()[outPtr >>> 2] = codeUnit;\n            outPtr += 4;\n            if (outPtr + 4 > endPtr)\n              break;\n          }\n          GROWABLE_HEAP_I32()[outPtr >>> 2] = 0;\n          return outPtr - startPtr;\n        }\n        function lengthBytesUTF32(str) {\n          var len = 0;\n          for (var i = 0; i < str.length; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            if (codeUnit >= 55296 && codeUnit <= 57343)\n              ++i;\n            len += 4;\n          }\n          return len;\n        }\n        function writeArrayToMemory(array, buffer2) {\n          GROWABLE_HEAP_I8().set(array, buffer2 >>> 0);\n        }\n        function writeAsciiToMemory(str, buffer2, dontAddNull) {\n          for (var i = 0; i < str.length; ++i) {\n            GROWABLE_HEAP_I8()[buffer2++ >>> 0] = str.charCodeAt(i);\n          }\n          if (!dontAddNull)\n            GROWABLE_HEAP_I8()[buffer2 >>> 0] = 0;\n        }\n        function alignUp(x, multiple) {\n          if (x % multiple > 0) {\n            x += multiple - x % multiple;\n          }\n          return x;\n        }\n        var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n        if (ENVIRONMENT_IS_PTHREAD) {\n          buffer = Module[\"buffer\"];\n        }\n        function updateGlobalBufferAndViews(buf) {\n          buffer = buf;\n          Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n          Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n          Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n          Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n          Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n          Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n          Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n          Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n        }\n        var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n        if (ENVIRONMENT_IS_PTHREAD) {\n          wasmMemory = Module[\"wasmMemory\"];\n          buffer = Module[\"buffer\"];\n        } else {\n          if (Module[\"wasmMemory\"]) {\n            wasmMemory = Module[\"wasmMemory\"];\n          } else {\n            wasmMemory = new WebAssembly.Memory({ \"initial\": INITIAL_MEMORY / 65536, \"maximum\": 4294967296 / 65536, \"shared\": true });\n            if (!(wasmMemory.buffer instanceof SharedArrayBuffer)) {\n              err(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\");\n              if (ENVIRONMENT_IS_NODE) {\n                console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\");\n              }\n              throw Error(\"bad memory\");\n            }\n          }\n        }\n        if (wasmMemory) {\n          buffer = wasmMemory.buffer;\n        }\n        INITIAL_MEMORY = buffer.byteLength;\n        updateGlobalBufferAndViews(buffer);\n        var wasmTable;\n        var __ATPRERUN__ = [];\n        var __ATINIT__ = [];\n        var __ATMAIN__ = [];\n        var __ATEXIT__ = [];\n        var __ATPOSTRUN__ = [];\n        var runtimeInitialized = false;\n        var runtimeExited = false;\n        var runtimeKeepaliveCounter = 0;\n        function keepRuntimeAlive() {\n          return noExitRuntime || runtimeKeepaliveCounter > 0;\n        }\n        function preRun() {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return;\n          if (Module[\"preRun\"]) {\n            if (typeof Module[\"preRun\"] == \"function\")\n              Module[\"preRun\"] = [Module[\"preRun\"]];\n            while (Module[\"preRun\"].length) {\n              addOnPreRun(Module[\"preRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPRERUN__);\n        }\n        function initRuntime() {\n          runtimeInitialized = true;\n          if (ENVIRONMENT_IS_PTHREAD)\n            return;\n          if (!Module[\"noFSInit\"] && !FS.init.initialized)\n            FS.init();\n          FS.ignorePermissions = false;\n          TTY.init();\n          callRuntimeCallbacks(__ATINIT__);\n        }\n        function preMain() {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return;\n          callRuntimeCallbacks(__ATMAIN__);\n        }\n        function exitRuntime() {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return;\n          runtimeExited = true;\n        }\n        function postRun() {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return;\n          if (Module[\"postRun\"]) {\n            if (typeof Module[\"postRun\"] == \"function\")\n              Module[\"postRun\"] = [Module[\"postRun\"]];\n            while (Module[\"postRun\"].length) {\n              addOnPostRun(Module[\"postRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPOSTRUN__);\n        }\n        function addOnPreRun(cb) {\n          __ATPRERUN__.unshift(cb);\n        }\n        function addOnInit(cb) {\n          __ATINIT__.unshift(cb);\n        }\n        function addOnPostRun(cb) {\n          __ATPOSTRUN__.unshift(cb);\n        }\n        var runDependencies = 0;\n        var runDependencyWatcher = null;\n        var dependenciesFulfilled = null;\n        function getUniqueRunDependency(id) {\n          return id;\n        }\n        function addRunDependency(id) {\n          runDependencies++;\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n        }\n        function removeRunDependency(id) {\n          runDependencies--;\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n          if (runDependencies == 0) {\n            if (runDependencyWatcher !== null) {\n              clearInterval(runDependencyWatcher);\n              runDependencyWatcher = null;\n            }\n            if (dependenciesFulfilled) {\n              var callback = dependenciesFulfilled;\n              dependenciesFulfilled = null;\n              callback();\n            }\n          }\n        }\n        Module[\"preloadedImages\"] = {};\n        Module[\"preloadedAudios\"] = {};\n        function abort(what) {\n          if (Module[\"onAbort\"]) {\n            Module[\"onAbort\"](what);\n          }\n          if (ENVIRONMENT_IS_PTHREAD)\n            console.error(\"Pthread aborting at \" + new Error().stack);\n          what += \"\";\n          err(what);\n          ABORT = true;\n          EXITSTATUS = 1;\n          what = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n          var e = new WebAssembly.RuntimeError(what);\n          readyPromiseReject(e);\n          throw e;\n        }\n        var dataURIPrefix = \"data:application/octet-stream;base64,\";\n        function isDataURI(filename) {\n          return filename.startsWith(dataURIPrefix);\n        }\n        function isFileURI(filename) {\n          return filename.startsWith(\"file://\");\n        }\n        var wasmBinaryFile;\n        wasmBinaryFile = \"web-ifc-mt.wasm\";\n        if (!isDataURI(wasmBinaryFile)) {\n          wasmBinaryFile = locateFile(wasmBinaryFile);\n        }\n        function getBinary(file) {\n          try {\n            if (file == wasmBinaryFile && wasmBinary) {\n              return new Uint8Array(wasmBinary);\n            }\n            if (readBinary) {\n              return readBinary(file);\n            } else {\n              throw \"both async and sync fetching of the wasm failed\";\n            }\n          } catch (err2) {\n            abort(err2);\n          }\n        }\n        function getBinaryPromise() {\n          if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n            if (typeof fetch === \"function\" && !isFileURI(wasmBinaryFile)) {\n              return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\n                if (!response[\"ok\"]) {\n                  throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n                }\n                return response[\"arrayBuffer\"]();\n              }).catch(function() {\n                return getBinary(wasmBinaryFile);\n              });\n            } else {\n              if (readAsync) {\n                return new Promise(function(resolve, reject) {\n                  readAsync(wasmBinaryFile, function(response) {\n                    resolve(new Uint8Array(response));\n                  }, reject);\n                });\n              }\n            }\n          }\n          return Promise.resolve().then(function() {\n            return getBinary(wasmBinaryFile);\n          });\n        }\n        function createWasm() {\n          var info = { \"a\": asmLibraryArg };\n          function receiveInstance(instance, module2) {\n            var exports3 = instance.exports;\n            Module[\"asm\"] = exports3;\n            wasmTable = Module[\"asm\"][\"ta\"];\n            addOnInit(Module[\"asm\"][\"oa\"]);\n            PThread.tlsInitFunctions.push(Module[\"asm\"][\"sa\"]);\n            wasmModule = module2;\n            if (!ENVIRONMENT_IS_PTHREAD) {\n              var numWorkersToLoad = PThread.unusedWorkers.length;\n              PThread.unusedWorkers.forEach(function(w) {\n                PThread.loadWasmModuleToWorker(w, function() {\n                  if (!--numWorkersToLoad)\n                    removeRunDependency(\"wasm-instantiate\");\n                });\n              });\n            }\n          }\n          if (!ENVIRONMENT_IS_PTHREAD) {\n            addRunDependency(\"wasm-instantiate\");\n          }\n          function receiveInstantiationResult(result) {\n            receiveInstance(result[\"instance\"], result[\"module\"]);\n          }\n          function instantiateArrayBuffer(receiver) {\n            return getBinaryPromise().then(function(binary) {\n              var result = WebAssembly.instantiate(binary, info);\n              return result;\n            }).then(receiver, function(reason) {\n              err(\"failed to asynchronously prepare wasm: \" + reason);\n              abort(reason);\n            });\n          }\n          function instantiateAsync() {\n            if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && typeof fetch === \"function\") {\n              return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\n                var result = WebAssembly.instantiateStreaming(response, info);\n                return result.then(receiveInstantiationResult, function(reason) {\n                  err(\"wasm streaming compile failed: \" + reason);\n                  err(\"falling back to ArrayBuffer instantiation\");\n                  return instantiateArrayBuffer(receiveInstantiationResult);\n                });\n              });\n            } else {\n              return instantiateArrayBuffer(receiveInstantiationResult);\n            }\n          }\n          if (Module[\"instantiateWasm\"]) {\n            try {\n              var exports2 = Module[\"instantiateWasm\"](info, receiveInstance);\n              return exports2;\n            } catch (e) {\n              err(\"Module.instantiateWasm callback failed with error: \" + e);\n              return false;\n            }\n          }\n          instantiateAsync().catch(readyPromiseReject);\n          return {};\n        }\n        var tempDouble;\n        var tempI64;\n        var ASM_CONSTS = { 44848: function() {\n          throw \"Canceled!\";\n        }, 44866: function($0, $1) {\n          setTimeout(function() {\n            __emscripten_do_dispatch_to_thread($0, $1);\n          }, 0);\n        } };\n        function initPthreadsJS() {\n          PThread.initRuntime();\n        }\n        function callRuntimeCallbacks(callbacks) {\n          while (callbacks.length > 0) {\n            var callback = callbacks.shift();\n            if (typeof callback == \"function\") {\n              callback(Module);\n              continue;\n            }\n            var func = callback.func;\n            if (typeof func === \"number\") {\n              if (callback.arg === void 0) {\n                wasmTable.get(func)();\n              } else {\n                wasmTable.get(func)(callback.arg);\n              }\n            } else {\n              func(callback.arg === void 0 ? null : callback.arg);\n            }\n          }\n        }\n        function _emscripten_futex_wake(addr, count) {\n          if (addr <= 0 || addr > GROWABLE_HEAP_I8().length || addr & true || count < 0)\n            return -28;\n          if (count == 0)\n            return 0;\n          if (count >= 2147483647)\n            count = Infinity;\n          var mainThreadWaitAddress = Atomics.load(GROWABLE_HEAP_I32(), __emscripten_main_thread_futex >> 2);\n          var mainThreadWoken = 0;\n          if (mainThreadWaitAddress == addr) {\n            var loadedAddr = Atomics.compareExchange(GROWABLE_HEAP_I32(), __emscripten_main_thread_futex >> 2, mainThreadWaitAddress, 0);\n            if (loadedAddr == mainThreadWaitAddress) {\n              --count;\n              mainThreadWoken = 1;\n              if (count <= 0)\n                return 1;\n            }\n          }\n          var ret = Atomics.notify(GROWABLE_HEAP_I32(), addr >> 2, count);\n          if (ret >= 0)\n            return ret + mainThreadWoken;\n          throw \"Atomics.notify returned an unexpected value \" + ret;\n        }\n        Module[\"_emscripten_futex_wake\"] = _emscripten_futex_wake;\n        function killThread(pthread_ptr) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            throw \"Internal Error! killThread() can only ever be called from main application thread!\";\n          if (!pthread_ptr)\n            throw \"Internal Error! Null pthread_ptr in killThread!\";\n          GROWABLE_HEAP_I32()[pthread_ptr + 12 >>> 2] = 0;\n          var pthread = PThread.pthreads[pthread_ptr];\n          pthread.worker.terminate();\n          PThread.freeThreadData(pthread);\n          PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(pthread.worker), 1);\n          pthread.worker.pthread = void 0;\n        }\n        function cancelThread(pthread_ptr) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            throw \"Internal Error! cancelThread() can only ever be called from main application thread!\";\n          if (!pthread_ptr)\n            throw \"Internal Error! Null pthread_ptr in cancelThread!\";\n          var pthread = PThread.pthreads[pthread_ptr];\n          pthread.worker.postMessage({ \"cmd\": \"cancel\" });\n        }\n        function cleanupThread(pthread_ptr) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            throw \"Internal Error! cleanupThread() can only ever be called from main application thread!\";\n          if (!pthread_ptr)\n            throw \"Internal Error! Null pthread_ptr in cleanupThread!\";\n          var pthread = PThread.pthreads[pthread_ptr];\n          if (pthread) {\n            GROWABLE_HEAP_I32()[pthread_ptr + 12 >>> 2] = 0;\n            var worker = pthread.worker;\n            PThread.returnWorkerToPool(worker);\n          }\n        }\n        var PThread = { unusedWorkers: [], runningWorkers: [], tlsInitFunctions: [], initMainThreadBlock: function() {\n          var pthreadPoolSize = navigator.hardwareConcurrency;\n          for (var i = 0; i < pthreadPoolSize; ++i) {\n            PThread.allocateUnusedWorker();\n          }\n        }, initRuntime: function() {\n          var tb = _malloc(228);\n          for (var i = 0; i < 228 / 4; ++i)\n            GROWABLE_HEAP_U32()[tb / 4 + i >>> 0] = 0;\n          GROWABLE_HEAP_I32()[tb + 12 >>> 2] = tb;\n          var headPtr = tb + 152;\n          GROWABLE_HEAP_I32()[headPtr >>> 2] = headPtr;\n          var tlsMemory = _malloc(512);\n          for (var i = 0; i < 128; ++i)\n            GROWABLE_HEAP_U32()[tlsMemory / 4 + i >>> 0] = 0;\n          Atomics.store(GROWABLE_HEAP_U32(), tb + 100 >> 2, tlsMemory);\n          Atomics.store(GROWABLE_HEAP_U32(), tb + 40 >> 2, tb);\n          __emscripten_thread_init(tb, !ENVIRONMENT_IS_WORKER, 1);\n          _emscripten_register_main_browser_thread_id(tb);\n        }, initWorker: function() {\n        }, pthreads: {}, threadExitHandlers: [], runExitHandlers: function() {\n          while (PThread.threadExitHandlers.length > 0) {\n            PThread.threadExitHandlers.pop()();\n          }\n          ___pthread_tsd_run_dtors();\n        }, runExitHandlersAndDeinitThread: function(tb, exitCode) {\n          Atomics.store(GROWABLE_HEAP_U32(), tb + 56 >> 2, 1);\n          Atomics.store(GROWABLE_HEAP_U32(), tb + 60 >> 2, 0);\n          PThread.runExitHandlers();\n          Atomics.store(GROWABLE_HEAP_U32(), tb + 4 >> 2, exitCode);\n          Atomics.store(GROWABLE_HEAP_U32(), tb + 0 >> 2, 1);\n          _emscripten_futex_wake(tb + 0, 2147483647);\n          __emscripten_thread_init(0, 0, 0);\n        }, setExitStatus: function(status) {\n          EXITSTATUS = status;\n        }, threadExit: function(exitCode) {\n          var tb = _pthread_self();\n          if (tb) {\n            PThread.runExitHandlersAndDeinitThread(tb, exitCode);\n            if (ENVIRONMENT_IS_PTHREAD) {\n              postMessage({ \"cmd\": \"exit\" });\n            }\n          }\n        }, threadCancel: function() {\n          PThread.runExitHandlersAndDeinitThread(_pthread_self(), -1);\n          postMessage({ \"cmd\": \"cancelDone\" });\n        }, terminateAllThreads: function() {\n          for (var t in PThread.pthreads) {\n            var pthread = PThread.pthreads[t];\n            if (pthread && pthread.worker) {\n              PThread.returnWorkerToPool(pthread.worker);\n            }\n          }\n          PThread.pthreads = {};\n          for (var i = 0; i < PThread.unusedWorkers.length; ++i) {\n            var worker = PThread.unusedWorkers[i];\n            worker.terminate();\n          }\n          PThread.unusedWorkers = [];\n          for (var i = 0; i < PThread.runningWorkers.length; ++i) {\n            var worker = PThread.runningWorkers[i];\n            var pthread = worker.pthread;\n            PThread.freeThreadData(pthread);\n            worker.terminate();\n          }\n          PThread.runningWorkers = [];\n        }, freeThreadData: function(pthread) {\n          if (!pthread)\n            return;\n          if (pthread.threadInfoStruct) {\n            var tlsMemory = GROWABLE_HEAP_I32()[pthread.threadInfoStruct + 100 >>> 2];\n            GROWABLE_HEAP_I32()[pthread.threadInfoStruct + 100 >>> 2] = 0;\n            _free(tlsMemory);\n            _free(pthread.threadInfoStruct);\n          }\n          pthread.threadInfoStruct = 0;\n          if (pthread.allocatedOwnStack && pthread.stackBase)\n            _free(pthread.stackBase);\n          pthread.stackBase = 0;\n          if (pthread.worker)\n            pthread.worker.pthread = null;\n        }, returnWorkerToPool: function(worker) {\n          PThread.runWithoutMainThreadQueuedCalls(function() {\n            delete PThread.pthreads[worker.pthread.threadInfoStruct];\n            PThread.unusedWorkers.push(worker);\n            PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker), 1);\n            PThread.freeThreadData(worker.pthread);\n            worker.pthread = void 0;\n          });\n        }, runWithoutMainThreadQueuedCalls: function(func) {\n          GROWABLE_HEAP_I32()[__emscripten_allow_main_runtime_queued_calls >>> 2] = 0;\n          try {\n            func();\n          } finally {\n            GROWABLE_HEAP_I32()[__emscripten_allow_main_runtime_queued_calls >>> 2] = 1;\n          }\n        }, receiveObjectTransfer: function(data) {\n        }, threadInit: function() {\n          for (var i in PThread.tlsInitFunctions) {\n            PThread.tlsInitFunctions[i]();\n          }\n        }, loadWasmModuleToWorker: function(worker, onFinishedLoading) {\n          worker.onmessage = function(e) {\n            var d = e[\"data\"];\n            var cmd = d[\"cmd\"];\n            if (worker.pthread)\n              PThread.currentProxiedOperationCallerThread = worker.pthread.threadInfoStruct;\n            if (d[\"targetThread\"] && d[\"targetThread\"] != _pthread_self()) {\n              var thread = PThread.pthreads[d.targetThread];\n              if (thread) {\n                thread.worker.postMessage(e.data, d[\"transferList\"]);\n              } else {\n                console.error('Internal error! Worker sent a message \"' + cmd + '\" to target pthread ' + d[\"targetThread\"] + \", but that thread no longer exists!\");\n              }\n              PThread.currentProxiedOperationCallerThread = void 0;\n              return;\n            }\n            if (cmd === \"processQueuedMainThreadWork\") {\n              _emscripten_main_thread_process_queued_calls();\n            } else if (cmd === \"spawnThread\") {\n              spawnThread(e.data);\n            } else if (cmd === \"cleanupThread\") {\n              cleanupThread(d[\"thread\"]);\n            } else if (cmd === \"killThread\") {\n              killThread(d[\"thread\"]);\n            } else if (cmd === \"cancelThread\") {\n              cancelThread(d[\"thread\"]);\n            } else if (cmd === \"loaded\") {\n              worker.loaded = true;\n              if (onFinishedLoading)\n                onFinishedLoading(worker);\n              if (worker.runPthread) {\n                worker.runPthread();\n                delete worker.runPthread;\n              }\n            } else if (cmd === \"print\") {\n              out(\"Thread \" + d[\"threadId\"] + \": \" + d[\"text\"]);\n            } else if (cmd === \"printErr\") {\n              err(\"Thread \" + d[\"threadId\"] + \": \" + d[\"text\"]);\n            } else if (cmd === \"alert\") {\n              alert(\"Thread \" + d[\"threadId\"] + \": \" + d[\"text\"]);\n            } else if (cmd === \"exit\") {\n              var detached = worker.pthread && Atomics.load(GROWABLE_HEAP_U32(), worker.pthread.threadInfoStruct + 64 >> 2);\n              if (detached) {\n                PThread.returnWorkerToPool(worker);\n              }\n            } else if (cmd === \"exitProcess\") {\n              try {\n                exit(d[\"returnCode\"]);\n              } catch (e2) {\n                if (e2 instanceof ExitStatus)\n                  return;\n                throw e2;\n              }\n            } else if (cmd === \"cancelDone\") {\n              PThread.returnWorkerToPool(worker);\n            } else if (cmd === \"objectTransfer\") {\n              PThread.receiveObjectTransfer(e.data);\n            } else if (e.data.target === \"setimmediate\") {\n              worker.postMessage(e.data);\n            } else {\n              err(\"worker sent an unknown command \" + cmd);\n            }\n            PThread.currentProxiedOperationCallerThread = void 0;\n          };\n          worker.onerror = function(e) {\n            err(\"pthread sent an error! \" + e.filename + \":\" + e.lineno + \": \" + e.message);\n          };\n          if (ENVIRONMENT_IS_NODE) {\n            worker.on(\"message\", function(data) {\n              worker.onmessage({ data });\n            });\n            worker.on(\"error\", function(data) {\n              worker.onerror(data);\n            });\n            worker.on(\"exit\", function(data) {\n            });\n          }\n          worker.postMessage({ \"cmd\": \"load\", \"urlOrBlob\": Module[\"mainScriptUrlOrBlob\"] || _scriptDir, \"wasmMemory\": wasmMemory, \"wasmModule\": wasmModule });\n        }, allocateUnusedWorker: function() {\n          var pthreadMainJs = locateFile(\"web-ifc-mt.worker.js\");\n          PThread.unusedWorkers.push(new Worker(pthreadMainJs));\n        }, getNewWorker: function() {\n          if (PThread.unusedWorkers.length == 0) {\n            PThread.allocateUnusedWorker();\n            PThread.loadWasmModuleToWorker(PThread.unusedWorkers[0]);\n          }\n          return PThread.unusedWorkers.pop();\n        }, busySpinWait: function(msecs) {\n          var t = performance.now() + msecs;\n          while (performance.now() < t) {\n          }\n        } };\n        function establishStackSpace(stackTop, stackMax) {\n          _emscripten_stack_set_limits(stackTop, stackMax);\n          stackRestore(stackTop);\n        }\n        Module[\"establishStackSpace\"] = establishStackSpace;\n        function invokeEntryPoint(ptr, arg) {\n          return wasmTable.get(ptr)(arg);\n        }\n        Module[\"invokeEntryPoint\"] = invokeEntryPoint;\n        function ___assert_fail(condition, filename, line, func) {\n          abort(\"Assertion failed: \" + UTF8ToString(condition) + \", at: \" + [filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\"]);\n        }\n        var _emscripten_get_now;\n        if (ENVIRONMENT_IS_NODE) {\n          _emscripten_get_now = function() {\n            var t = process[\"hrtime\"]();\n            return t[0] * 1e3 + t[1] / 1e6;\n          };\n        } else if (ENVIRONMENT_IS_PTHREAD) {\n          _emscripten_get_now = function() {\n            return performance.now() - Module[\"__performance_now_clock_drift\"];\n          };\n        } else\n          _emscripten_get_now = function() {\n            return performance.now();\n          };\n        var _emscripten_get_now_is_monotonic = true;\n        function setErrNo(value) {\n          GROWABLE_HEAP_I32()[___errno_location() >>> 2] = value;\n          return value;\n        }\n        function _clock_gettime(clk_id, tp) {\n          var now;\n          if (clk_id === 0) {\n            now = Date.now();\n          } else if ((clk_id === 1 || clk_id === 4) && _emscripten_get_now_is_monotonic) {\n            now = _emscripten_get_now();\n          } else {\n            setErrNo(28);\n            return -1;\n          }\n          GROWABLE_HEAP_I32()[tp >>> 2] = now / 1e3 | 0;\n          GROWABLE_HEAP_I32()[tp + 4 >>> 2] = now % 1e3 * 1e3 * 1e3 | 0;\n          return 0;\n        }\n        function ___cxa_allocate_exception(size) {\n          return _malloc(size + 16) + 16;\n        }\n        function _atexit(func, arg) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(1, 1, func, arg);\n        }\n        function ___cxa_thread_atexit(routine, arg) {\n          PThread.threadExitHandlers.push(function() {\n            wasmTable.get(routine)(arg);\n          });\n        }\n        function ExceptionInfo(excPtr) {\n          this.excPtr = excPtr;\n          this.ptr = excPtr - 16;\n          this.set_type = function(type) {\n            GROWABLE_HEAP_I32()[this.ptr + 4 >>> 2] = type;\n          };\n          this.get_type = function() {\n            return GROWABLE_HEAP_I32()[this.ptr + 4 >>> 2];\n          };\n          this.set_destructor = function(destructor) {\n            GROWABLE_HEAP_I32()[this.ptr + 8 >>> 2] = destructor;\n          };\n          this.get_destructor = function() {\n            return GROWABLE_HEAP_I32()[this.ptr + 8 >>> 2];\n          };\n          this.set_refcount = function(refcount) {\n            GROWABLE_HEAP_I32()[this.ptr >>> 2] = refcount;\n          };\n          this.set_caught = function(caught) {\n            caught = caught ? 1 : 0;\n            GROWABLE_HEAP_I8()[this.ptr + 12 >>> 0] = caught;\n          };\n          this.get_caught = function() {\n            return GROWABLE_HEAP_I8()[this.ptr + 12 >>> 0] != 0;\n          };\n          this.set_rethrown = function(rethrown) {\n            rethrown = rethrown ? 1 : 0;\n            GROWABLE_HEAP_I8()[this.ptr + 13 >>> 0] = rethrown;\n          };\n          this.get_rethrown = function() {\n            return GROWABLE_HEAP_I8()[this.ptr + 13 >>> 0] != 0;\n          };\n          this.init = function(type, destructor) {\n            this.set_type(type);\n            this.set_destructor(destructor);\n            this.set_refcount(0);\n            this.set_caught(false);\n            this.set_rethrown(false);\n          };\n          this.add_ref = function() {\n            Atomics.add(GROWABLE_HEAP_I32(), this.ptr + 0 >> 2, 1);\n          };\n          this.release_ref = function() {\n            var prev = Atomics.sub(GROWABLE_HEAP_I32(), this.ptr + 0 >> 2, 1);\n            return prev === 1;\n          };\n        }\n        var exceptionLast = 0;\n        var uncaughtExceptionCount = 0;\n        function ___cxa_throw(ptr, type, destructor) {\n          var info = new ExceptionInfo(ptr);\n          info.init(type, destructor);\n          exceptionLast = ptr;\n          uncaughtExceptionCount++;\n          throw ptr;\n        }\n        var PATH = { splitPath: function(filename) {\n          var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n          return splitPathRe.exec(filename).slice(1);\n        }, normalizeArray: function(parts, allowAboveRoot) {\n          var up = 0;\n          for (var i = parts.length - 1; i >= 0; i--) {\n            var last = parts[i];\n            if (last === \".\") {\n              parts.splice(i, 1);\n            } else if (last === \"..\") {\n              parts.splice(i, 1);\n              up++;\n            } else if (up) {\n              parts.splice(i, 1);\n              up--;\n            }\n          }\n          if (allowAboveRoot) {\n            for (; up; up--) {\n              parts.unshift(\"..\");\n            }\n          }\n          return parts;\n        }, normalize: function(path) {\n          var isAbsolute = path.charAt(0) === \"/\", trailingSlash = path.substr(-1) === \"/\";\n          path = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n            return !!p;\n          }), !isAbsolute).join(\"/\");\n          if (!path && !isAbsolute) {\n            path = \".\";\n          }\n          if (path && trailingSlash) {\n            path += \"/\";\n          }\n          return (isAbsolute ? \"/\" : \"\") + path;\n        }, dirname: function(path) {\n          var result = PATH.splitPath(path), root = result[0], dir = result[1];\n          if (!root && !dir) {\n            return \".\";\n          }\n          if (dir) {\n            dir = dir.substr(0, dir.length - 1);\n          }\n          return root + dir;\n        }, basename: function(path) {\n          if (path === \"/\")\n            return \"/\";\n          path = PATH.normalize(path);\n          path = path.replace(/\\/$/, \"\");\n          var lastSlash = path.lastIndexOf(\"/\");\n          if (lastSlash === -1)\n            return path;\n          return path.substr(lastSlash + 1);\n        }, extname: function(path) {\n          return PATH.splitPath(path)[3];\n        }, join: function() {\n          var paths = Array.prototype.slice.call(arguments, 0);\n          return PATH.normalize(paths.join(\"/\"));\n        }, join2: function(l, r) {\n          return PATH.normalize(l + \"/\" + r);\n        } };\n        function getRandomDevice() {\n          if (typeof crypto === \"object\" && typeof crypto[\"getRandomValues\"] === \"function\") {\n            var randomBuffer = new Uint8Array(1);\n            return function() {\n              crypto.getRandomValues(randomBuffer);\n              return randomBuffer[0];\n            };\n          } else if (ENVIRONMENT_IS_NODE) {\n            try {\n              var crypto_module = require_crypto();\n              return function() {\n                return crypto_module[\"randomBytes\"](1)[0];\n              };\n            } catch (e) {\n            }\n          }\n          return function() {\n            abort(\"randomDevice\");\n          };\n        }\n        var PATH_FS = { resolve: function() {\n          var resolvedPath = \"\", resolvedAbsolute = false;\n          for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            var path = i >= 0 ? arguments[i] : FS.cwd();\n            if (typeof path !== \"string\") {\n              throw new TypeError(\"Arguments to path.resolve must be strings\");\n            } else if (!path) {\n              return \"\";\n            }\n            resolvedPath = path + \"/\" + resolvedPath;\n            resolvedAbsolute = path.charAt(0) === \"/\";\n          }\n          resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p) {\n            return !!p;\n          }), !resolvedAbsolute).join(\"/\");\n          return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n        }, relative: function(from, to) {\n          from = PATH_FS.resolve(from).substr(1);\n          to = PATH_FS.resolve(to).substr(1);\n          function trim(arr) {\n            var start = 0;\n            for (; start < arr.length; start++) {\n              if (arr[start] !== \"\")\n                break;\n            }\n            var end = arr.length - 1;\n            for (; end >= 0; end--) {\n              if (arr[end] !== \"\")\n                break;\n            }\n            if (start > end)\n              return [];\n            return arr.slice(start, end - start + 1);\n          }\n          var fromParts = trim(from.split(\"/\"));\n          var toParts = trim(to.split(\"/\"));\n          var length = Math.min(fromParts.length, toParts.length);\n          var samePartsLength = length;\n          for (var i = 0; i < length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n              samePartsLength = i;\n              break;\n            }\n          }\n          var outputParts = [];\n          for (var i = samePartsLength; i < fromParts.length; i++) {\n            outputParts.push(\"..\");\n          }\n          outputParts = outputParts.concat(toParts.slice(samePartsLength));\n          return outputParts.join(\"/\");\n        } };\n        var TTY = { ttys: [], init: function() {\n        }, shutdown: function() {\n        }, register: function(dev, ops) {\n          TTY.ttys[dev] = { input: [], output: [], ops };\n          FS.registerDevice(dev, TTY.stream_ops);\n        }, stream_ops: { open: function(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        }, close: function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        }, flush: function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        }, read: function(stream, buffer2, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === void 0 && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === void 0)\n              break;\n            bytesRead++;\n            buffer2[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        }, write: function(stream, buffer2, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer2[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        } }, default_tty_ops: { get_char: function(tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (ENVIRONMENT_IS_NODE) {\n              var BUFSIZE = 256;\n              var buf = Buffer.alloc(BUFSIZE);\n              var bytesRead = 0;\n              try {\n                bytesRead = nodeFS.readSync(process.stdin.fd, buf, 0, BUFSIZE, null);\n              } catch (e) {\n                if (e.toString().includes(\"EOF\"))\n                  bytesRead = 0;\n                else\n                  throw e;\n              }\n              if (bytesRead > 0) {\n                result = buf.slice(0, bytesRead).toString(\"utf-8\");\n              } else {\n                result = null;\n              }\n            } else if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n              result = window.prompt(\"Input: \");\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            } else if (typeof readline == \"function\") {\n              result = readline();\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        }, put_char: function(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0)\n              tty.output.push(val);\n          }\n        }, flush: function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        } }, default_tty1_ops: { put_char: function(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0)\n              tty.output.push(val);\n          }\n        }, flush: function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        } } };\n        function zeroMemory(address, size) {\n          GROWABLE_HEAP_U8().fill(0, address, address + size);\n        }\n        function mmapAlloc(size) {\n          size = alignMemory(size, 65536);\n          var ptr = _memalign(65536, size);\n          if (!ptr)\n            return 0;\n          zeroMemory(ptr, size);\n          return ptr;\n        }\n        var MEMFS = { ops_table: null, mount: function(mount) {\n          return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\n        }, createNode: function(parent, name2, mode, dev) {\n          if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n            throw new FS.ErrnoError(63);\n          }\n          if (!MEMFS.ops_table) {\n            MEMFS.ops_table = { dir: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, lookup: MEMFS.node_ops.lookup, mknod: MEMFS.node_ops.mknod, rename: MEMFS.node_ops.rename, unlink: MEMFS.node_ops.unlink, rmdir: MEMFS.node_ops.rmdir, readdir: MEMFS.node_ops.readdir, symlink: MEMFS.node_ops.symlink }, stream: { llseek: MEMFS.stream_ops.llseek } }, file: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: { llseek: MEMFS.stream_ops.llseek, read: MEMFS.stream_ops.read, write: MEMFS.stream_ops.write, allocate: MEMFS.stream_ops.allocate, mmap: MEMFS.stream_ops.mmap, msync: MEMFS.stream_ops.msync } }, link: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, readlink: MEMFS.node_ops.readlink }, stream: {} }, chrdev: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: FS.chrdev_stream_ops } };\n          }\n          var node = FS.createNode(parent, name2, mode, dev);\n          if (FS.isDir(node.mode)) {\n            node.node_ops = MEMFS.ops_table.dir.node;\n            node.stream_ops = MEMFS.ops_table.dir.stream;\n            node.contents = {};\n          } else if (FS.isFile(node.mode)) {\n            node.node_ops = MEMFS.ops_table.file.node;\n            node.stream_ops = MEMFS.ops_table.file.stream;\n            node.usedBytes = 0;\n            node.contents = null;\n          } else if (FS.isLink(node.mode)) {\n            node.node_ops = MEMFS.ops_table.link.node;\n            node.stream_ops = MEMFS.ops_table.link.stream;\n          } else if (FS.isChrdev(node.mode)) {\n            node.node_ops = MEMFS.ops_table.chrdev.node;\n            node.stream_ops = MEMFS.ops_table.chrdev.stream;\n          }\n          node.timestamp = Date.now();\n          if (parent) {\n            parent.contents[name2] = node;\n            parent.timestamp = node.timestamp;\n          }\n          return node;\n        }, getFileDataAsTypedArray: function(node) {\n          if (!node.contents)\n            return new Uint8Array(0);\n          if (node.contents.subarray)\n            return node.contents.subarray(0, node.usedBytes);\n          return new Uint8Array(node.contents);\n        }, expandFileStorage: function(node, newCapacity) {\n          newCapacity >>>= 0;\n          var prevCapacity = node.contents ? node.contents.length : 0;\n          if (prevCapacity >= newCapacity)\n            return;\n          var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n          newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\n          if (prevCapacity != 0)\n            newCapacity = Math.max(newCapacity, 256);\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newCapacity);\n          if (node.usedBytes > 0)\n            node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n        }, resizeFileStorage: function(node, newSize) {\n          newSize >>>= 0;\n          if (node.usedBytes == newSize)\n            return;\n          if (newSize == 0) {\n            node.contents = null;\n            node.usedBytes = 0;\n          } else {\n            var oldContents = node.contents;\n            node.contents = new Uint8Array(newSize);\n            if (oldContents) {\n              node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n            }\n            node.usedBytes = newSize;\n          }\n        }, node_ops: { getattr: function(node) {\n          var attr = {};\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        }, setattr: function(node, attr) {\n          if (attr.mode !== void 0) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== void 0) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== void 0) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        }, lookup: function(parent, name2) {\n          throw FS.genericErrors[44];\n        }, mknod: function(parent, name2, mode, dev) {\n          return MEMFS.createNode(parent, name2, mode, dev);\n        }, rename: function(old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {\n            }\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        }, unlink: function(parent, name2) {\n          delete parent.contents[name2];\n          parent.timestamp = Date.now();\n        }, rmdir: function(parent, name2) {\n          var node = FS.lookupNode(parent, name2);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name2];\n          parent.timestamp = Date.now();\n        }, readdir: function(node) {\n          var entries = [\".\", \"..\"];\n          for (var key2 in node.contents) {\n            if (!node.contents.hasOwnProperty(key2)) {\n              continue;\n            }\n            entries.push(key2);\n          }\n          return entries;\n        }, symlink: function(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        }, readlink: function(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        } }, stream_ops: { read: function(stream, buffer2, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes)\n            return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer2.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer2[offset + i] = contents[position + i];\n          }\n          return size;\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\n          if (buffer2.buffer === GROWABLE_HEAP_I8().buffer) {\n            canOwn = false;\n          }\n          if (!length)\n            return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n          if (buffer2.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer2.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer2.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(buffer2.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer2.subarray) {\n            node.contents.set(buffer2.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer2[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        }, llseek: function(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        }, allocate: function(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        }, mmap: function(stream, address, length, position, prot, flags) {\n          if (address !== 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          if (!(flags & 2) && contents.buffer === buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            ptr >>>= 0;\n            GROWABLE_HEAP_I8().set(contents, ptr >>> 0);\n          }\n          return { ptr, allocated };\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (mmapFlags & 2) {\n            return 0;\n          }\n          var bytesWritten = MEMFS.stream_ops.write(stream, buffer2, 0, length, offset, false);\n          return 0;\n        } } };\n        function asyncLoad(url, onload, onerror, noRunDep) {\n          var dep = !noRunDep ? getUniqueRunDependency(\"al \" + url) : \"\";\n          readAsync(url, function(arrayBuffer) {\n            assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\n            onload(new Uint8Array(arrayBuffer));\n            if (dep)\n              removeRunDependency(dep);\n          }, function(event) {\n            if (onerror) {\n              onerror();\n            } else {\n              throw 'Loading data file \"' + url + '\" failed.';\n            }\n          });\n          if (dep)\n            addRunDependency(dep);\n        }\n        var FS = { root: null, mounts: [], devices: {}, streams: [], nextInode: 1, nameTable: null, currentPath: \"/\", initialized: false, ignorePermissions: true, trackingDelegate: {}, tracking: { openFlags: { READ: 1, WRITE: 2 } }, ErrnoError: null, genericErrors: {}, filesystems: null, syncFSRequests: 0, lookupPath: function(path, opts) {\n          path = PATH_FS.resolve(FS.cwd(), path);\n          opts = opts || {};\n          if (!path)\n            return { path: \"\", node: null };\n          var defaults = { follow_mount: true, recurse_count: 0 };\n          for (var key2 in defaults) {\n            if (opts[key2] === void 0) {\n              opts[key2] = defaults[key2];\n            }\n          }\n          if (opts.recurse_count > 8) {\n            throw new FS.ErrnoError(32);\n          }\n          var parts = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n            return !!p;\n          }), false);\n          var current = FS.root;\n          var current_path = \"/\";\n          for (var i = 0; i < parts.length; i++) {\n            var islast = i === parts.length - 1;\n            if (islast && opts.parent) {\n              break;\n            }\n            current = FS.lookupNode(current, parts[i]);\n            current_path = PATH.join2(current_path, parts[i]);\n            if (FS.isMountpoint(current)) {\n              if (!islast || islast && opts.follow_mount) {\n                current = current.mounted.root;\n              }\n            }\n            if (!islast || opts.follow) {\n              var count = 0;\n              while (FS.isLink(current.mode)) {\n                var link = FS.readlink(current_path);\n                current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n                var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });\n                current = lookup.node;\n                if (count++ > 40) {\n                  throw new FS.ErrnoError(32);\n                }\n              }\n            }\n          }\n          return { path: current_path, node: current };\n        }, getPath: function(node) {\n          var path;\n          while (true) {\n            if (FS.isRoot(node)) {\n              var mount = node.mount.mountpoint;\n              if (!path)\n                return mount;\n              return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path;\n            }\n            path = path ? node.name + \"/\" + path : node.name;\n            node = node.parent;\n          }\n        }, hashName: function(parentid, name2) {\n          var hash = 0;\n          for (var i = 0; i < name2.length; i++) {\n            hash = (hash << 5) - hash + name2.charCodeAt(i) | 0;\n          }\n          return (parentid + hash >>> 0) % FS.nameTable.length;\n        }, hashAddNode: function(node) {\n          var hash = FS.hashName(node.parent.id, node.name);\n          node.name_next = FS.nameTable[hash];\n          FS.nameTable[hash] = node;\n        }, hashRemoveNode: function(node) {\n          var hash = FS.hashName(node.parent.id, node.name);\n          if (FS.nameTable[hash] === node) {\n            FS.nameTable[hash] = node.name_next;\n          } else {\n            var current = FS.nameTable[hash];\n            while (current) {\n              if (current.name_next === node) {\n                current.name_next = node.name_next;\n                break;\n              }\n              current = current.name_next;\n            }\n          }\n        }, lookupNode: function(parent, name2) {\n          var errCode = FS.mayLookup(parent);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode, parent);\n          }\n          var hash = FS.hashName(parent.id, name2);\n          for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n            var nodeName = node.name;\n            if (node.parent.id === parent.id && nodeName === name2) {\n              return node;\n            }\n          }\n          return FS.lookup(parent, name2);\n        }, createNode: function(parent, name2, mode, rdev) {\n          var node = new FS.FSNode(parent, name2, mode, rdev);\n          FS.hashAddNode(node);\n          return node;\n        }, destroyNode: function(node) {\n          FS.hashRemoveNode(node);\n        }, isRoot: function(node) {\n          return node === node.parent;\n        }, isMountpoint: function(node) {\n          return !!node.mounted;\n        }, isFile: function(mode) {\n          return (mode & 61440) === 32768;\n        }, isDir: function(mode) {\n          return (mode & 61440) === 16384;\n        }, isLink: function(mode) {\n          return (mode & 61440) === 40960;\n        }, isChrdev: function(mode) {\n          return (mode & 61440) === 8192;\n        }, isBlkdev: function(mode) {\n          return (mode & 61440) === 24576;\n        }, isFIFO: function(mode) {\n          return (mode & 61440) === 4096;\n        }, isSocket: function(mode) {\n          return (mode & 49152) === 49152;\n        }, flagModes: { \"r\": 0, \"r+\": 2, \"w\": 577, \"w+\": 578, \"a\": 1089, \"a+\": 1090 }, modeStringToFlags: function(str) {\n          var flags = FS.flagModes[str];\n          if (typeof flags === \"undefined\") {\n            throw new Error(\"Unknown file open mode: \" + str);\n          }\n          return flags;\n        }, flagsToPermissionString: function(flag) {\n          var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n          if (flag & 512) {\n            perms += \"w\";\n          }\n          return perms;\n        }, nodePermissions: function(node, perms) {\n          if (FS.ignorePermissions) {\n            return 0;\n          }\n          if (perms.includes(\"r\") && !(node.mode & 292)) {\n            return 2;\n          } else if (perms.includes(\"w\") && !(node.mode & 146)) {\n            return 2;\n          } else if (perms.includes(\"x\") && !(node.mode & 73)) {\n            return 2;\n          }\n          return 0;\n        }, mayLookup: function(dir) {\n          var errCode = FS.nodePermissions(dir, \"x\");\n          if (errCode)\n            return errCode;\n          if (!dir.node_ops.lookup)\n            return 2;\n          return 0;\n        }, mayCreate: function(dir, name2) {\n          try {\n            var node = FS.lookupNode(dir, name2);\n            return 20;\n          } catch (e) {\n          }\n          return FS.nodePermissions(dir, \"wx\");\n        }, mayDelete: function(dir, name2, isdir) {\n          var node;\n          try {\n            node = FS.lookupNode(dir, name2);\n          } catch (e) {\n            return e.errno;\n          }\n          var errCode = FS.nodePermissions(dir, \"wx\");\n          if (errCode) {\n            return errCode;\n          }\n          if (isdir) {\n            if (!FS.isDir(node.mode)) {\n              return 54;\n            }\n            if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n              return 10;\n            }\n          } else {\n            if (FS.isDir(node.mode)) {\n              return 31;\n            }\n          }\n          return 0;\n        }, mayOpen: function(node, flags) {\n          if (!node) {\n            return 44;\n          }\n          if (FS.isLink(node.mode)) {\n            return 32;\n          } else if (FS.isDir(node.mode)) {\n            if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n              return 31;\n            }\n          }\n          return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n        }, MAX_OPEN_FDS: 4096, nextfd: function(fd_start, fd_end) {\n          fd_start = fd_start || 0;\n          fd_end = fd_end || FS.MAX_OPEN_FDS;\n          for (var fd = fd_start; fd <= fd_end; fd++) {\n            if (!FS.streams[fd]) {\n              return fd;\n            }\n          }\n          throw new FS.ErrnoError(33);\n        }, getStream: function(fd) {\n          return FS.streams[fd];\n        }, createStream: function(stream, fd_start, fd_end) {\n          if (!FS.FSStream) {\n            FS.FSStream = function() {\n            };\n            FS.FSStream.prototype = { object: { get: function() {\n              return this.node;\n            }, set: function(val) {\n              this.node = val;\n            } }, isRead: { get: function() {\n              return (this.flags & 2097155) !== 1;\n            } }, isWrite: { get: function() {\n              return (this.flags & 2097155) !== 0;\n            } }, isAppend: { get: function() {\n              return this.flags & 1024;\n            } } };\n          }\n          var newStream = new FS.FSStream();\n          for (var p in stream) {\n            newStream[p] = stream[p];\n          }\n          stream = newStream;\n          var fd = FS.nextfd(fd_start, fd_end);\n          stream.fd = fd;\n          FS.streams[fd] = stream;\n          return stream;\n        }, closeStream: function(fd) {\n          FS.streams[fd] = null;\n        }, chrdev_stream_ops: { open: function(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          stream.stream_ops = device.stream_ops;\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        }, llseek: function() {\n          throw new FS.ErrnoError(70);\n        } }, major: function(dev) {\n          return dev >> 8;\n        }, minor: function(dev) {\n          return dev & 255;\n        }, makedev: function(ma, mi) {\n          return ma << 8 | mi;\n        }, registerDevice: function(dev, ops) {\n          FS.devices[dev] = { stream_ops: ops };\n        }, getDevice: function(dev) {\n          return FS.devices[dev];\n        }, getMounts: function(mount) {\n          var mounts = [];\n          var check = [mount];\n          while (check.length) {\n            var m = check.pop();\n            mounts.push(m);\n            check.push.apply(check, m.mounts);\n          }\n          return mounts;\n        }, syncfs: function(populate, callback) {\n          if (typeof populate === \"function\") {\n            callback = populate;\n            populate = false;\n          }\n          FS.syncFSRequests++;\n          if (FS.syncFSRequests > 1) {\n            err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\");\n          }\n          var mounts = FS.getMounts(FS.root.mount);\n          var completed = 0;\n          function doCallback(errCode) {\n            FS.syncFSRequests--;\n            return callback(errCode);\n          }\n          function done(errCode) {\n            if (errCode) {\n              if (!done.errored) {\n                done.errored = true;\n                return doCallback(errCode);\n              }\n              return;\n            }\n            if (++completed >= mounts.length) {\n              doCallback(null);\n            }\n          }\n          mounts.forEach(function(mount) {\n            if (!mount.type.syncfs) {\n              return done(null);\n            }\n            mount.type.syncfs(mount, populate, done);\n          });\n        }, mount: function(type, opts, mountpoint) {\n          var root = mountpoint === \"/\";\n          var pseudo = !mountpoint;\n          var node;\n          if (root && FS.root) {\n            throw new FS.ErrnoError(10);\n          } else if (!root && !pseudo) {\n            var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n            mountpoint = lookup.path;\n            node = lookup.node;\n            if (FS.isMountpoint(node)) {\n              throw new FS.ErrnoError(10);\n            }\n            if (!FS.isDir(node.mode)) {\n              throw new FS.ErrnoError(54);\n            }\n          }\n          var mount = { type, opts, mountpoint, mounts: [] };\n          var mountRoot = type.mount(mount);\n          mountRoot.mount = mount;\n          mount.root = mountRoot;\n          if (root) {\n            FS.root = mountRoot;\n          } else if (node) {\n            node.mounted = mount;\n            if (node.mount) {\n              node.mount.mounts.push(mount);\n            }\n          }\n          return mountRoot;\n        }, unmount: function(mountpoint) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n          if (!FS.isMountpoint(lookup.node)) {\n            throw new FS.ErrnoError(28);\n          }\n          var node = lookup.node;\n          var mount = node.mounted;\n          var mounts = FS.getMounts(mount);\n          Object.keys(FS.nameTable).forEach(function(hash) {\n            var current = FS.nameTable[hash];\n            while (current) {\n              var next = current.name_next;\n              if (mounts.includes(current.mount)) {\n                FS.destroyNode(current);\n              }\n              current = next;\n            }\n          });\n          node.mounted = null;\n          var idx = node.mount.mounts.indexOf(mount);\n          node.mount.mounts.splice(idx, 1);\n        }, lookup: function(parent, name2) {\n          return parent.node_ops.lookup(parent, name2);\n        }, mknod: function(path, mode, dev) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          if (!name2 || name2 === \".\" || name2 === \"..\") {\n            throw new FS.ErrnoError(28);\n          }\n          var errCode = FS.mayCreate(parent, name2);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.mknod) {\n            throw new FS.ErrnoError(63);\n          }\n          return parent.node_ops.mknod(parent, name2, mode, dev);\n        }, create: function(path, mode) {\n          mode = mode !== void 0 ? mode : 438;\n          mode &= 4095;\n          mode |= 32768;\n          return FS.mknod(path, mode, 0);\n        }, mkdir: function(path, mode) {\n          mode = mode !== void 0 ? mode : 511;\n          mode &= 511 | 512;\n          mode |= 16384;\n          return FS.mknod(path, mode, 0);\n        }, mkdirTree: function(path, mode) {\n          var dirs = path.split(\"/\");\n          var d = \"\";\n          for (var i = 0; i < dirs.length; ++i) {\n            if (!dirs[i])\n              continue;\n            d += \"/\" + dirs[i];\n            try {\n              FS.mkdir(d, mode);\n            } catch (e) {\n              if (e.errno != 20)\n                throw e;\n            }\n          }\n        }, mkdev: function(path, mode, dev) {\n          if (typeof dev === \"undefined\") {\n            dev = mode;\n            mode = 438;\n          }\n          mode |= 8192;\n          return FS.mknod(path, mode, dev);\n        }, symlink: function(oldpath, newpath) {\n          if (!PATH_FS.resolve(oldpath)) {\n            throw new FS.ErrnoError(44);\n          }\n          var lookup = FS.lookupPath(newpath, { parent: true });\n          var parent = lookup.node;\n          if (!parent) {\n            throw new FS.ErrnoError(44);\n          }\n          var newname = PATH.basename(newpath);\n          var errCode = FS.mayCreate(parent, newname);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.symlink) {\n            throw new FS.ErrnoError(63);\n          }\n          return parent.node_ops.symlink(parent, newname, oldpath);\n        }, rename: function(old_path, new_path) {\n          var old_dirname = PATH.dirname(old_path);\n          var new_dirname = PATH.dirname(new_path);\n          var old_name = PATH.basename(old_path);\n          var new_name = PATH.basename(new_path);\n          var lookup, old_dir, new_dir;\n          lookup = FS.lookupPath(old_path, { parent: true });\n          old_dir = lookup.node;\n          lookup = FS.lookupPath(new_path, { parent: true });\n          new_dir = lookup.node;\n          if (!old_dir || !new_dir)\n            throw new FS.ErrnoError(44);\n          if (old_dir.mount !== new_dir.mount) {\n            throw new FS.ErrnoError(75);\n          }\n          var old_node = FS.lookupNode(old_dir, old_name);\n          var relative = PATH_FS.relative(old_path, new_dirname);\n          if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(28);\n          }\n          relative = PATH_FS.relative(new_path, old_dirname);\n          if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(55);\n          }\n          var new_node;\n          try {\n            new_node = FS.lookupNode(new_dir, new_name);\n          } catch (e) {\n          }\n          if (old_node === new_node) {\n            return;\n          }\n          var isdir = FS.isDir(old_node.mode);\n          var errCode = FS.mayDelete(old_dir, old_name, isdir);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!old_dir.node_ops.rename) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n            throw new FS.ErrnoError(10);\n          }\n          if (new_dir !== old_dir) {\n            errCode = FS.nodePermissions(old_dir, \"w\");\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n          }\n          try {\n            if (FS.trackingDelegate[\"willMovePath\"]) {\n              FS.trackingDelegate[\"willMovePath\"](old_path, new_path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n          }\n          FS.hashRemoveNode(old_node);\n          try {\n            old_dir.node_ops.rename(old_node, new_dir, new_name);\n          } catch (e) {\n            throw e;\n          } finally {\n            FS.hashAddNode(old_node);\n          }\n          try {\n            if (FS.trackingDelegate[\"onMovePath\"])\n              FS.trackingDelegate[\"onMovePath\"](old_path, new_path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n          }\n        }, rmdir: function(path) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          var node = FS.lookupNode(parent, name2);\n          var errCode = FS.mayDelete(parent, name2, true);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.rmdir) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          try {\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\n              FS.trackingDelegate[\"willDeletePath\"](path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n          parent.node_ops.rmdir(parent, name2);\n          FS.destroyNode(node);\n          try {\n            if (FS.trackingDelegate[\"onDeletePath\"])\n              FS.trackingDelegate[\"onDeletePath\"](path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n        }, readdir: function(path) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          var node = lookup.node;\n          if (!node.node_ops.readdir) {\n            throw new FS.ErrnoError(54);\n          }\n          return node.node_ops.readdir(node);\n        }, unlink: function(path) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          var node = FS.lookupNode(parent, name2);\n          var errCode = FS.mayDelete(parent, name2, false);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.unlink) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          try {\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\n              FS.trackingDelegate[\"willDeletePath\"](path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n          parent.node_ops.unlink(parent, name2);\n          FS.destroyNode(node);\n          try {\n            if (FS.trackingDelegate[\"onDeletePath\"])\n              FS.trackingDelegate[\"onDeletePath\"](path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n        }, readlink: function(path) {\n          var lookup = FS.lookupPath(path);\n          var link = lookup.node;\n          if (!link) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!link.node_ops.readlink) {\n            throw new FS.ErrnoError(28);\n          }\n          return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n        }, stat: function(path, dontFollow) {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          var node = lookup.node;\n          if (!node) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!node.node_ops.getattr) {\n            throw new FS.ErrnoError(63);\n          }\n          return node.node_ops.getattr(node);\n        }, lstat: function(path) {\n          return FS.stat(path, true);\n        }, chmod: function(path, mode, dontFollow) {\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          node.node_ops.setattr(node, { mode: mode & 4095 | node.mode & ~4095, timestamp: Date.now() });\n        }, lchmod: function(path, mode) {\n          FS.chmod(path, mode, true);\n        }, fchmod: function(fd, mode) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          FS.chmod(stream.node, mode);\n        }, chown: function(path, uid, gid, dontFollow) {\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          node.node_ops.setattr(node, { timestamp: Date.now() });\n        }, lchown: function(path, uid, gid) {\n          FS.chown(path, uid, gid, true);\n        }, fchown: function(fd, uid, gid) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          FS.chown(stream.node, uid, gid);\n        }, truncate: function(path, len) {\n          if (len < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: true });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!FS.isFile(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          var errCode = FS.nodePermissions(node, \"w\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          node.node_ops.setattr(node, { size: len, timestamp: Date.now() });\n        }, ftruncate: function(fd, len) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(28);\n          }\n          FS.truncate(stream.node, len);\n        }, utime: function(path, atime, mtime) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          var node = lookup.node;\n          node.node_ops.setattr(node, { timestamp: Math.max(atime, mtime) });\n        }, open: function(path, flags, mode, fd_start, fd_end) {\n          if (path === \"\") {\n            throw new FS.ErrnoError(44);\n          }\n          flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\n          mode = typeof mode === \"undefined\" ? 438 : mode;\n          if (flags & 64) {\n            mode = mode & 4095 | 32768;\n          } else {\n            mode = 0;\n          }\n          var node;\n          if (typeof path === \"object\") {\n            node = path;\n          } else {\n            path = PATH.normalize(path);\n            try {\n              var lookup = FS.lookupPath(path, { follow: !(flags & 131072) });\n              node = lookup.node;\n            } catch (e) {\n            }\n          }\n          var created = false;\n          if (flags & 64) {\n            if (node) {\n              if (flags & 128) {\n                throw new FS.ErrnoError(20);\n              }\n            } else {\n              node = FS.mknod(path, mode, 0);\n              created = true;\n            }\n          }\n          if (!node) {\n            throw new FS.ErrnoError(44);\n          }\n          if (FS.isChrdev(node.mode)) {\n            flags &= ~512;\n          }\n          if (flags & 65536 && !FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n          if (!created) {\n            var errCode = FS.mayOpen(node, flags);\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n          }\n          if (flags & 512) {\n            FS.truncate(node, 0);\n          }\n          flags &= ~(128 | 512 | 131072);\n          var stream = FS.createStream({ node, path: FS.getPath(node), flags, seekable: true, position: 0, stream_ops: node.stream_ops, ungotten: [], error: false }, fd_start, fd_end);\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n          if (Module[\"logReadFiles\"] && !(flags & 1)) {\n            if (!FS.readFiles)\n              FS.readFiles = {};\n            if (!(path in FS.readFiles)) {\n              FS.readFiles[path] = 1;\n              err(\"FS.trackingDelegate error on read file: \" + path);\n            }\n          }\n          try {\n            if (FS.trackingDelegate[\"onOpenFile\"]) {\n              var trackingFlags = 0;\n              if ((flags & 2097155) !== 1) {\n                trackingFlags |= FS.tracking.openFlags.READ;\n              }\n              if ((flags & 2097155) !== 0) {\n                trackingFlags |= FS.tracking.openFlags.WRITE;\n              }\n              FS.trackingDelegate[\"onOpenFile\"](path, trackingFlags);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['onOpenFile']('\" + path + \"', flags) threw an exception: \" + e.message);\n          }\n          return stream;\n        }, close: function(stream) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (stream.getdents)\n            stream.getdents = null;\n          try {\n            if (stream.stream_ops.close) {\n              stream.stream_ops.close(stream);\n            }\n          } catch (e) {\n            throw e;\n          } finally {\n            FS.closeStream(stream.fd);\n          }\n          stream.fd = null;\n        }, isClosed: function(stream) {\n          return stream.fd === null;\n        }, llseek: function(stream, offset, whence) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (!stream.seekable || !stream.stream_ops.llseek) {\n            throw new FS.ErrnoError(70);\n          }\n          if (whence != 0 && whence != 1 && whence != 2) {\n            throw new FS.ErrnoError(28);\n          }\n          stream.position = stream.stream_ops.llseek(stream, offset, whence);\n          stream.ungotten = [];\n          return stream.position;\n        }, read: function(stream, buffer2, offset, length, position) {\n          offset >>>= 0;\n          if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(8);\n          }\n          if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!stream.stream_ops.read) {\n            throw new FS.ErrnoError(28);\n          }\n          var seeking = typeof position !== \"undefined\";\n          if (!seeking) {\n            position = stream.position;\n          } else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n          }\n          var bytesRead = stream.stream_ops.read(stream, buffer2, offset, length, position);\n          if (!seeking)\n            stream.position += bytesRead;\n          return bytesRead;\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\n          offset >>>= 0;\n          if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n          }\n          if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!stream.stream_ops.write) {\n            throw new FS.ErrnoError(28);\n          }\n          if (stream.seekable && stream.flags & 1024) {\n            FS.llseek(stream, 0, 2);\n          }\n          var seeking = typeof position !== \"undefined\";\n          if (!seeking) {\n            position = stream.position;\n          } else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n          }\n          var bytesWritten = stream.stream_ops.write(stream, buffer2, offset, length, position, canOwn);\n          if (!seeking)\n            stream.position += bytesWritten;\n          try {\n            if (stream.path && FS.trackingDelegate[\"onWriteToFile\"])\n              FS.trackingDelegate[\"onWriteToFile\"](stream.path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onWriteToFile']('\" + stream.path + \"') threw an exception: \" + e.message);\n          }\n          return bytesWritten;\n        }, allocate: function(stream, offset, length) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (offset < 0 || length <= 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n          }\n          if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (!stream.stream_ops.allocate) {\n            throw new FS.ErrnoError(138);\n          }\n          stream.stream_ops.allocate(stream, offset, length);\n        }, mmap: function(stream, address, length, position, prot, flags) {\n          address >>>= 0;\n          if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n            throw new FS.ErrnoError(2);\n          }\n          if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(2);\n          }\n          if (!stream.stream_ops.mmap) {\n            throw new FS.ErrnoError(43);\n          }\n          return stream.stream_ops.mmap(stream, address, length, position, prot, flags);\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\n          offset >>>= 0;\n          if (!stream || !stream.stream_ops.msync) {\n            return 0;\n          }\n          return stream.stream_ops.msync(stream, buffer2, offset, length, mmapFlags);\n        }, munmap: function(stream) {\n          return 0;\n        }, ioctl: function(stream, cmd, arg) {\n          if (!stream.stream_ops.ioctl) {\n            throw new FS.ErrnoError(59);\n          }\n          return stream.stream_ops.ioctl(stream, cmd, arg);\n        }, readFile: function(path, opts) {\n          opts = opts || {};\n          opts.flags = opts.flags || 0;\n          opts.encoding = opts.encoding || \"binary\";\n          if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n            throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n          }\n          var ret;\n          var stream = FS.open(path, opts.flags);\n          var stat = FS.stat(path);\n          var length = stat.size;\n          var buf = new Uint8Array(length);\n          FS.read(stream, buf, 0, length, 0);\n          if (opts.encoding === \"utf8\") {\n            ret = UTF8ArrayToString(buf, 0);\n          } else if (opts.encoding === \"binary\") {\n            ret = buf;\n          }\n          FS.close(stream);\n          return ret;\n        }, writeFile: function(path, data, opts) {\n          opts = opts || {};\n          opts.flags = opts.flags || 577;\n          var stream = FS.open(path, opts.flags, opts.mode);\n          if (typeof data === \"string\") {\n            var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n            var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n            FS.write(stream, buf, 0, actualNumBytes, void 0, opts.canOwn);\n          } else if (ArrayBuffer.isView(data)) {\n            FS.write(stream, data, 0, data.byteLength, void 0, opts.canOwn);\n          } else {\n            throw new Error(\"Unsupported data type\");\n          }\n          FS.close(stream);\n        }, cwd: function() {\n          return FS.currentPath;\n        }, chdir: function(path) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          if (lookup.node === null) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!FS.isDir(lookup.node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n          var errCode = FS.nodePermissions(lookup.node, \"x\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          FS.currentPath = lookup.path;\n        }, createDefaultDirectories: function() {\n          FS.mkdir(\"/tmp\");\n          FS.mkdir(\"/home\");\n          FS.mkdir(\"/home/web_user\");\n        }, createDefaultDevices: function() {\n          FS.mkdir(\"/dev\");\n          FS.registerDevice(FS.makedev(1, 3), { read: function() {\n            return 0;\n          }, write: function(stream, buffer2, offset, length, pos) {\n            return length;\n          } });\n          FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n          TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n          TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n          FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n          FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n          var random_device = getRandomDevice();\n          FS.createDevice(\"/dev\", \"random\", random_device);\n          FS.createDevice(\"/dev\", \"urandom\", random_device);\n          FS.mkdir(\"/dev/shm\");\n          FS.mkdir(\"/dev/shm/tmp\");\n        }, createSpecialDirectories: function() {\n          FS.mkdir(\"/proc\");\n          var proc_self = FS.mkdir(\"/proc/self\");\n          FS.mkdir(\"/proc/self/fd\");\n          FS.mount({ mount: function() {\n            var node = FS.createNode(proc_self, \"fd\", 16384 | 511, 73);\n            node.node_ops = { lookup: function(parent, name2) {\n              var fd = +name2;\n              var stream = FS.getStream(fd);\n              if (!stream)\n                throw new FS.ErrnoError(8);\n              var ret = { parent: null, mount: { mountpoint: \"fake\" }, node_ops: { readlink: function() {\n                return stream.path;\n              } } };\n              ret.parent = ret;\n              return ret;\n            } };\n            return node;\n          } }, {}, \"/proc/self/fd\");\n        }, createStandardStreams: function() {\n          if (Module[\"stdin\"]) {\n            FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n          } else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n          }\n          if (Module[\"stdout\"]) {\n            FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n          } else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n          }\n          if (Module[\"stderr\"]) {\n            FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n          } else {\n            FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n          }\n          var stdin = FS.open(\"/dev/stdin\", 0);\n          var stdout = FS.open(\"/dev/stdout\", 1);\n          var stderr = FS.open(\"/dev/stderr\", 1);\n        }, ensureErrnoError: function() {\n          if (FS.ErrnoError)\n            return;\n          FS.ErrnoError = function ErrnoError(errno, node) {\n            this.node = node;\n            this.setErrno = function(errno2) {\n              this.errno = errno2;\n            };\n            this.setErrno(errno);\n            this.message = \"FS error\";\n          };\n          FS.ErrnoError.prototype = new Error();\n          FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n          [44].forEach(function(code) {\n            FS.genericErrors[code] = new FS.ErrnoError(code);\n            FS.genericErrors[code].stack = \"<generic error, no stack>\";\n          });\n        }, staticInit: function() {\n          FS.ensureErrnoError();\n          FS.nameTable = new Array(4096);\n          FS.mount(MEMFS, {}, \"/\");\n          FS.createDefaultDirectories();\n          FS.createDefaultDevices();\n          FS.createSpecialDirectories();\n          FS.filesystems = { \"MEMFS\": MEMFS };\n        }, init: function(input, output, error) {\n          FS.init.initialized = true;\n          FS.ensureErrnoError();\n          Module[\"stdin\"] = input || Module[\"stdin\"];\n          Module[\"stdout\"] = output || Module[\"stdout\"];\n          Module[\"stderr\"] = error || Module[\"stderr\"];\n          FS.createStandardStreams();\n        }, quit: function() {\n          FS.init.initialized = false;\n          var fflush = Module[\"_fflush\"];\n          if (fflush)\n            fflush(0);\n          for (var i = 0; i < FS.streams.length; i++) {\n            var stream = FS.streams[i];\n            if (!stream) {\n              continue;\n            }\n            FS.close(stream);\n          }\n        }, getMode: function(canRead, canWrite) {\n          var mode = 0;\n          if (canRead)\n            mode |= 292 | 73;\n          if (canWrite)\n            mode |= 146;\n          return mode;\n        }, findObject: function(path, dontResolveLastLink) {\n          var ret = FS.analyzePath(path, dontResolveLastLink);\n          if (ret.exists) {\n            return ret.object;\n          } else {\n            return null;\n          }\n        }, analyzePath: function(path, dontResolveLastLink) {\n          try {\n            var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            path = lookup.path;\n          } catch (e) {\n          }\n          var ret = { isRoot: false, exists: false, error: 0, name: null, path: null, object: null, parentExists: false, parentPath: null, parentObject: null };\n          try {\n            var lookup = FS.lookupPath(path, { parent: true });\n            ret.parentExists = true;\n            ret.parentPath = lookup.path;\n            ret.parentObject = lookup.node;\n            ret.name = PATH.basename(path);\n            lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            ret.exists = true;\n            ret.path = lookup.path;\n            ret.object = lookup.node;\n            ret.name = lookup.node.name;\n            ret.isRoot = lookup.path === \"/\";\n          } catch (e) {\n            ret.error = e.errno;\n          }\n          return ret;\n        }, createPath: function(parent, path, canRead, canWrite) {\n          parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\n          var parts = path.split(\"/\").reverse();\n          while (parts.length) {\n            var part = parts.pop();\n            if (!part)\n              continue;\n            var current = PATH.join2(parent, part);\n            try {\n              FS.mkdir(current);\n            } catch (e) {\n            }\n            parent = current;\n          }\n          return current;\n        }, createFile: function(parent, name2, properties, canRead, canWrite) {\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\n          var mode = FS.getMode(canRead, canWrite);\n          return FS.create(path, mode);\n        }, createDataFile: function(parent, name2, data, canRead, canWrite, canOwn) {\n          var path = name2 ? PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2) : parent;\n          var mode = FS.getMode(canRead, canWrite);\n          var node = FS.create(path, mode);\n          if (data) {\n            if (typeof data === \"string\") {\n              var arr = new Array(data.length);\n              for (var i = 0, len = data.length; i < len; ++i)\n                arr[i] = data.charCodeAt(i);\n              data = arr;\n            }\n            FS.chmod(node, mode | 146);\n            var stream = FS.open(node, 577);\n            FS.write(stream, data, 0, data.length, 0, canOwn);\n            FS.close(stream);\n            FS.chmod(node, mode);\n          }\n          return node;\n        }, createDevice: function(parent, name2, input, output) {\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\n          var mode = FS.getMode(!!input, !!output);\n          if (!FS.createDevice.major)\n            FS.createDevice.major = 64;\n          var dev = FS.makedev(FS.createDevice.major++, 0);\n          FS.registerDevice(dev, { open: function(stream) {\n            stream.seekable = false;\n          }, close: function(stream) {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          }, read: function(stream, buffer2, offset, length, pos) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === void 0 && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === void 0)\n                break;\n              bytesRead++;\n              buffer2[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          }, write: function(stream, buffer2, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer2[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          } });\n          return FS.mkdev(path, mode, dev);\n        }, forceLoadFile: function(obj) {\n          if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n            return true;\n          if (typeof XMLHttpRequest !== \"undefined\") {\n            throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n          } else if (read_) {\n            try {\n              obj.contents = intArrayFromString(read_(obj.url), true);\n              obj.usedBytes = obj.contents.length;\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n          } else {\n            throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n          }\n        }, createLazyFile: function(parent, name2, url, canRead, canWrite) {\n          function LazyUint8Array() {\n            this.lengthKnown = false;\n            this.chunks = [];\n          }\n          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n            if (idx > this.length - 1 || idx < 0) {\n              return void 0;\n            }\n            var chunkOffset = idx % this.chunkSize;\n            var chunkNum = idx / this.chunkSize | 0;\n            return this.getter(chunkNum)[chunkOffset];\n          };\n          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n            this.getter = getter;\n          };\n          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"HEAD\", url, false);\n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304))\n              throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n            var header;\n            var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n            var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n            var chunkSize = 1024 * 1024;\n            if (!hasByteServing)\n              chunkSize = datalength;\n            var doXHR = function(from, to) {\n              if (from > to)\n                throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n              if (to > datalength - 1)\n                throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n              var xhr2 = new XMLHttpRequest();\n              xhr2.open(\"GET\", url, false);\n              if (datalength !== chunkSize)\n                xhr2.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n              if (typeof Uint8Array != \"undefined\")\n                xhr2.responseType = \"arraybuffer\";\n              if (xhr2.overrideMimeType) {\n                xhr2.overrideMimeType(\"text/plain; charset=x-user-defined\");\n              }\n              xhr2.send(null);\n              if (!(xhr2.status >= 200 && xhr2.status < 300 || xhr2.status === 304))\n                throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr2.status);\n              if (xhr2.response !== void 0) {\n                return new Uint8Array(xhr2.response || []);\n              } else {\n                return intArrayFromString(xhr2.responseText || \"\", true);\n              }\n            };\n            var lazyArray2 = this;\n            lazyArray2.setDataGetter(function(chunkNum) {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\") {\n                lazyArray2.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\")\n                throw new Error(\"doXHR failed!\");\n              return lazyArray2.chunks[chunkNum];\n            });\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n            }\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          };\n          if (typeof XMLHttpRequest !== \"undefined\") {\n            if (!ENVIRONMENT_IS_WORKER)\n              throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n            var lazyArray = new LazyUint8Array();\n            Object.defineProperties(lazyArray, { length: { get: function() {\n              if (!this.lengthKnown) {\n                this.cacheLength();\n              }\n              return this._length;\n            } }, chunkSize: { get: function() {\n              if (!this.lengthKnown) {\n                this.cacheLength();\n              }\n              return this._chunkSize;\n            } } });\n            var properties = { isDevice: false, contents: lazyArray };\n          } else {\n            var properties = { isDevice: false, url };\n          }\n          var node = FS.createFile(parent, name2, properties, canRead, canWrite);\n          if (properties.contents) {\n            node.contents = properties.contents;\n          } else if (properties.url) {\n            node.contents = null;\n            node.url = properties.url;\n          }\n          Object.defineProperties(node, { usedBytes: { get: function() {\n            return this.contents.length;\n          } } });\n          var stream_ops = {};\n          var keys = Object.keys(node.stream_ops);\n          keys.forEach(function(key2) {\n            var fn = node.stream_ops[key2];\n            stream_ops[key2] = function forceLoadLazyFile() {\n              FS.forceLoadFile(node);\n              return fn.apply(null, arguments);\n            };\n          });\n          stream_ops.read = function stream_ops_read(stream, buffer2, offset, length, position) {\n            FS.forceLoadFile(node);\n            var contents = stream.node.contents;\n            if (position >= contents.length)\n              return 0;\n            var size = Math.min(contents.length - position, length);\n            if (contents.slice) {\n              for (var i = 0; i < size; i++) {\n                buffer2[offset + i] = contents[position + i];\n              }\n            } else {\n              for (var i = 0; i < size; i++) {\n                buffer2[offset + i] = contents.get(position + i);\n              }\n            }\n            return size;\n          };\n          node.stream_ops = stream_ops;\n          return node;\n        }, createPreloadedFile: function(parent, name2, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n          Browser.init();\n          var fullname = name2 ? PATH_FS.resolve(PATH.join2(parent, name2)) : parent;\n          var dep = getUniqueRunDependency(\"cp \" + fullname);\n          function processData(byteArray) {\n            function finish(byteArray2) {\n              if (preFinish)\n                preFinish();\n              if (!dontCreateFile) {\n                FS.createDataFile(parent, name2, byteArray2, canRead, canWrite, canOwn);\n              }\n              if (onload)\n                onload();\n              removeRunDependency(dep);\n            }\n            var handled = false;\n            Module[\"preloadPlugins\"].forEach(function(plugin) {\n              if (handled)\n                return;\n              if (plugin[\"canHandle\"](fullname)) {\n                plugin[\"handle\"](byteArray, fullname, finish, function() {\n                  if (onerror)\n                    onerror();\n                  removeRunDependency(dep);\n                });\n                handled = true;\n              }\n            });\n            if (!handled)\n              finish(byteArray);\n          }\n          addRunDependency(dep);\n          if (typeof url == \"string\") {\n            asyncLoad(url, function(byteArray) {\n              processData(byteArray);\n            }, onerror);\n          } else {\n            processData(url);\n          }\n        }, indexedDB: function() {\n          return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n        }, DB_NAME: function() {\n          return \"EM_FS_\" + window.location.pathname;\n        }, DB_VERSION: 20, DB_STORE_NAME: \"FILE_DATA\", saveFilesToDB: function(paths, onload, onerror) {\n          onload = onload || function() {\n          };\n          onerror = onerror || function() {\n          };\n          var indexedDB = FS.indexedDB();\n          try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n          } catch (e) {\n            return onerror(e);\n          }\n          openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n            out(\"creating db\");\n            var db = openRequest.result;\n            db.createObjectStore(FS.DB_STORE_NAME);\n          };\n          openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n              if (fail == 0)\n                onload();\n              else\n                onerror();\n            }\n            paths.forEach(function(path) {\n              var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n              putRequest.onsuccess = function putRequest_onsuccess() {\n                ok++;\n                if (ok + fail == total)\n                  finish();\n              };\n              putRequest.onerror = function putRequest_onerror() {\n                fail++;\n                if (ok + fail == total)\n                  finish();\n              };\n            });\n            transaction.onerror = onerror;\n          };\n          openRequest.onerror = onerror;\n        }, loadFilesFromDB: function(paths, onload, onerror) {\n          onload = onload || function() {\n          };\n          onerror = onerror || function() {\n          };\n          var indexedDB = FS.indexedDB();\n          try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n          } catch (e) {\n            return onerror(e);\n          }\n          openRequest.onupgradeneeded = onerror;\n          openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            try {\n              var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\");\n            } catch (e) {\n              onerror(e);\n              return;\n            }\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n              if (fail == 0)\n                onload();\n              else\n                onerror();\n            }\n            paths.forEach(function(path) {\n              var getRequest = files.get(path);\n              getRequest.onsuccess = function getRequest_onsuccess() {\n                if (FS.analyzePath(path).exists) {\n                  FS.unlink(path);\n                }\n                FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n                ok++;\n                if (ok + fail == total)\n                  finish();\n              };\n              getRequest.onerror = function getRequest_onerror() {\n                fail++;\n                if (ok + fail == total)\n                  finish();\n              };\n            });\n            transaction.onerror = onerror;\n          };\n          openRequest.onerror = onerror;\n        } };\n        var SYSCALLS = { mappings: {}, DEFAULT_POLLMASK: 5, umask: 511, calculateAt: function(dirfd, path, allowEmpty) {\n          if (path[0] === \"/\") {\n            return path;\n          }\n          var dir;\n          if (dirfd === -100) {\n            dir = FS.cwd();\n          } else {\n            var dirstream = FS.getStream(dirfd);\n            if (!dirstream)\n              throw new FS.ErrnoError(8);\n            dir = dirstream.path;\n          }\n          if (path.length == 0) {\n            if (!allowEmpty) {\n              throw new FS.ErrnoError(44);\n            }\n            return dir;\n          }\n          return PATH.join2(dir, path);\n        }, doStat: function(func, path, buf) {\n          try {\n            var stat = func(path);\n          } catch (e) {\n            if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n              return -54;\n            }\n            throw e;\n          }\n          GROWABLE_HEAP_I32()[buf >>> 2] = stat.dev;\n          GROWABLE_HEAP_I32()[buf + 4 >>> 2] = 0;\n          GROWABLE_HEAP_I32()[buf + 8 >>> 2] = stat.ino;\n          GROWABLE_HEAP_I32()[buf + 12 >>> 2] = stat.mode;\n          GROWABLE_HEAP_I32()[buf + 16 >>> 2] = stat.nlink;\n          GROWABLE_HEAP_I32()[buf + 20 >>> 2] = stat.uid;\n          GROWABLE_HEAP_I32()[buf + 24 >>> 2] = stat.gid;\n          GROWABLE_HEAP_I32()[buf + 28 >>> 2] = stat.rdev;\n          GROWABLE_HEAP_I32()[buf + 32 >>> 2] = 0;\n          tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], GROWABLE_HEAP_I32()[buf + 40 >>> 2] = tempI64[0], GROWABLE_HEAP_I32()[buf + 44 >>> 2] = tempI64[1];\n          GROWABLE_HEAP_I32()[buf + 48 >>> 2] = 4096;\n          GROWABLE_HEAP_I32()[buf + 52 >>> 2] = stat.blocks;\n          GROWABLE_HEAP_I32()[buf + 56 >>> 2] = stat.atime.getTime() / 1e3 | 0;\n          GROWABLE_HEAP_I32()[buf + 60 >>> 2] = 0;\n          GROWABLE_HEAP_I32()[buf + 64 >>> 2] = stat.mtime.getTime() / 1e3 | 0;\n          GROWABLE_HEAP_I32()[buf + 68 >>> 2] = 0;\n          GROWABLE_HEAP_I32()[buf + 72 >>> 2] = stat.ctime.getTime() / 1e3 | 0;\n          GROWABLE_HEAP_I32()[buf + 76 >>> 2] = 0;\n          tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], GROWABLE_HEAP_I32()[buf + 80 >>> 2] = tempI64[0], GROWABLE_HEAP_I32()[buf + 84 >>> 2] = tempI64[1];\n          return 0;\n        }, doMsync: function(addr, stream, len, flags, offset) {\n          var buffer2 = GROWABLE_HEAP_U8().slice(addr, addr + len);\n          FS.msync(stream, buffer2, offset, len, flags);\n        }, doMkdir: function(path, mode) {\n          path = PATH.normalize(path);\n          if (path[path.length - 1] === \"/\")\n            path = path.substr(0, path.length - 1);\n          FS.mkdir(path, mode, 0);\n          return 0;\n        }, doMknod: function(path, mode, dev) {\n          switch (mode & 61440) {\n            case 32768:\n            case 8192:\n            case 24576:\n            case 4096:\n            case 49152:\n              break;\n            default:\n              return -28;\n          }\n          FS.mknod(path, mode, dev);\n          return 0;\n        }, doReadlink: function(path, buf, bufsize) {\n          if (bufsize <= 0)\n            return -28;\n          var ret = FS.readlink(path);\n          var len = Math.min(bufsize, lengthBytesUTF8(ret));\n          var endChar = GROWABLE_HEAP_I8()[buf + len >>> 0];\n          stringToUTF8(ret, buf, bufsize + 1);\n          GROWABLE_HEAP_I8()[buf + len >>> 0] = endChar;\n          return len;\n        }, doAccess: function(path, amode) {\n          if (amode & ~7) {\n            return -28;\n          }\n          var node;\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n          if (!node) {\n            return -44;\n          }\n          var perms = \"\";\n          if (amode & 4)\n            perms += \"r\";\n          if (amode & 2)\n            perms += \"w\";\n          if (amode & 1)\n            perms += \"x\";\n          if (perms && FS.nodePermissions(node, perms)) {\n            return -2;\n          }\n          return 0;\n        }, doDup: function(path, flags, suggestFD) {\n          var suggest = FS.getStream(suggestFD);\n          if (suggest)\n            FS.close(suggest);\n          return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\n        }, doReadv: function(stream, iov, iovcnt, offset) {\n          var ret = 0;\n          for (var i = 0; i < iovcnt; i++) {\n            var ptr = GROWABLE_HEAP_I32()[iov + i * 8 >>> 2];\n            var len = GROWABLE_HEAP_I32()[iov + (i * 8 + 4) >>> 2];\n            var curr = FS.read(stream, GROWABLE_HEAP_I8(), ptr, len, offset);\n            if (curr < 0)\n              return -1;\n            ret += curr;\n            if (curr < len)\n              break;\n          }\n          return ret;\n        }, doWritev: function(stream, iov, iovcnt, offset) {\n          var ret = 0;\n          for (var i = 0; i < iovcnt; i++) {\n            var ptr = GROWABLE_HEAP_I32()[iov + i * 8 >>> 2];\n            var len = GROWABLE_HEAP_I32()[iov + (i * 8 + 4) >>> 2];\n            var curr = FS.write(stream, GROWABLE_HEAP_I8(), ptr, len, offset);\n            if (curr < 0)\n              return -1;\n            ret += curr;\n          }\n          return ret;\n        }, varargs: void 0, get: function() {\n          SYSCALLS.varargs += 4;\n          var ret = GROWABLE_HEAP_I32()[SYSCALLS.varargs - 4 >>> 2];\n          return ret;\n        }, getStr: function(ptr) {\n          var ret = UTF8ToString(ptr);\n          return ret;\n        }, getStreamFromFD: function(fd) {\n          var stream = FS.getStream(fd);\n          if (!stream)\n            throw new FS.ErrnoError(8);\n          return stream;\n        }, get64: function(low, high) {\n          return low;\n        } };\n        function ___sys_fcntl64(fd, cmd, varargs) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(2, 1, fd, cmd, varargs);\n          SYSCALLS.varargs = varargs;\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            switch (cmd) {\n              case 0: {\n                var arg = SYSCALLS.get();\n                if (arg < 0) {\n                  return -28;\n                }\n                var newStream;\n                newStream = FS.open(stream.path, stream.flags, 0, arg);\n                return newStream.fd;\n              }\n              case 1:\n              case 2:\n                return 0;\n              case 3:\n                return stream.flags;\n              case 4: {\n                var arg = SYSCALLS.get();\n                stream.flags |= arg;\n                return 0;\n              }\n              case 12: {\n                var arg = SYSCALLS.get();\n                var offset = 0;\n                GROWABLE_HEAP_I16()[arg + offset >>> 1] = 2;\n                return 0;\n              }\n              case 13:\n              case 14:\n                return 0;\n              case 16:\n              case 8:\n                return -28;\n              case 9:\n                setErrNo(28);\n                return -1;\n              default: {\n                return -28;\n              }\n            }\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        function ___sys_ioctl(fd, op, varargs) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(3, 1, fd, op, varargs);\n          SYSCALLS.varargs = varargs;\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            switch (op) {\n              case 21509:\n              case 21505: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21510:\n              case 21511:\n              case 21512:\n              case 21506:\n              case 21507:\n              case 21508: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21519: {\n                if (!stream.tty)\n                  return -59;\n                var argp = SYSCALLS.get();\n                GROWABLE_HEAP_I32()[argp >>> 2] = 0;\n                return 0;\n              }\n              case 21520: {\n                if (!stream.tty)\n                  return -59;\n                return -28;\n              }\n              case 21531: {\n                var argp = SYSCALLS.get();\n                return FS.ioctl(stream, op, argp);\n              }\n              case 21523: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21524: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              default:\n                abort(\"bad ioctl syscall \" + op);\n            }\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        function ___sys_open(path, flags, varargs) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(4, 1, path, flags, varargs);\n          SYSCALLS.varargs = varargs;\n          try {\n            var pathname = SYSCALLS.getStr(path);\n            var mode = varargs ? SYSCALLS.get() : 0;\n            var stream = FS.open(pathname, flags, mode);\n            return stream.fd;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        var tupleRegistrations = {};\n        function runDestructors(destructors) {\n          while (destructors.length) {\n            var ptr = destructors.pop();\n            var del = destructors.pop();\n            del(ptr);\n          }\n        }\n        function simpleReadValueFromPointer(pointer) {\n          return this[\"fromWireType\"](GROWABLE_HEAP_U32()[pointer >>> 2]);\n        }\n        var awaitingDependencies = {};\n        var registeredTypes = {};\n        var typeDependencies = {};\n        var char_0 = 48;\n        var char_9 = 57;\n        function makeLegalFunctionName(name2) {\n          if (name2 === void 0) {\n            return \"_unknown\";\n          }\n          name2 = name2.replace(/[^a-zA-Z0-9_]/g, \"$\");\n          var f = name2.charCodeAt(0);\n          if (f >= char_0 && f <= char_9) {\n            return \"_\" + name2;\n          } else {\n            return name2;\n          }\n        }\n        function createNamedFunction(name2, body) {\n          name2 = makeLegalFunctionName(name2);\n          return new Function(\"body\", \"return function \" + name2 + '() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n')(body);\n        }\n        function extendError(baseErrorType, errorName) {\n          var errorClass = createNamedFunction(errorName, function(message) {\n            this.name = errorName;\n            this.message = message;\n            var stack = new Error(message).stack;\n            if (stack !== void 0) {\n              this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n            }\n          });\n          errorClass.prototype = Object.create(baseErrorType.prototype);\n          errorClass.prototype.constructor = errorClass;\n          errorClass.prototype.toString = function() {\n            if (this.message === void 0) {\n              return this.name;\n            } else {\n              return this.name + \": \" + this.message;\n            }\n          };\n          return errorClass;\n        }\n        var InternalError = void 0;\n        function throwInternalError(message) {\n          throw new InternalError(message);\n        }\n        function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n          myTypes.forEach(function(type) {\n            typeDependencies[type] = dependentTypes;\n          });\n          function onComplete(typeConverters2) {\n            var myTypeConverters = getTypeConverters(typeConverters2);\n            if (myTypeConverters.length !== myTypes.length) {\n              throwInternalError(\"Mismatched type converter count\");\n            }\n            for (var i = 0; i < myTypes.length; ++i) {\n              registerType(myTypes[i], myTypeConverters[i]);\n            }\n          }\n          var typeConverters = new Array(dependentTypes.length);\n          var unregisteredTypes = [];\n          var registered = 0;\n          dependentTypes.forEach(function(dt, i) {\n            if (registeredTypes.hasOwnProperty(dt)) {\n              typeConverters[i] = registeredTypes[dt];\n            } else {\n              unregisteredTypes.push(dt);\n              if (!awaitingDependencies.hasOwnProperty(dt)) {\n                awaitingDependencies[dt] = [];\n              }\n              awaitingDependencies[dt].push(function() {\n                typeConverters[i] = registeredTypes[dt];\n                ++registered;\n                if (registered === unregisteredTypes.length) {\n                  onComplete(typeConverters);\n                }\n              });\n            }\n          });\n          if (unregisteredTypes.length === 0) {\n            onComplete(typeConverters);\n          }\n        }\n        function __embind_finalize_value_array(rawTupleType) {\n          var reg = tupleRegistrations[rawTupleType];\n          delete tupleRegistrations[rawTupleType];\n          var elements = reg.elements;\n          var elementsLength = elements.length;\n          var elementTypes = elements.map(function(elt) {\n            return elt.getterReturnType;\n          }).concat(elements.map(function(elt) {\n            return elt.setterArgumentType;\n          }));\n          var rawConstructor = reg.rawConstructor;\n          var rawDestructor = reg.rawDestructor;\n          whenDependentTypesAreResolved([rawTupleType], elementTypes, function(elementTypes2) {\n            elements.forEach(function(elt, i) {\n              var getterReturnType = elementTypes2[i];\n              var getter = elt.getter;\n              var getterContext = elt.getterContext;\n              var setterArgumentType = elementTypes2[i + elementsLength];\n              var setter = elt.setter;\n              var setterContext = elt.setterContext;\n              elt.read = function(ptr) {\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n              };\n              elt.write = function(ptr, o) {\n                var destructors = [];\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n                runDestructors(destructors);\n              };\n            });\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\n              var rv = new Array(elementsLength);\n              for (var i = 0; i < elementsLength; ++i) {\n                rv[i] = elements[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            }, \"toWireType\": function(destructors, o) {\n              if (elementsLength !== o.length) {\n                throw new TypeError(\"Incorrect number of tuple elements for \" + reg.name + \": expected=\" + elementsLength + \", actual=\" + o.length);\n              }\n              var ptr = rawConstructor();\n              for (var i = 0; i < elementsLength; ++i) {\n                elements[i].write(ptr, o[i]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\n          });\n        }\n        var structRegistrations = {};\n        function __embind_finalize_value_object(structType) {\n          var reg = structRegistrations[structType];\n          delete structRegistrations[structType];\n          var rawConstructor = reg.rawConstructor;\n          var rawDestructor = reg.rawDestructor;\n          var fieldRecords = reg.fields;\n          var fieldTypes = fieldRecords.map(function(field) {\n            return field.getterReturnType;\n          }).concat(fieldRecords.map(function(field) {\n            return field.setterArgumentType;\n          }));\n          whenDependentTypesAreResolved([structType], fieldTypes, function(fieldTypes2) {\n            var fields = {};\n            fieldRecords.forEach(function(field, i) {\n              var fieldName = field.fieldName;\n              var getterReturnType = fieldTypes2[i];\n              var getter = field.getter;\n              var getterContext = field.getterContext;\n              var setterArgumentType = fieldTypes2[i + fieldRecords.length];\n              var setter = field.setter;\n              var setterContext = field.setterContext;\n              fields[fieldName] = { read: function(ptr) {\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n              }, write: function(ptr, o) {\n                var destructors = [];\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n                runDestructors(destructors);\n              } };\n            });\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\n              var rv = {};\n              for (var i in fields) {\n                rv[i] = fields[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            }, \"toWireType\": function(destructors, o) {\n              for (var fieldName in fields) {\n                if (!(fieldName in o)) {\n                  throw new TypeError('Missing field:  \"' + fieldName + '\"');\n                }\n              }\n              var ptr = rawConstructor();\n              for (fieldName in fields) {\n                fields[fieldName].write(ptr, o[fieldName]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\n          });\n        }\n        function __embind_register_bigint(primitiveType, name2, size, minRange, maxRange) {\n        }\n        function getShiftFromSize(size) {\n          switch (size) {\n            case 1:\n              return 0;\n            case 2:\n              return 1;\n            case 4:\n              return 2;\n            case 8:\n              return 3;\n            default:\n              throw new TypeError(\"Unknown type size: \" + size);\n          }\n        }\n        function embind_init_charCodes() {\n          var codes = new Array(256);\n          for (var i = 0; i < 256; ++i) {\n            codes[i] = String.fromCharCode(i);\n          }\n          embind_charCodes = codes;\n        }\n        var embind_charCodes = void 0;\n        function readLatin1String(ptr) {\n          var ret = \"\";\n          var c = ptr;\n          while (GROWABLE_HEAP_U8()[c >>> 0]) {\n            ret += embind_charCodes[GROWABLE_HEAP_U8()[c++ >>> 0]];\n          }\n          return ret;\n        }\n        var BindingError = void 0;\n        function throwBindingError(message) {\n          throw new BindingError(message);\n        }\n        function registerType(rawType, registeredInstance, options) {\n          options = options || {};\n          if (!(\"argPackAdvance\" in registeredInstance)) {\n            throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n          }\n          var name2 = registeredInstance.name;\n          if (!rawType) {\n            throwBindingError('type \"' + name2 + '\" must have a positive integer typeid pointer');\n          }\n          if (registeredTypes.hasOwnProperty(rawType)) {\n            if (options.ignoreDuplicateRegistrations) {\n              return;\n            } else {\n              throwBindingError(\"Cannot register type '\" + name2 + \"' twice\");\n            }\n          }\n          registeredTypes[rawType] = registeredInstance;\n          delete typeDependencies[rawType];\n          if (awaitingDependencies.hasOwnProperty(rawType)) {\n            var callbacks = awaitingDependencies[rawType];\n            delete awaitingDependencies[rawType];\n            callbacks.forEach(function(cb) {\n              cb();\n            });\n          }\n        }\n        function __embind_register_bool(rawType, name2, size, trueValue, falseValue) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(wt) {\n            return !!wt;\n          }, \"toWireType\": function(destructors, o) {\n            return o ? trueValue : falseValue;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": function(pointer) {\n            var heap;\n            if (size === 1) {\n              heap = GROWABLE_HEAP_I8();\n            } else if (size === 2) {\n              heap = GROWABLE_HEAP_I16();\n            } else if (size === 4) {\n              heap = GROWABLE_HEAP_I32();\n            } else {\n              throw new TypeError(\"Unknown boolean type size: \" + name2);\n            }\n            return this[\"fromWireType\"](heap[pointer >>> shift]);\n          }, destructorFunction: null });\n        }\n        function ClassHandle_isAliasOf(other) {\n          if (!(this instanceof ClassHandle)) {\n            return false;\n          }\n          if (!(other instanceof ClassHandle)) {\n            return false;\n          }\n          var leftClass = this.$$.ptrType.registeredClass;\n          var left = this.$$.ptr;\n          var rightClass = other.$$.ptrType.registeredClass;\n          var right = other.$$.ptr;\n          while (leftClass.baseClass) {\n            left = leftClass.upcast(left);\n            leftClass = leftClass.baseClass;\n          }\n          while (rightClass.baseClass) {\n            right = rightClass.upcast(right);\n            rightClass = rightClass.baseClass;\n          }\n          return leftClass === rightClass && left === right;\n        }\n        function shallowCopyInternalPointer(o) {\n          return { count: o.count, deleteScheduled: o.deleteScheduled, preservePointerOnDelete: o.preservePointerOnDelete, ptr: o.ptr, ptrType: o.ptrType, smartPtr: o.smartPtr, smartPtrType: o.smartPtrType };\n        }\n        function throwInstanceAlreadyDeleted(obj) {\n          function getInstanceTypeName(handle) {\n            return handle.$$.ptrType.registeredClass.name;\n          }\n          throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n        }\n        var finalizationGroup = false;\n        function detachFinalizer(handle) {\n        }\n        function runDestructor($$) {\n          if ($$.smartPtr) {\n            $$.smartPtrType.rawDestructor($$.smartPtr);\n          } else {\n            $$.ptrType.registeredClass.rawDestructor($$.ptr);\n          }\n        }\n        function releaseClassHandle($$) {\n          $$.count.value -= 1;\n          var toDelete = $$.count.value === 0;\n          if (toDelete) {\n            runDestructor($$);\n          }\n        }\n        function attachFinalizer(handle) {\n          if (typeof FinalizationGroup === \"undefined\") {\n            attachFinalizer = function(handle2) {\n              return handle2;\n            };\n            return handle;\n          }\n          finalizationGroup = new FinalizationGroup(function(iter) {\n            for (var result = iter.next(); !result.done; result = iter.next()) {\n              var $$ = result.value;\n              if (!$$.ptr) {\n                console.warn(\"object already deleted: \" + $$.ptr);\n              } else {\n                releaseClassHandle($$);\n              }\n            }\n          });\n          attachFinalizer = function(handle2) {\n            finalizationGroup.register(handle2, handle2.$$, handle2.$$);\n            return handle2;\n          };\n          detachFinalizer = function(handle2) {\n            finalizationGroup.unregister(handle2.$$);\n          };\n          return attachFinalizer(handle);\n        }\n        function ClassHandle_clone() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.preservePointerOnDelete) {\n            this.$$.count.value += 1;\n            return this;\n          } else {\n            var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), { $$: { value: shallowCopyInternalPointer(this.$$) } }));\n            clone.$$.count.value += 1;\n            clone.$$.deleteScheduled = false;\n            return clone;\n          }\n        }\n        function ClassHandle_delete() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          detachFinalizer(this);\n          releaseClassHandle(this.$$);\n          if (!this.$$.preservePointerOnDelete) {\n            this.$$.smartPtr = void 0;\n            this.$$.ptr = void 0;\n          }\n        }\n        function ClassHandle_isDeleted() {\n          return !this.$$.ptr;\n        }\n        var delayFunction = void 0;\n        var deletionQueue = [];\n        function flushPendingDeletes() {\n          while (deletionQueue.length) {\n            var obj = deletionQueue.pop();\n            obj.$$.deleteScheduled = false;\n            obj[\"delete\"]();\n          }\n        }\n        function ClassHandle_deleteLater() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          deletionQueue.push(this);\n          if (deletionQueue.length === 1 && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n          this.$$.deleteScheduled = true;\n          return this;\n        }\n        function init_ClassHandle() {\n          ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\n          ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\n          ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\n          ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\n          ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater;\n        }\n        function ClassHandle() {\n        }\n        var registeredPointers = {};\n        function ensureOverloadTable(proto, methodName, humanName) {\n          if (proto[methodName].overloadTable === void 0) {\n            var prevFunc = proto[methodName];\n            proto[methodName] = function() {\n              if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n                throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n              }\n              return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n            };\n            proto[methodName].overloadTable = [];\n            proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n          }\n        }\n        function exposePublicSymbol(name2, value, numArguments) {\n          if (Module.hasOwnProperty(name2)) {\n            if (numArguments === void 0 || Module[name2].overloadTable !== void 0 && Module[name2].overloadTable[numArguments] !== void 0) {\n              throwBindingError(\"Cannot register public name '\" + name2 + \"' twice\");\n            }\n            ensureOverloadTable(Module, name2, name2);\n            if (Module.hasOwnProperty(numArguments)) {\n              throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n            }\n            Module[name2].overloadTable[numArguments] = value;\n          } else {\n            Module[name2] = value;\n            if (numArguments !== void 0) {\n              Module[name2].numArguments = numArguments;\n            }\n          }\n        }\n        function RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n          this.name = name2;\n          this.constructor = constructor;\n          this.instancePrototype = instancePrototype;\n          this.rawDestructor = rawDestructor;\n          this.baseClass = baseClass;\n          this.getActualType = getActualType;\n          this.upcast = upcast;\n          this.downcast = downcast;\n          this.pureVirtualFunctions = [];\n        }\n        function upcastPointer(ptr, ptrClass, desiredClass) {\n          while (ptrClass !== desiredClass) {\n            if (!ptrClass.upcast) {\n              throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\n            }\n            ptr = ptrClass.upcast(ptr);\n            ptrClass = ptrClass.baseClass;\n          }\n          return ptr;\n        }\n        function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            return 0;\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          return ptr;\n        }\n        function genericPointerToWireType(destructors, handle) {\n          var ptr;\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            if (this.isSmartPointer) {\n              ptr = this.rawConstructor();\n              if (destructors !== null) {\n                destructors.push(this.rawDestructor, ptr);\n              }\n              return ptr;\n            } else {\n              return 0;\n            }\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          if (!this.isConst && handle.$$.ptrType.isConst) {\n            throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          if (this.isSmartPointer) {\n            if (handle.$$.smartPtr === void 0) {\n              throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n            }\n            switch (this.sharingPolicy) {\n              case 0:\n                if (handle.$$.smartPtrType === this) {\n                  ptr = handle.$$.smartPtr;\n                } else {\n                  throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n                }\n                break;\n              case 1:\n                ptr = handle.$$.smartPtr;\n                break;\n              case 2:\n                if (handle.$$.smartPtrType === this) {\n                  ptr = handle.$$.smartPtr;\n                } else {\n                  var clonedHandle = handle[\"clone\"]();\n                  ptr = this.rawShare(ptr, __emval_register(function() {\n                    clonedHandle[\"delete\"]();\n                  }));\n                  if (destructors !== null) {\n                    destructors.push(this.rawDestructor, ptr);\n                  }\n                }\n                break;\n              default:\n                throwBindingError(\"Unsupporting sharing policy\");\n            }\n          }\n          return ptr;\n        }\n        function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            return 0;\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          if (handle.$$.ptrType.isConst) {\n            throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          return ptr;\n        }\n        function RegisteredPointer_getPointee(ptr) {\n          if (this.rawGetPointee) {\n            ptr = this.rawGetPointee(ptr);\n          }\n          return ptr;\n        }\n        function RegisteredPointer_destructor(ptr) {\n          if (this.rawDestructor) {\n            this.rawDestructor(ptr);\n          }\n        }\n        function RegisteredPointer_deleteObject(handle) {\n          if (handle !== null) {\n            handle[\"delete\"]();\n          }\n        }\n        function downcastPointer(ptr, ptrClass, desiredClass) {\n          if (ptrClass === desiredClass) {\n            return ptr;\n          }\n          if (desiredClass.baseClass === void 0) {\n            return null;\n          }\n          var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n          if (rv === null) {\n            return null;\n          }\n          return desiredClass.downcast(rv);\n        }\n        function getInheritedInstanceCount() {\n          return Object.keys(registeredInstances).length;\n        }\n        function getLiveInheritedInstances() {\n          var rv = [];\n          for (var k in registeredInstances) {\n            if (registeredInstances.hasOwnProperty(k)) {\n              rv.push(registeredInstances[k]);\n            }\n          }\n          return rv;\n        }\n        function setDelayFunction(fn) {\n          delayFunction = fn;\n          if (deletionQueue.length && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n        }\n        function init_embind() {\n          Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n          Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n          Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n          Module[\"setDelayFunction\"] = setDelayFunction;\n        }\n        var registeredInstances = {};\n        function getBasestPointer(class_, ptr) {\n          if (ptr === void 0) {\n            throwBindingError(\"ptr should not be undefined\");\n          }\n          while (class_.baseClass) {\n            ptr = class_.upcast(ptr);\n            class_ = class_.baseClass;\n          }\n          return ptr;\n        }\n        function getInheritedInstance(class_, ptr) {\n          ptr = getBasestPointer(class_, ptr);\n          return registeredInstances[ptr];\n        }\n        function makeClassHandle(prototype, record) {\n          if (!record.ptrType || !record.ptr) {\n            throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n          }\n          var hasSmartPtrType = !!record.smartPtrType;\n          var hasSmartPtr = !!record.smartPtr;\n          if (hasSmartPtrType !== hasSmartPtr) {\n            throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n          }\n          record.count = { value: 1 };\n          return attachFinalizer(Object.create(prototype, { $$: { value: record } }));\n        }\n        function RegisteredPointer_fromWireType(ptr) {\n          var rawPointer = this.getPointee(ptr);\n          if (!rawPointer) {\n            this.destructor(ptr);\n            return null;\n          }\n          var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n          if (registeredInstance !== void 0) {\n            if (registeredInstance.$$.count.value === 0) {\n              registeredInstance.$$.ptr = rawPointer;\n              registeredInstance.$$.smartPtr = ptr;\n              return registeredInstance[\"clone\"]();\n            } else {\n              var rv = registeredInstance[\"clone\"]();\n              this.destructor(ptr);\n              return rv;\n            }\n          }\n          function makeDefaultHandle() {\n            if (this.isSmartPointer) {\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this.pointeeType, ptr: rawPointer, smartPtrType: this, smartPtr: ptr });\n            } else {\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this, ptr });\n            }\n          }\n          var actualType = this.registeredClass.getActualType(rawPointer);\n          var registeredPointerRecord = registeredPointers[actualType];\n          if (!registeredPointerRecord) {\n            return makeDefaultHandle.call(this);\n          }\n          var toType;\n          if (this.isConst) {\n            toType = registeredPointerRecord.constPointerType;\n          } else {\n            toType = registeredPointerRecord.pointerType;\n          }\n          var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n          if (dp === null) {\n            return makeDefaultHandle.call(this);\n          }\n          if (this.isSmartPointer) {\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp, smartPtrType: this, smartPtr: ptr });\n          } else {\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp });\n          }\n        }\n        function init_RegisteredPointer() {\n          RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n          RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n          RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\n          RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\n          RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\n          RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType;\n        }\n        function RegisteredPointer(name2, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n          this.name = name2;\n          this.registeredClass = registeredClass;\n          this.isReference = isReference;\n          this.isConst = isConst;\n          this.isSmartPointer = isSmartPointer;\n          this.pointeeType = pointeeType;\n          this.sharingPolicy = sharingPolicy;\n          this.rawGetPointee = rawGetPointee;\n          this.rawConstructor = rawConstructor;\n          this.rawShare = rawShare;\n          this.rawDestructor = rawDestructor;\n          if (!isSmartPointer && registeredClass.baseClass === void 0) {\n            if (isConst) {\n              this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n            } else {\n              this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n            }\n          } else {\n            this[\"toWireType\"] = genericPointerToWireType;\n          }\n        }\n        function replacePublicSymbol(name2, value, numArguments) {\n          if (!Module.hasOwnProperty(name2)) {\n            throwInternalError(\"Replacing nonexistant public symbol\");\n          }\n          if (Module[name2].overloadTable !== void 0 && numArguments !== void 0) {\n            Module[name2].overloadTable[numArguments] = value;\n          } else {\n            Module[name2] = value;\n            Module[name2].argCount = numArguments;\n          }\n        }\n        function dynCallLegacy(sig, ptr, args) {\n          var f = Module[\"dynCall_\" + sig];\n          return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\n        }\n        function dynCall(sig, ptr, args) {\n          if (sig.includes(\"j\")) {\n            return dynCallLegacy(sig, ptr, args);\n          }\n          return wasmTable.get(ptr).apply(null, args);\n        }\n        function getDynCaller(sig, ptr) {\n          var argCache = [];\n          return function() {\n            argCache.length = arguments.length;\n            for (var i = 0; i < arguments.length; i++) {\n              argCache[i] = arguments[i];\n            }\n            return dynCall(sig, ptr, argCache);\n          };\n        }\n        function embind__requireFunction(signature, rawFunction) {\n          signature = readLatin1String(signature);\n          function makeDynCaller() {\n            if (signature.includes(\"j\")) {\n              return getDynCaller(signature, rawFunction);\n            }\n            return wasmTable.get(rawFunction);\n          }\n          var fp = makeDynCaller();\n          if (typeof fp !== \"function\") {\n            throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n          }\n          return fp;\n        }\n        var UnboundTypeError = void 0;\n        function getTypeName(type) {\n          var ptr = ___getTypeName(type);\n          var rv = readLatin1String(ptr);\n          _free(ptr);\n          return rv;\n        }\n        function throwUnboundTypeError(message, types) {\n          var unboundTypes = [];\n          var seen = {};\n          function visit(type) {\n            if (seen[type]) {\n              return;\n            }\n            if (registeredTypes[type]) {\n              return;\n            }\n            if (typeDependencies[type]) {\n              typeDependencies[type].forEach(visit);\n              return;\n            }\n            unboundTypes.push(type);\n            seen[type] = true;\n          }\n          types.forEach(visit);\n          throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([\", \"]));\n        }\n        function __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name2, destructorSignature, rawDestructor) {\n          name2 = readLatin1String(name2);\n          getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n          if (upcast) {\n            upcast = embind__requireFunction(upcastSignature, upcast);\n          }\n          if (downcast) {\n            downcast = embind__requireFunction(downcastSignature, downcast);\n          }\n          rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n          var legalFunctionName = makeLegalFunctionName(name2);\n          exposePublicSymbol(legalFunctionName, function() {\n            throwUnboundTypeError(\"Cannot construct \" + name2 + \" due to unbound types\", [baseClassRawType]);\n          });\n          whenDependentTypesAreResolved([rawType, rawPointerType, rawConstPointerType], baseClassRawType ? [baseClassRawType] : [], function(base) {\n            base = base[0];\n            var baseClass;\n            var basePrototype;\n            if (baseClassRawType) {\n              baseClass = base.registeredClass;\n              basePrototype = baseClass.instancePrototype;\n            } else {\n              basePrototype = ClassHandle.prototype;\n            }\n            var constructor = createNamedFunction(legalFunctionName, function() {\n              if (Object.getPrototypeOf(this) !== instancePrototype) {\n                throw new BindingError(\"Use 'new' to construct \" + name2);\n              }\n              if (registeredClass.constructor_body === void 0) {\n                throw new BindingError(name2 + \" has no accessible constructor\");\n              }\n              var body = registeredClass.constructor_body[arguments.length];\n              if (body === void 0) {\n                throw new BindingError(\"Tried to invoke ctor of \" + name2 + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\n              }\n              return body.apply(this, arguments);\n            });\n            var instancePrototype = Object.create(basePrototype, { constructor: { value: constructor } });\n            constructor.prototype = instancePrototype;\n            var registeredClass = new RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n            var referenceConverter = new RegisteredPointer(name2, registeredClass, true, false, false);\n            var pointerConverter = new RegisteredPointer(name2 + \"*\", registeredClass, false, false, false);\n            var constPointerConverter = new RegisteredPointer(name2 + \" const*\", registeredClass, false, true, false);\n            registeredPointers[rawType] = { pointerType: pointerConverter, constPointerType: constPointerConverter };\n            replacePublicSymbol(legalFunctionName, constructor);\n            return [referenceConverter, pointerConverter, constPointerConverter];\n          });\n        }\n        function heap32VectorToArray(count, firstElement) {\n          var array = [];\n          for (var i = 0; i < count; i++) {\n            array.push(GROWABLE_HEAP_I32()[(firstElement >> 2) + i >>> 0]);\n          }\n          return array;\n        }\n        function __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n          assert(argCount > 0);\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          invoker = embind__requireFunction(invokerSignature, invoker);\n          var args = [rawConstructor];\n          var destructors = [];\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n            classType = classType[0];\n            var humanName = \"constructor \" + classType.name;\n            if (classType.registeredClass.constructor_body === void 0) {\n              classType.registeredClass.constructor_body = [];\n            }\n            if (classType.registeredClass.constructor_body[argCount - 1] !== void 0) {\n              throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n            }\n            classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {\n              throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes);\n            };\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n              classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {\n                if (arguments.length !== argCount - 1) {\n                  throwBindingError(humanName + \" called with \" + arguments.length + \" arguments, expected \" + (argCount - 1));\n                }\n                destructors.length = 0;\n                args.length = argCount;\n                for (var i = 1; i < argCount; ++i) {\n                  args[i] = argTypes[i][\"toWireType\"](destructors, arguments[i - 1]);\n                }\n                var ptr = invoker.apply(null, args);\n                runDestructors(destructors);\n                return argTypes[0][\"fromWireType\"](ptr);\n              };\n              return [];\n            });\n            return [];\n          });\n        }\n        function new_(constructor, argumentList) {\n          if (!(constructor instanceof Function)) {\n            throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n          }\n          var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {\n          });\n          dummy.prototype = constructor.prototype;\n          var obj = new dummy();\n          var r = constructor.apply(obj, argumentList);\n          return r instanceof Object ? r : obj;\n        }\n        function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n          var argCount = argTypes.length;\n          if (argCount < 2) {\n            throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n          }\n          var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n          var needsDestructorStack = false;\n          for (var i = 1; i < argTypes.length; ++i) {\n            if (argTypes[i] !== null && argTypes[i].destructorFunction === void 0) {\n              needsDestructorStack = true;\n              break;\n            }\n          }\n          var returns = argTypes[0].name !== \"void\";\n          var argsList = \"\";\n          var argsListWired = \"\";\n          for (var i = 0; i < argCount - 2; ++i) {\n            argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n            argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n          }\n          var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\nif (arguments.length !== \" + (argCount - 2) + \") {\\nthrowBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n}\\n\";\n          if (needsDestructorStack) {\n            invokerFnBody += \"var destructors = [];\\n\";\n          }\n          var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n          var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n          var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n          if (isClassMethodFunc) {\n            invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n          }\n          for (var i = 0; i < argCount - 2; ++i) {\n            invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n            args1.push(\"argType\" + i);\n            args2.push(argTypes[i + 2]);\n          }\n          if (isClassMethodFunc) {\n            argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n          }\n          invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n          if (needsDestructorStack) {\n            invokerFnBody += \"runDestructors(destructors);\\n\";\n          } else {\n            for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n              var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n              if (argTypes[i].destructorFunction !== null) {\n                invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n                args1.push(paramName + \"_dtor\");\n                args2.push(argTypes[i].destructorFunction);\n              }\n            }\n          }\n          if (returns) {\n            invokerFnBody += \"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\";\n          } else {\n          }\n          invokerFnBody += \"}\\n\";\n          args1.push(invokerFnBody);\n          var invokerFunction = new_(Function, args1).apply(null, args2);\n          return invokerFunction;\n        }\n        function __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          methodName = readLatin1String(methodName);\n          rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n            classType = classType[0];\n            var humanName = classType.name + \".\" + methodName;\n            if (methodName.startsWith(\"@@\")) {\n              methodName = Symbol[methodName.substring(2)];\n            }\n            if (isPureVirtual) {\n              classType.registeredClass.pureVirtualFunctions.push(methodName);\n            }\n            function unboundTypesHandler() {\n              throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n            }\n            var proto = classType.registeredClass.instancePrototype;\n            var method = proto[methodName];\n            if (method === void 0 || method.overloadTable === void 0 && method.className !== classType.name && method.argCount === argCount - 2) {\n              unboundTypesHandler.argCount = argCount - 2;\n              unboundTypesHandler.className = classType.name;\n              proto[methodName] = unboundTypesHandler;\n            } else {\n              ensureOverloadTable(proto, methodName, humanName);\n              proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n            }\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n              var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\n              if (proto[methodName].overloadTable === void 0) {\n                memberFunction.argCount = argCount - 2;\n                proto[methodName] = memberFunction;\n              } else {\n                proto[methodName].overloadTable[argCount - 2] = memberFunction;\n              }\n              return [];\n            });\n            return [];\n          });\n        }\n        var emval_free_list = [];\n        var emval_handle_array = [{}, { value: void 0 }, { value: null }, { value: true }, { value: false }];\n        function __emval_decref(handle) {\n          if (handle > 4 && --emval_handle_array[handle].refcount === 0) {\n            emval_handle_array[handle] = void 0;\n            emval_free_list.push(handle);\n          }\n        }\n        function count_emval_handles() {\n          var count = 0;\n          for (var i = 5; i < emval_handle_array.length; ++i) {\n            if (emval_handle_array[i] !== void 0) {\n              ++count;\n            }\n          }\n          return count;\n        }\n        function get_first_emval() {\n          for (var i = 5; i < emval_handle_array.length; ++i) {\n            if (emval_handle_array[i] !== void 0) {\n              return emval_handle_array[i];\n            }\n          }\n          return null;\n        }\n        function init_emval() {\n          Module[\"count_emval_handles\"] = count_emval_handles;\n          Module[\"get_first_emval\"] = get_first_emval;\n        }\n        function __emval_register(value) {\n          switch (value) {\n            case void 0: {\n              return 1;\n            }\n            case null: {\n              return 2;\n            }\n            case true: {\n              return 3;\n            }\n            case false: {\n              return 4;\n            }\n            default: {\n              var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n              emval_handle_array[handle] = { refcount: 1, value };\n              return handle;\n            }\n          }\n        }\n        function __embind_register_emval(rawType, name2) {\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(handle) {\n            var rv = emval_handle_array[handle].value;\n            __emval_decref(handle);\n            return rv;\n          }, \"toWireType\": function(destructors, value) {\n            return __emval_register(value);\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: null });\n        }\n        function enumReadValueFromPointer(name2, shift, signed) {\n          switch (shift) {\n            case 0:\n              return function(pointer) {\n                var heap = signed ? GROWABLE_HEAP_I8() : GROWABLE_HEAP_U8();\n                return this[\"fromWireType\"](heap[pointer >>> 0]);\n              };\n            case 1:\n              return function(pointer) {\n                var heap = signed ? GROWABLE_HEAP_I16() : GROWABLE_HEAP_U16();\n                return this[\"fromWireType\"](heap[pointer >>> 1]);\n              };\n            case 2:\n              return function(pointer) {\n                var heap = signed ? GROWABLE_HEAP_I32() : GROWABLE_HEAP_U32();\n                return this[\"fromWireType\"](heap[pointer >>> 2]);\n              };\n            default:\n              throw new TypeError(\"Unknown integer type: \" + name2);\n          }\n        }\n        function __embind_register_enum(rawType, name2, size, isSigned) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          function ctor() {\n          }\n          ctor.values = {};\n          registerType(rawType, { name: name2, constructor: ctor, \"fromWireType\": function(c) {\n            return this.constructor.values[c];\n          }, \"toWireType\": function(destructors, c) {\n            return c.value;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": enumReadValueFromPointer(name2, shift, isSigned), destructorFunction: null });\n          exposePublicSymbol(name2, ctor);\n        }\n        function requireRegisteredType(rawType, humanName) {\n          var impl = registeredTypes[rawType];\n          if (impl === void 0) {\n            throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n          }\n          return impl;\n        }\n        function __embind_register_enum_value(rawEnumType, name2, enumValue) {\n          var enumType = requireRegisteredType(rawEnumType, \"enum\");\n          name2 = readLatin1String(name2);\n          var Enum = enumType.constructor;\n          var Value2 = Object.create(enumType.constructor.prototype, { value: { value: enumValue }, constructor: { value: createNamedFunction(enumType.name + \"_\" + name2, function() {\n          }) } });\n          Enum.values[enumValue] = Value2;\n          Enum[name2] = Value2;\n        }\n        function _embind_repr(v) {\n          if (v === null) {\n            return \"null\";\n          }\n          var t = typeof v;\n          if (t === \"object\" || t === \"array\" || t === \"function\") {\n            return v.toString();\n          } else {\n            return \"\" + v;\n          }\n        }\n        function floatReadValueFromPointer(name2, shift) {\n          switch (shift) {\n            case 2:\n              return function(pointer) {\n                return this[\"fromWireType\"](GROWABLE_HEAP_F32()[pointer >>> 2]);\n              };\n            case 3:\n              return function(pointer) {\n                return this[\"fromWireType\"](GROWABLE_HEAP_F64()[pointer >>> 3]);\n              };\n            default:\n              throw new TypeError(\"Unknown float type: \" + name2);\n          }\n        }\n        function __embind_register_float(rawType, name2, size) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            return value;\n          }, \"toWireType\": function(destructors, value) {\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n            }\n            return value;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": floatReadValueFromPointer(name2, shift), destructorFunction: null });\n        }\n        function __embind_register_function(name2, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {\n          var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          name2 = readLatin1String(name2);\n          rawInvoker = embind__requireFunction(signature, rawInvoker);\n          exposePublicSymbol(name2, function() {\n            throwUnboundTypeError(\"Cannot call \" + name2 + \" due to unbound types\", argTypes);\n          }, argCount - 1);\n          whenDependentTypesAreResolved([], argTypes, function(argTypes2) {\n            var invokerArgsArray = [argTypes2[0], null].concat(argTypes2.slice(1));\n            replacePublicSymbol(name2, craftInvokerFunction(name2, invokerArgsArray, null, rawInvoker, fn), argCount - 1);\n            return [];\n          });\n        }\n        function integerReadValueFromPointer(name2, shift, signed) {\n          switch (shift) {\n            case 0:\n              return signed ? function readS8FromPointer(pointer) {\n                return GROWABLE_HEAP_I8()[pointer >>> 0];\n              } : function readU8FromPointer(pointer) {\n                return GROWABLE_HEAP_U8()[pointer >>> 0];\n              };\n            case 1:\n              return signed ? function readS16FromPointer(pointer) {\n                return GROWABLE_HEAP_I16()[pointer >>> 1];\n              } : function readU16FromPointer(pointer) {\n                return GROWABLE_HEAP_U16()[pointer >>> 1];\n              };\n            case 2:\n              return signed ? function readS32FromPointer(pointer) {\n                return GROWABLE_HEAP_I32()[pointer >>> 2];\n              } : function readU32FromPointer(pointer) {\n                return GROWABLE_HEAP_U32()[pointer >>> 2];\n              };\n            default:\n              throw new TypeError(\"Unknown integer type: \" + name2);\n          }\n        }\n        function __embind_register_integer(primitiveType, name2, size, minRange, maxRange) {\n          name2 = readLatin1String(name2);\n          if (maxRange === -1) {\n            maxRange = 4294967295;\n          }\n          var shift = getShiftFromSize(size);\n          var fromWireType = function(value) {\n            return value;\n          };\n          if (minRange === 0) {\n            var bitshift = 32 - 8 * size;\n            fromWireType = function(value) {\n              return value << bitshift >>> bitshift;\n            };\n          }\n          var isUnsignedType = name2.includes(\"unsigned\");\n          registerType(primitiveType, { name: name2, \"fromWireType\": fromWireType, \"toWireType\": function(destructors, value) {\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n            }\n            if (value < minRange || value > maxRange) {\n              throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name2 + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n            }\n            return isUnsignedType ? value >>> 0 : value | 0;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": integerReadValueFromPointer(name2, shift, minRange !== 0), destructorFunction: null });\n        }\n        function __embind_register_memory_view(rawType, dataTypeIndex, name2) {\n          var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\n          var TA = typeMapping[dataTypeIndex];\n          function decodeMemoryView(handle) {\n            handle = handle >> 2;\n            var heap = GROWABLE_HEAP_U32();\n            var size = heap[handle >>> 0];\n            var data = heap[handle + 1 >>> 0];\n            return new TA(buffer, data, size);\n          }\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": decodeMemoryView, \"argPackAdvance\": 8, \"readValueFromPointer\": decodeMemoryView }, { ignoreDuplicateRegistrations: true });\n        }\n        function __embind_register_std_string(rawType, name2) {\n          name2 = readLatin1String(name2);\n          var stdStringIsUTF8 = name2 === \"std::string\";\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            var length = GROWABLE_HEAP_U32()[value >>> 2];\n            var str;\n            if (stdStringIsUTF8) {\n              var decodeStartPtr = value + 4;\n              for (var i = 0; i <= length; ++i) {\n                var currentBytePtr = value + 4 + i;\n                if (i == length || GROWABLE_HEAP_U8()[currentBytePtr >>> 0] == 0) {\n                  var maxRead = currentBytePtr - decodeStartPtr;\n                  var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                  if (str === void 0) {\n                    str = stringSegment;\n                  } else {\n                    str += String.fromCharCode(0);\n                    str += stringSegment;\n                  }\n                  decodeStartPtr = currentBytePtr + 1;\n                }\n              }\n            } else {\n              var a = new Array(length);\n              for (var i = 0; i < length; ++i) {\n                a[i] = String.fromCharCode(GROWABLE_HEAP_U8()[value + 4 + i >>> 0]);\n              }\n              str = a.join(\"\");\n            }\n            _free(value);\n            return str;\n          }, \"toWireType\": function(destructors, value) {\n            if (value instanceof ArrayBuffer) {\n              value = new Uint8Array(value);\n            }\n            var getLength;\n            var valueIsOfTypeString = typeof value === \"string\";\n            if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n              throwBindingError(\"Cannot pass non-string to std::string\");\n            }\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n              getLength = function() {\n                return lengthBytesUTF8(value);\n              };\n            } else {\n              getLength = function() {\n                return value.length;\n              };\n            }\n            var length = getLength();\n            var ptr = _malloc(4 + length + 1);\n            ptr >>>= 0;\n            GROWABLE_HEAP_U32()[ptr >>> 2] = length;\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n              stringToUTF8(value, ptr + 4, length + 1);\n            } else {\n              if (valueIsOfTypeString) {\n                for (var i = 0; i < length; ++i) {\n                  var charCode = value.charCodeAt(i);\n                  if (charCode > 255) {\n                    _free(ptr);\n                    throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n                  }\n                  GROWABLE_HEAP_U8()[ptr + 4 + i >>> 0] = charCode;\n                }\n              } else {\n                for (var i = 0; i < length; ++i) {\n                  GROWABLE_HEAP_U8()[ptr + 4 + i >>> 0] = value[i];\n                }\n              }\n            }\n            if (destructors !== null) {\n              destructors.push(_free, ptr);\n            }\n            return ptr;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\n            _free(ptr);\n          } });\n        }\n        function __embind_register_std_wstring(rawType, charSize, name2) {\n          name2 = readLatin1String(name2);\n          var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n          if (charSize === 2) {\n            decodeString = UTF16ToString;\n            encodeString = stringToUTF16;\n            lengthBytesUTF = lengthBytesUTF16;\n            getHeap = function() {\n              return GROWABLE_HEAP_U16();\n            };\n            shift = 1;\n          } else if (charSize === 4) {\n            decodeString = UTF32ToString;\n            encodeString = stringToUTF32;\n            lengthBytesUTF = lengthBytesUTF32;\n            getHeap = function() {\n              return GROWABLE_HEAP_U32();\n            };\n            shift = 2;\n          }\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            var length = GROWABLE_HEAP_U32()[value >>> 2];\n            var HEAP = getHeap();\n            var str;\n            var decodeStartPtr = value + 4;\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = value + 4 + i * charSize;\n              if (i == length || HEAP[currentBytePtr >>> shift] == 0) {\n                var maxReadBytes = currentBytePtr - decodeStartPtr;\n                var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n                if (str === void 0) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + charSize;\n              }\n            }\n            _free(value);\n            return str;\n          }, \"toWireType\": function(destructors, value) {\n            if (!(typeof value === \"string\")) {\n              throwBindingError(\"Cannot pass non-string to C++ string type \" + name2);\n            }\n            var length = lengthBytesUTF(value);\n            var ptr = _malloc(4 + length + charSize);\n            ptr >>>= 0;\n            GROWABLE_HEAP_U32()[ptr >>> 2] = length >> shift;\n            encodeString(value, ptr + 4, length + charSize);\n            if (destructors !== null) {\n              destructors.push(_free, ptr);\n            }\n            return ptr;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\n            _free(ptr);\n          } });\n        }\n        function __embind_register_value_array(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n          tupleRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), elements: [] };\n        }\n        function __embind_register_value_array_element(rawTupleType, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n          tupleRegistrations[rawTupleType].elements.push({ getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\n        }\n        function __embind_register_value_object(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n          structRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), fields: [] };\n        }\n        function __embind_register_value_object_field(structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n          structRegistrations[structType].fields.push({ fieldName: readLatin1String(fieldName), getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\n        }\n        function __embind_register_void(rawType, name2) {\n          name2 = readLatin1String(name2);\n          registerType(rawType, { isVoid: true, name: name2, \"argPackAdvance\": 0, \"fromWireType\": function() {\n            return void 0;\n          }, \"toWireType\": function(destructors, o) {\n            return void 0;\n          } });\n        }\n        function __emscripten_notify_thread_queue(targetThreadId, mainThreadId) {\n          if (targetThreadId == mainThreadId) {\n            postMessage({ \"cmd\": \"processQueuedMainThreadWork\" });\n          } else if (ENVIRONMENT_IS_PTHREAD) {\n            postMessage({ \"targetThread\": targetThreadId, \"cmd\": \"processThreadQueue\" });\n          } else {\n            var pthread = PThread.pthreads[targetThreadId];\n            var worker = pthread && pthread.worker;\n            if (!worker) {\n              return;\n            }\n            worker.postMessage({ \"cmd\": \"processThreadQueue\" });\n          }\n          return 1;\n        }\n        function requireHandle(handle) {\n          if (!handle) {\n            throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n          }\n          return emval_handle_array[handle].value;\n        }\n        function __emval_as(handle, returnType, destructorsRef) {\n          handle = requireHandle(handle);\n          returnType = requireRegisteredType(returnType, \"emval::as\");\n          var destructors = [];\n          var rd = __emval_register(destructors);\n          GROWABLE_HEAP_I32()[destructorsRef >>> 2] = rd;\n          return returnType[\"toWireType\"](destructors, handle);\n        }\n        function __emval_lookupTypes(argCount, argTypes) {\n          var a = new Array(argCount);\n          for (var i = 0; i < argCount; ++i) {\n            a[i] = requireRegisteredType(GROWABLE_HEAP_I32()[(argTypes >> 2) + i >>> 0], \"parameter \" + i);\n          }\n          return a;\n        }\n        function __emval_call(handle, argCount, argTypes, argv) {\n          handle = requireHandle(handle);\n          var types = __emval_lookupTypes(argCount, argTypes);\n          var args = new Array(argCount);\n          for (var i = 0; i < argCount; ++i) {\n            var type = types[i];\n            args[i] = type[\"readValueFromPointer\"](argv);\n            argv += type[\"argPackAdvance\"];\n          }\n          var rv = handle.apply(void 0, args);\n          return __emval_register(rv);\n        }\n        var emval_symbols = {};\n        function getStringOrSymbol(address) {\n          var symbol = emval_symbols[address];\n          if (symbol === void 0) {\n            return readLatin1String(address);\n          } else {\n            return symbol;\n          }\n        }\n        function emval_get_global() {\n          if (typeof globalThis === \"object\") {\n            return globalThis;\n          }\n          return function() {\n            return Function;\n          }()(\"return this\")();\n        }\n        function __emval_get_global(name2) {\n          if (name2 === 0) {\n            return __emval_register(emval_get_global());\n          } else {\n            name2 = getStringOrSymbol(name2);\n            return __emval_register(emval_get_global()[name2]);\n          }\n        }\n        function __emval_get_property(handle, key2) {\n          handle = requireHandle(handle);\n          key2 = requireHandle(key2);\n          return __emval_register(handle[key2]);\n        }\n        function __emval_incref(handle) {\n          if (handle > 4) {\n            emval_handle_array[handle].refcount += 1;\n          }\n        }\n        function __emval_instanceof(object, constructor) {\n          object = requireHandle(object);\n          constructor = requireHandle(constructor);\n          return object instanceof constructor;\n        }\n        function __emval_is_number(handle) {\n          handle = requireHandle(handle);\n          return typeof handle === \"number\";\n        }\n        function __emval_new_array() {\n          return __emval_register([]);\n        }\n        function __emval_new_cstring(v) {\n          return __emval_register(getStringOrSymbol(v));\n        }\n        function __emval_new_object() {\n          return __emval_register({});\n        }\n        function __emval_run_destructors(handle) {\n          var destructors = emval_handle_array[handle].value;\n          runDestructors(destructors);\n          __emval_decref(handle);\n        }\n        function __emval_set_property(handle, key2, value) {\n          handle = requireHandle(handle);\n          key2 = requireHandle(key2);\n          value = requireHandle(value);\n          handle[key2] = value;\n        }\n        function __emval_take_value(type, argv) {\n          type = requireRegisteredType(type, \"_emval_take_value\");\n          var v = type[\"readValueFromPointer\"](argv);\n          return __emval_register(v);\n        }\n        function _abort() {\n          abort();\n        }\n        var readAsmConstArgsArray = [];\n        function readAsmConstArgs(sigPtr, buf) {\n          readAsmConstArgsArray.length = 0;\n          var ch;\n          buf >>= 2;\n          while (ch = GROWABLE_HEAP_U8()[sigPtr++ >>> 0]) {\n            var double = ch < 105;\n            if (double && buf & 1)\n              buf++;\n            readAsmConstArgsArray.push(double ? GROWABLE_HEAP_F64()[buf++ >>> 1] : GROWABLE_HEAP_I32()[buf >>> 0]);\n            ++buf;\n          }\n          return readAsmConstArgsArray;\n        }\n        function _emscripten_asm_const_int(code, sigPtr, argbuf) {\n          var args = readAsmConstArgs(sigPtr, argbuf);\n          return ASM_CONSTS[code].apply(null, args);\n        }\n        function _emscripten_check_blocking_allowed() {\n          if (ENVIRONMENT_IS_NODE)\n            return;\n          if (ENVIRONMENT_IS_WORKER)\n            return;\n          warnOnce(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\");\n        }\n        function _emscripten_conditional_set_current_thread_status(expectedStatus, newStatus) {\n        }\n        function _emscripten_futex_wait(addr, val, timeout) {\n          if (addr <= 0 || addr > GROWABLE_HEAP_I8().length || addr & true)\n            return -28;\n          if (!ENVIRONMENT_IS_WEB) {\n            var ret = Atomics.wait(GROWABLE_HEAP_I32(), addr >> 2, val, timeout);\n            if (ret === \"timed-out\")\n              return -73;\n            if (ret === \"not-equal\")\n              return -6;\n            if (ret === \"ok\")\n              return 0;\n            throw \"Atomics.wait returned an unexpected value \" + ret;\n          } else {\n            if (Atomics.load(GROWABLE_HEAP_I32(), addr >> 2) != val) {\n              return -6;\n            }\n            var tNow = performance.now();\n            var tEnd = tNow + timeout;\n            var lastAddr = Atomics.exchange(GROWABLE_HEAP_I32(), __emscripten_main_thread_futex >> 2, addr);\n            while (1) {\n              tNow = performance.now();\n              if (tNow > tEnd) {\n                lastAddr = Atomics.exchange(GROWABLE_HEAP_I32(), __emscripten_main_thread_futex >> 2, 0);\n                return -73;\n              }\n              lastAddr = Atomics.exchange(GROWABLE_HEAP_I32(), __emscripten_main_thread_futex >> 2, 0);\n              if (lastAddr == 0) {\n                break;\n              }\n              _emscripten_main_thread_process_queued_calls();\n              if (Atomics.load(GROWABLE_HEAP_I32(), addr >> 2) != val) {\n                return -6;\n              }\n              lastAddr = Atomics.exchange(GROWABLE_HEAP_I32(), __emscripten_main_thread_futex >> 2, addr);\n            }\n            return 0;\n          }\n        }\n        function _emscripten_memcpy_big(dest, src, num) {\n          GROWABLE_HEAP_U8().copyWithin(dest >>> 0, src >>> 0, src + num >>> 0);\n        }\n        function _emscripten_proxy_to_main_thread_js(index, sync) {\n          var numCallArgs = arguments.length - 2;\n          var stack = stackSave();\n          var serializedNumCallArgs = numCallArgs;\n          var args = stackAlloc(serializedNumCallArgs * 8);\n          var b = args >> 3;\n          for (var i = 0; i < numCallArgs; i++) {\n            var arg = arguments[2 + i];\n            GROWABLE_HEAP_F64()[b + i >>> 0] = arg;\n          }\n          var ret = _emscripten_run_in_main_runtime_thread_js(index, serializedNumCallArgs, args, sync);\n          stackRestore(stack);\n          return ret;\n        }\n        var _emscripten_receive_on_main_thread_js_callArgs = [];\n        function _emscripten_receive_on_main_thread_js(index, numCallArgs, args) {\n          _emscripten_receive_on_main_thread_js_callArgs.length = numCallArgs;\n          var b = args >> 3;\n          for (var i = 0; i < numCallArgs; i++) {\n            _emscripten_receive_on_main_thread_js_callArgs[i] = GROWABLE_HEAP_F64()[b + i >>> 0];\n          }\n          var isEmAsmConst = index < 0;\n          var func = !isEmAsmConst ? proxiedFunctionTable[index] : ASM_CONSTS[-index - 1];\n          return func.apply(null, _emscripten_receive_on_main_thread_js_callArgs);\n        }\n        function emscripten_realloc_buffer(size) {\n          try {\n            wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n            return 1;\n          } catch (e) {\n          }\n        }\n        function _emscripten_resize_heap(requestedSize) {\n          var oldSize = GROWABLE_HEAP_U8().length;\n          requestedSize = requestedSize >>> 0;\n          if (requestedSize <= oldSize) {\n            return false;\n          }\n          var maxHeapSize = 4294901760;\n          if (requestedSize > maxHeapSize) {\n            return false;\n          }\n          for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n            var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n            var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n            var replacement = emscripten_realloc_buffer(newSize);\n            if (replacement) {\n              return true;\n            }\n          }\n          return false;\n        }\n        var JSEvents = { inEventHandler: 0, removeAllEventListeners: function() {\n          for (var i = JSEvents.eventHandlers.length - 1; i >= 0; --i) {\n            JSEvents._removeHandler(i);\n          }\n          JSEvents.eventHandlers = [];\n          JSEvents.deferredCalls = [];\n        }, registerRemoveEventListeners: function() {\n          if (!JSEvents.removeEventListenersRegistered) {\n            __ATEXIT__.push(JSEvents.removeAllEventListeners);\n            JSEvents.removeEventListenersRegistered = true;\n          }\n        }, deferredCalls: [], deferCall: function(targetFunction, precedence, argsList) {\n          function arraysHaveEqualContent(arrA, arrB) {\n            if (arrA.length != arrB.length)\n              return false;\n            for (var i2 in arrA) {\n              if (arrA[i2] != arrB[i2])\n                return false;\n            }\n            return true;\n          }\n          for (var i in JSEvents.deferredCalls) {\n            var call = JSEvents.deferredCalls[i];\n            if (call.targetFunction == targetFunction && arraysHaveEqualContent(call.argsList, argsList)) {\n              return;\n            }\n          }\n          JSEvents.deferredCalls.push({ targetFunction, precedence, argsList });\n          JSEvents.deferredCalls.sort(function(x, y) {\n            return x.precedence < y.precedence;\n          });\n        }, removeDeferredCalls: function(targetFunction) {\n          for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\n            if (JSEvents.deferredCalls[i].targetFunction == targetFunction) {\n              JSEvents.deferredCalls.splice(i, 1);\n              --i;\n            }\n          }\n        }, canPerformEventHandlerRequests: function() {\n          return JSEvents.inEventHandler && JSEvents.currentEventHandler.allowsDeferredCalls;\n        }, runDeferredCalls: function() {\n          if (!JSEvents.canPerformEventHandlerRequests()) {\n            return;\n          }\n          for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\n            var call = JSEvents.deferredCalls[i];\n            JSEvents.deferredCalls.splice(i, 1);\n            --i;\n            call.targetFunction.apply(null, call.argsList);\n          }\n        }, eventHandlers: [], removeAllHandlersOnTarget: function(target, eventTypeString) {\n          for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n            if (JSEvents.eventHandlers[i].target == target && (!eventTypeString || eventTypeString == JSEvents.eventHandlers[i].eventTypeString)) {\n              JSEvents._removeHandler(i--);\n            }\n          }\n        }, _removeHandler: function(i) {\n          var h = JSEvents.eventHandlers[i];\n          h.target.removeEventListener(h.eventTypeString, h.eventListenerFunc, h.useCapture);\n          JSEvents.eventHandlers.splice(i, 1);\n        }, registerOrRemoveHandler: function(eventHandler) {\n          var jsEventHandler = function jsEventHandler2(event) {\n            ++JSEvents.inEventHandler;\n            JSEvents.currentEventHandler = eventHandler;\n            JSEvents.runDeferredCalls();\n            eventHandler.handlerFunc(event);\n            JSEvents.runDeferredCalls();\n            --JSEvents.inEventHandler;\n          };\n          if (eventHandler.callbackfunc) {\n            eventHandler.eventListenerFunc = jsEventHandler;\n            eventHandler.target.addEventListener(eventHandler.eventTypeString, jsEventHandler, eventHandler.useCapture);\n            JSEvents.eventHandlers.push(eventHandler);\n            JSEvents.registerRemoveEventListeners();\n          } else {\n            for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n              if (JSEvents.eventHandlers[i].target == eventHandler.target && JSEvents.eventHandlers[i].eventTypeString == eventHandler.eventTypeString) {\n                JSEvents._removeHandler(i--);\n              }\n            }\n          }\n        }, queueEventHandlerOnThread_iiii: function(targetThread, eventHandlerFunc, eventTypeId, eventData, userData) {\n          var stackTop = stackSave();\n          var varargs = stackAlloc(12);\n          GROWABLE_HEAP_I32()[varargs >>> 2] = eventTypeId;\n          GROWABLE_HEAP_I32()[varargs + 4 >>> 2] = eventData;\n          GROWABLE_HEAP_I32()[varargs + 8 >>> 2] = userData;\n          __emscripten_call_on_thread(0, targetThread, 637534208, eventHandlerFunc, eventData, varargs);\n          stackRestore(stackTop);\n        }, getTargetThreadForEventCallback: function(targetThread) {\n          switch (targetThread) {\n            case 1:\n              return 0;\n            case 2:\n              return PThread.currentProxiedOperationCallerThread;\n            default:\n              return targetThread;\n          }\n        }, getNodeNameForTarget: function(target) {\n          if (!target)\n            return \"\";\n          if (target == window)\n            return \"#window\";\n          if (target == screen)\n            return \"#screen\";\n          return target && target.nodeName ? target.nodeName : \"\";\n        }, fullscreenEnabled: function() {\n          return document.fullscreenEnabled || document.webkitFullscreenEnabled;\n        } };\n        function stringToNewUTF8(jsString) {\n          var length = lengthBytesUTF8(jsString) + 1;\n          var cString = _malloc(length);\n          stringToUTF8(jsString, cString, length);\n          return cString;\n        }\n        function _emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread, targetCanvas, width, height) {\n          var stackTop = stackSave();\n          var varargs = stackAlloc(12);\n          var targetCanvasPtr = 0;\n          if (targetCanvas) {\n            targetCanvasPtr = stringToNewUTF8(targetCanvas);\n          }\n          GROWABLE_HEAP_I32()[varargs >>> 2] = targetCanvasPtr;\n          GROWABLE_HEAP_I32()[varargs + 4 >>> 2] = width;\n          GROWABLE_HEAP_I32()[varargs + 8 >>> 2] = height;\n          __emscripten_call_on_thread(0, targetThread, 657457152, 0, targetCanvasPtr, varargs);\n          stackRestore(stackTop);\n        }\n        function _emscripten_set_offscreencanvas_size_on_target_thread(targetThread, targetCanvas, width, height) {\n          targetCanvas = targetCanvas ? UTF8ToString(targetCanvas) : \"\";\n          _emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread, targetCanvas, width, height);\n        }\n        function maybeCStringToJsString(cString) {\n          return cString > 2 ? UTF8ToString(cString) : cString;\n        }\n        var specialHTMLTargets = [0, typeof document !== \"undefined\" ? document : 0, typeof window !== \"undefined\" ? window : 0];\n        function findEventTarget(target) {\n          target = maybeCStringToJsString(target);\n          var domElement = specialHTMLTargets[target] || (typeof document !== \"undefined\" ? document.querySelector(target) : void 0);\n          return domElement;\n        }\n        function findCanvasEventTarget(target) {\n          return findEventTarget(target);\n        }\n        function _emscripten_set_canvas_element_size_calling_thread(target, width, height) {\n          var canvas = findCanvasEventTarget(target);\n          if (!canvas)\n            return -4;\n          if (canvas.canvasSharedPtr) {\n            GROWABLE_HEAP_I32()[canvas.canvasSharedPtr >>> 2] = width;\n            GROWABLE_HEAP_I32()[canvas.canvasSharedPtr + 4 >>> 2] = height;\n          }\n          if (canvas.offscreenCanvas || !canvas.controlTransferredOffscreen) {\n            if (canvas.offscreenCanvas)\n              canvas = canvas.offscreenCanvas;\n            var autoResizeViewport = false;\n            if (canvas.GLctxObject && canvas.GLctxObject.GLctx) {\n              var prevViewport = canvas.GLctxObject.GLctx.getParameter(2978);\n              autoResizeViewport = prevViewport[0] === 0 && prevViewport[1] === 0 && prevViewport[2] === canvas.width && prevViewport[3] === canvas.height;\n            }\n            canvas.width = width;\n            canvas.height = height;\n            if (autoResizeViewport) {\n              canvas.GLctxObject.GLctx.viewport(0, 0, width, height);\n            }\n          } else if (canvas.canvasSharedPtr) {\n            var targetThread = GROWABLE_HEAP_I32()[canvas.canvasSharedPtr + 8 >>> 2];\n            _emscripten_set_offscreencanvas_size_on_target_thread(targetThread, target, width, height);\n            return 1;\n          } else {\n            return -4;\n          }\n          return 0;\n        }\n        function _emscripten_set_canvas_element_size_main_thread(target, width, height) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(5, 1, target, width, height);\n          return _emscripten_set_canvas_element_size_calling_thread(target, width, height);\n        }\n        function _emscripten_set_canvas_element_size(target, width, height) {\n          var canvas = findCanvasEventTarget(target);\n          if (canvas) {\n            return _emscripten_set_canvas_element_size_calling_thread(target, width, height);\n          } else {\n            return _emscripten_set_canvas_element_size_main_thread(target, width, height);\n          }\n        }\n        function _emscripten_set_current_thread_status(newStatus) {\n        }\n        function __webgl_enable_ANGLE_instanced_arrays(ctx) {\n          var ext = ctx.getExtension(\"ANGLE_instanced_arrays\");\n          if (ext) {\n            ctx[\"vertexAttribDivisor\"] = function(index, divisor) {\n              ext[\"vertexAttribDivisorANGLE\"](index, divisor);\n            };\n            ctx[\"drawArraysInstanced\"] = function(mode, first, count, primcount) {\n              ext[\"drawArraysInstancedANGLE\"](mode, first, count, primcount);\n            };\n            ctx[\"drawElementsInstanced\"] = function(mode, count, type, indices, primcount) {\n              ext[\"drawElementsInstancedANGLE\"](mode, count, type, indices, primcount);\n            };\n            return 1;\n          }\n        }\n        function __webgl_enable_OES_vertex_array_object(ctx) {\n          var ext = ctx.getExtension(\"OES_vertex_array_object\");\n          if (ext) {\n            ctx[\"createVertexArray\"] = function() {\n              return ext[\"createVertexArrayOES\"]();\n            };\n            ctx[\"deleteVertexArray\"] = function(vao) {\n              ext[\"deleteVertexArrayOES\"](vao);\n            };\n            ctx[\"bindVertexArray\"] = function(vao) {\n              ext[\"bindVertexArrayOES\"](vao);\n            };\n            ctx[\"isVertexArray\"] = function(vao) {\n              return ext[\"isVertexArrayOES\"](vao);\n            };\n            return 1;\n          }\n        }\n        function __webgl_enable_WEBGL_draw_buffers(ctx) {\n          var ext = ctx.getExtension(\"WEBGL_draw_buffers\");\n          if (ext) {\n            ctx[\"drawBuffers\"] = function(n, bufs) {\n              ext[\"drawBuffersWEBGL\"](n, bufs);\n            };\n            return 1;\n          }\n        }\n        function __webgl_enable_WEBGL_multi_draw(ctx) {\n          return !!(ctx.multiDrawWebgl = ctx.getExtension(\"WEBGL_multi_draw\"));\n        }\n        var GL = { counter: 1, buffers: [], programs: [], framebuffers: [], renderbuffers: [], textures: [], shaders: [], vaos: [], contexts: {}, offscreenCanvases: {}, queries: [], stringCache: {}, unpackAlignment: 4, recordError: function recordError(errorCode) {\n          if (!GL.lastError) {\n            GL.lastError = errorCode;\n          }\n        }, getNewId: function(table) {\n          var ret = GL.counter++;\n          for (var i = table.length; i < ret; i++) {\n            table[i] = null;\n          }\n          return ret;\n        }, getSource: function(shader, count, string, length) {\n          var source = \"\";\n          for (var i = 0; i < count; ++i) {\n            var len = length ? GROWABLE_HEAP_I32()[length + i * 4 >>> 2] : -1;\n            source += UTF8ToString(GROWABLE_HEAP_I32()[string + i * 4 >>> 2], len < 0 ? void 0 : len);\n          }\n          return source;\n        }, createContext: function(canvas, webGLContextAttributes) {\n          if (!canvas.getContextSafariWebGL2Fixed) {\n            canvas.getContextSafariWebGL2Fixed = canvas.getContext;\n            canvas.getContext = function(ver, attrs) {\n              var gl = canvas.getContextSafariWebGL2Fixed(ver, attrs);\n              return ver == \"webgl\" == gl instanceof WebGLRenderingContext ? gl : null;\n            };\n          }\n          var ctx = canvas.getContext(\"webgl\", webGLContextAttributes);\n          if (!ctx)\n            return 0;\n          var handle = GL.registerContext(ctx, webGLContextAttributes);\n          return handle;\n        }, registerContext: function(ctx, webGLContextAttributes) {\n          var handle = _malloc(8);\n          GROWABLE_HEAP_I32()[handle + 4 >>> 2] = _pthread_self();\n          var context = { handle, attributes: webGLContextAttributes, version: webGLContextAttributes.majorVersion, GLctx: ctx };\n          if (ctx.canvas)\n            ctx.canvas.GLctxObject = context;\n          GL.contexts[handle] = context;\n          if (typeof webGLContextAttributes.enableExtensionsByDefault === \"undefined\" || webGLContextAttributes.enableExtensionsByDefault) {\n            GL.initExtensions(context);\n          }\n          return handle;\n        }, makeContextCurrent: function(contextHandle) {\n          GL.currentContext = GL.contexts[contextHandle];\n          Module.ctx = GLctx = GL.currentContext && GL.currentContext.GLctx;\n          return !(contextHandle && !GLctx);\n        }, getContext: function(contextHandle) {\n          return GL.contexts[contextHandle];\n        }, deleteContext: function(contextHandle) {\n          if (GL.currentContext === GL.contexts[contextHandle])\n            GL.currentContext = null;\n          if (typeof JSEvents === \"object\")\n            JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);\n          if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas)\n            GL.contexts[contextHandle].GLctx.canvas.GLctxObject = void 0;\n          _free(GL.contexts[contextHandle].handle);\n          GL.contexts[contextHandle] = null;\n        }, initExtensions: function(context) {\n          if (!context)\n            context = GL.currentContext;\n          if (context.initExtensionsDone)\n            return;\n          context.initExtensionsDone = true;\n          var GLctx2 = context.GLctx;\n          __webgl_enable_ANGLE_instanced_arrays(GLctx2);\n          __webgl_enable_OES_vertex_array_object(GLctx2);\n          __webgl_enable_WEBGL_draw_buffers(GLctx2);\n          {\n            GLctx2.disjointTimerQueryExt = GLctx2.getExtension(\"EXT_disjoint_timer_query\");\n          }\n          __webgl_enable_WEBGL_multi_draw(GLctx2);\n          var exts = GLctx2.getSupportedExtensions() || [];\n          exts.forEach(function(ext) {\n            if (!ext.includes(\"lose_context\") && !ext.includes(\"debug\")) {\n              GLctx2.getExtension(ext);\n            }\n          });\n        } };\n        var __emscripten_webgl_power_preferences = [\"default\", \"low-power\", \"high-performance\"];\n        function _emscripten_webgl_do_create_context(target, attributes) {\n          var a = attributes >> 2;\n          var powerPreference = GROWABLE_HEAP_I32()[a + (24 >> 2) >>> 0];\n          var contextAttributes = { \"alpha\": !!GROWABLE_HEAP_I32()[a + (0 >> 2) >>> 0], \"depth\": !!GROWABLE_HEAP_I32()[a + (4 >> 2) >>> 0], \"stencil\": !!GROWABLE_HEAP_I32()[a + (8 >> 2) >>> 0], \"antialias\": !!GROWABLE_HEAP_I32()[a + (12 >> 2) >>> 0], \"premultipliedAlpha\": !!GROWABLE_HEAP_I32()[a + (16 >> 2) >>> 0], \"preserveDrawingBuffer\": !!GROWABLE_HEAP_I32()[a + (20 >> 2) >>> 0], \"powerPreference\": __emscripten_webgl_power_preferences[powerPreference], \"failIfMajorPerformanceCaveat\": !!GROWABLE_HEAP_I32()[a + (28 >> 2) >>> 0], majorVersion: GROWABLE_HEAP_I32()[a + (32 >> 2) >>> 0], minorVersion: GROWABLE_HEAP_I32()[a + (36 >> 2) >>> 0], enableExtensionsByDefault: GROWABLE_HEAP_I32()[a + (40 >> 2) >>> 0], explicitSwapControl: GROWABLE_HEAP_I32()[a + (44 >> 2) >>> 0], proxyContextToMainThread: GROWABLE_HEAP_I32()[a + (48 >> 2) >>> 0], renderViaOffscreenBackBuffer: GROWABLE_HEAP_I32()[a + (52 >> 2) >>> 0] };\n          var canvas = findCanvasEventTarget(target);\n          if (!canvas) {\n            return 0;\n          }\n          if (contextAttributes.explicitSwapControl) {\n            return 0;\n          }\n          var contextHandle = GL.createContext(canvas, contextAttributes);\n          return contextHandle;\n        }\n        function _emscripten_webgl_create_context(a0, a1) {\n          return _emscripten_webgl_do_create_context(a0, a1);\n        }\n        var ENV = {};\n        function getExecutableName() {\n          return thisProgram || \"./this.program\";\n        }\n        function getEnvStrings() {\n          if (!getEnvStrings.strings) {\n            var lang = (typeof navigator === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n            var env = { \"USER\": \"web_user\", \"LOGNAME\": \"web_user\", \"PATH\": \"/\", \"PWD\": \"/\", \"HOME\": \"/home/web_user\", \"LANG\": lang, \"_\": getExecutableName() };\n            for (var x in ENV) {\n              if (ENV[x] === void 0)\n                delete env[x];\n              else\n                env[x] = ENV[x];\n            }\n            var strings = [];\n            for (var x in env) {\n              strings.push(x + \"=\" + env[x]);\n            }\n            getEnvStrings.strings = strings;\n          }\n          return getEnvStrings.strings;\n        }\n        function _environ_get(__environ, environ_buf) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(6, 1, __environ, environ_buf);\n          try {\n            var bufSize = 0;\n            getEnvStrings().forEach(function(string, i) {\n              var ptr = environ_buf + bufSize;\n              GROWABLE_HEAP_I32()[__environ + i * 4 >>> 2] = ptr;\n              writeAsciiToMemory(string, ptr);\n              bufSize += string.length + 1;\n            });\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _environ_sizes_get(penviron_count, penviron_buf_size) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(7, 1, penviron_count, penviron_buf_size);\n          try {\n            var strings = getEnvStrings();\n            GROWABLE_HEAP_I32()[penviron_count >>> 2] = strings.length;\n            var bufSize = 0;\n            strings.forEach(function(string) {\n              bufSize += string.length + 1;\n            });\n            GROWABLE_HEAP_I32()[penviron_buf_size >>> 2] = bufSize;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_close(fd) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(8, 1, fd);\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            FS.close(stream);\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_read(fd, iov, iovcnt, pnum) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(9, 1, fd, iov, iovcnt, pnum);\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n            GROWABLE_HEAP_I32()[pnum >>> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(10, 1, fd, offset_low, offset_high, whence, newOffset);\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var HIGH_OFFSET = 4294967296;\n            var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\n            var DOUBLE_LIMIT = 9007199254740992;\n            if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\n              return -61;\n            }\n            FS.llseek(stream, offset, whence);\n            tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], GROWABLE_HEAP_I32()[newOffset >>> 2] = tempI64[0], GROWABLE_HEAP_I32()[newOffset + 4 >>> 2] = tempI64[1];\n            if (stream.getdents && offset === 0 && whence === 0)\n              stream.getdents = null;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_write(fd, iov, iovcnt, pnum) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(11, 1, fd, iov, iovcnt, pnum);\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doWritev(stream, iov, iovcnt);\n            GROWABLE_HEAP_I32()[pnum >>> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function spawnThread(threadParams) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            throw \"Internal Error! spawnThread() can only ever be called from main application thread!\";\n          var worker = PThread.getNewWorker();\n          if (!worker) {\n            return 6;\n          }\n          if (worker.pthread !== void 0)\n            throw \"Internal error!\";\n          if (!threadParams.pthread_ptr)\n            throw \"Internal error, no pthread ptr!\";\n          PThread.runningWorkers.push(worker);\n          var tlsMemory = _malloc(128 * 4);\n          for (var i = 0; i < 128; ++i) {\n            GROWABLE_HEAP_I32()[tlsMemory + i * 4 >>> 2] = 0;\n          }\n          var stackHigh = threadParams.stackBase + threadParams.stackSize;\n          var pthread = PThread.pthreads[threadParams.pthread_ptr] = { worker, stackBase: threadParams.stackBase, stackSize: threadParams.stackSize, allocatedOwnStack: threadParams.allocatedOwnStack, threadInfoStruct: threadParams.pthread_ptr };\n          var tis = pthread.threadInfoStruct >> 2;\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (64 >> 2), threadParams.detached);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (100 >> 2), tlsMemory);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (40 >> 2), pthread.threadInfoStruct);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (80 >> 2), threadParams.stackSize);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (76 >> 2), stackHigh);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (104 >> 2), threadParams.stackSize);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (104 + 8 >> 2), stackHigh);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (104 + 12 >> 2), threadParams.detached);\n          var global_libc = _emscripten_get_global_libc();\n          var global_locale = global_libc + 40;\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (172 >> 2), global_locale);\n          worker.pthread = pthread;\n          var msg = { \"cmd\": \"run\", \"start_routine\": threadParams.startRoutine, \"arg\": threadParams.arg, \"threadInfoStruct\": threadParams.pthread_ptr, \"stackBase\": threadParams.stackBase, \"stackSize\": threadParams.stackSize };\n          worker.runPthread = function() {\n            msg.time = performance.now();\n            worker.postMessage(msg, threadParams.transferList);\n          };\n          if (worker.loaded) {\n            worker.runPthread();\n            delete worker.runPthread;\n          }\n          return 0;\n        }\n        function _pthread_create(pthread_ptr, attr, start_routine, arg) {\n          if (typeof SharedArrayBuffer === \"undefined\") {\n            err(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\");\n            return 6;\n          }\n          if (!pthread_ptr) {\n            err(\"pthread_create called with a null thread pointer!\");\n            return 28;\n          }\n          var transferList = [];\n          var error = 0;\n          if (ENVIRONMENT_IS_PTHREAD && (transferList.length === 0 || error)) {\n            return _emscripten_sync_run_in_main_thread_4(687865856, pthread_ptr, attr, start_routine, arg);\n          }\n          if (error)\n            return error;\n          var stackSize = 0;\n          var stackBase = 0;\n          var detached = 0;\n          if (attr && attr != -1) {\n            stackSize = GROWABLE_HEAP_I32()[attr >>> 2];\n            stackSize += 81920;\n            stackBase = GROWABLE_HEAP_I32()[attr + 8 >>> 2];\n            detached = GROWABLE_HEAP_I32()[attr + 12 >>> 2] !== 0;\n          } else {\n            stackSize = 2097152;\n          }\n          var allocatedOwnStack = stackBase == 0;\n          if (allocatedOwnStack) {\n            stackBase = _memalign(16, stackSize);\n          } else {\n            stackBase -= stackSize;\n            assert(stackBase > 0);\n          }\n          var threadInfoStruct = _malloc(228);\n          for (var i = 0; i < 228 >> 2; ++i)\n            GROWABLE_HEAP_U32()[(threadInfoStruct >> 2) + i >>> 0] = 0;\n          GROWABLE_HEAP_I32()[pthread_ptr >>> 2] = threadInfoStruct;\n          GROWABLE_HEAP_I32()[threadInfoStruct + 12 >>> 2] = threadInfoStruct;\n          var headPtr = threadInfoStruct + 152;\n          GROWABLE_HEAP_I32()[headPtr >>> 2] = headPtr;\n          var threadParams = { stackBase, stackSize, allocatedOwnStack, detached, startRoutine: start_routine, pthread_ptr: threadInfoStruct, arg, transferList };\n          if (ENVIRONMENT_IS_PTHREAD) {\n            threadParams.cmd = \"spawnThread\";\n            postMessage(threadParams, transferList);\n            return 0;\n          }\n          return spawnThread(threadParams);\n        }\n        function _setTempRet0(val) {\n          setTempRet0(val);\n        }\n        function __isLeapYear(year) {\n          return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n        }\n        function __arraySum(array, index) {\n          var sum = 0;\n          for (var i = 0; i <= index; sum += array[i++]) {\n          }\n          return sum;\n        }\n        var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        function __addDays(date, days) {\n          var newDate = new Date(date.getTime());\n          while (days > 0) {\n            var leap = __isLeapYear(newDate.getFullYear());\n            var currentMonth = newDate.getMonth();\n            var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\n            if (days > daysInCurrentMonth - newDate.getDate()) {\n              days -= daysInCurrentMonth - newDate.getDate() + 1;\n              newDate.setDate(1);\n              if (currentMonth < 11) {\n                newDate.setMonth(currentMonth + 1);\n              } else {\n                newDate.setMonth(0);\n                newDate.setFullYear(newDate.getFullYear() + 1);\n              }\n            } else {\n              newDate.setDate(newDate.getDate() + days);\n              return newDate;\n            }\n          }\n          return newDate;\n        }\n        function _strftime(s, maxsize, format, tm) {\n          var tm_zone = GROWABLE_HEAP_I32()[tm + 40 >>> 2];\n          var date = { tm_sec: GROWABLE_HEAP_I32()[tm >>> 2], tm_min: GROWABLE_HEAP_I32()[tm + 4 >>> 2], tm_hour: GROWABLE_HEAP_I32()[tm + 8 >>> 2], tm_mday: GROWABLE_HEAP_I32()[tm + 12 >>> 2], tm_mon: GROWABLE_HEAP_I32()[tm + 16 >>> 2], tm_year: GROWABLE_HEAP_I32()[tm + 20 >>> 2], tm_wday: GROWABLE_HEAP_I32()[tm + 24 >>> 2], tm_yday: GROWABLE_HEAP_I32()[tm + 28 >>> 2], tm_isdst: GROWABLE_HEAP_I32()[tm + 32 >>> 2], tm_gmtoff: GROWABLE_HEAP_I32()[tm + 36 >>> 2], tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\" };\n          var pattern = UTF8ToString(format);\n          var EXPANSION_RULES_1 = { \"%c\": \"%a %b %d %H:%M:%S %Y\", \"%D\": \"%m/%d/%y\", \"%F\": \"%Y-%m-%d\", \"%h\": \"%b\", \"%r\": \"%I:%M:%S %p\", \"%R\": \"%H:%M\", \"%T\": \"%H:%M:%S\", \"%x\": \"%m/%d/%y\", \"%X\": \"%H:%M:%S\", \"%Ec\": \"%c\", \"%EC\": \"%C\", \"%Ex\": \"%m/%d/%y\", \"%EX\": \"%H:%M:%S\", \"%Ey\": \"%y\", \"%EY\": \"%Y\", \"%Od\": \"%d\", \"%Oe\": \"%e\", \"%OH\": \"%H\", \"%OI\": \"%I\", \"%Om\": \"%m\", \"%OM\": \"%M\", \"%OS\": \"%S\", \"%Ou\": \"%u\", \"%OU\": \"%U\", \"%OV\": \"%V\", \"%Ow\": \"%w\", \"%OW\": \"%W\", \"%Oy\": \"%y\" };\n          for (var rule in EXPANSION_RULES_1) {\n            pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n          }\n          var WEEKDAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n          var MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n          function leadingSomething(value, digits, character) {\n            var str = typeof value === \"number\" ? value.toString() : value || \"\";\n            while (str.length < digits) {\n              str = character[0] + str;\n            }\n            return str;\n          }\n          function leadingNulls(value, digits) {\n            return leadingSomething(value, digits, \"0\");\n          }\n          function compareByDay(date1, date2) {\n            function sgn(value) {\n              return value < 0 ? -1 : value > 0 ? 1 : 0;\n            }\n            var compare;\n            if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n              if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n                compare = sgn(date1.getDate() - date2.getDate());\n              }\n            }\n            return compare;\n          }\n          function getFirstWeekStartDate(janFourth) {\n            switch (janFourth.getDay()) {\n              case 0:\n                return new Date(janFourth.getFullYear() - 1, 11, 29);\n              case 1:\n                return janFourth;\n              case 2:\n                return new Date(janFourth.getFullYear(), 0, 3);\n              case 3:\n                return new Date(janFourth.getFullYear(), 0, 2);\n              case 4:\n                return new Date(janFourth.getFullYear(), 0, 1);\n              case 5:\n                return new Date(janFourth.getFullYear() - 1, 11, 31);\n              case 6:\n                return new Date(janFourth.getFullYear() - 1, 11, 30);\n            }\n          }\n          function getWeekBasedYear(date2) {\n            var thisDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\n            var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n            var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n            if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n              if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n                return thisDate.getFullYear() + 1;\n              } else {\n                return thisDate.getFullYear();\n              }\n            } else {\n              return thisDate.getFullYear() - 1;\n            }\n          }\n          var EXPANSION_RULES_2 = { \"%a\": function(date2) {\n            return WEEKDAYS[date2.tm_wday].substring(0, 3);\n          }, \"%A\": function(date2) {\n            return WEEKDAYS[date2.tm_wday];\n          }, \"%b\": function(date2) {\n            return MONTHS[date2.tm_mon].substring(0, 3);\n          }, \"%B\": function(date2) {\n            return MONTHS[date2.tm_mon];\n          }, \"%C\": function(date2) {\n            var year = date2.tm_year + 1900;\n            return leadingNulls(year / 100 | 0, 2);\n          }, \"%d\": function(date2) {\n            return leadingNulls(date2.tm_mday, 2);\n          }, \"%e\": function(date2) {\n            return leadingSomething(date2.tm_mday, 2, \" \");\n          }, \"%g\": function(date2) {\n            return getWeekBasedYear(date2).toString().substring(2);\n          }, \"%G\": function(date2) {\n            return getWeekBasedYear(date2);\n          }, \"%H\": function(date2) {\n            return leadingNulls(date2.tm_hour, 2);\n          }, \"%I\": function(date2) {\n            var twelveHour = date2.tm_hour;\n            if (twelveHour == 0)\n              twelveHour = 12;\n            else if (twelveHour > 12)\n              twelveHour -= 12;\n            return leadingNulls(twelveHour, 2);\n          }, \"%j\": function(date2) {\n            return leadingNulls(date2.tm_mday + __arraySum(__isLeapYear(date2.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date2.tm_mon - 1), 3);\n          }, \"%m\": function(date2) {\n            return leadingNulls(date2.tm_mon + 1, 2);\n          }, \"%M\": function(date2) {\n            return leadingNulls(date2.tm_min, 2);\n          }, \"%n\": function() {\n            return \"\\n\";\n          }, \"%p\": function(date2) {\n            if (date2.tm_hour >= 0 && date2.tm_hour < 12) {\n              return \"AM\";\n            } else {\n              return \"PM\";\n            }\n          }, \"%S\": function(date2) {\n            return leadingNulls(date2.tm_sec, 2);\n          }, \"%t\": function() {\n            return \"\t\";\n          }, \"%u\": function(date2) {\n            return date2.tm_wday || 7;\n          }, \"%U\": function(date2) {\n            var janFirst = new Date(date2.tm_year + 1900, 0, 1);\n            var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\n            if (compareByDay(firstSunday, endDate) < 0) {\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n              var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();\n              var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n              return leadingNulls(Math.ceil(days / 7), 2);\n            }\n            return compareByDay(firstSunday, janFirst) === 0 ? \"01\" : \"00\";\n          }, \"%V\": function(date2) {\n            var janFourthThisYear = new Date(date2.tm_year + 1900, 0, 4);\n            var janFourthNextYear = new Date(date2.tm_year + 1901, 0, 4);\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n            var endDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\n            if (compareByDay(endDate, firstWeekStartThisYear) < 0) {\n              return \"53\";\n            }\n            if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {\n              return \"01\";\n            }\n            var daysDifference;\n            if (firstWeekStartThisYear.getFullYear() < date2.tm_year + 1900) {\n              daysDifference = date2.tm_yday + 32 - firstWeekStartThisYear.getDate();\n            } else {\n              daysDifference = date2.tm_yday + 1 - firstWeekStartThisYear.getDate();\n            }\n            return leadingNulls(Math.ceil(daysDifference / 7), 2);\n          }, \"%w\": function(date2) {\n            return date2.tm_wday;\n          }, \"%W\": function(date2) {\n            var janFirst = new Date(date2.tm_year, 0, 1);\n            var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\n            if (compareByDay(firstMonday, endDate) < 0) {\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n              var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();\n              var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n              return leadingNulls(Math.ceil(days / 7), 2);\n            }\n            return compareByDay(firstMonday, janFirst) === 0 ? \"01\" : \"00\";\n          }, \"%y\": function(date2) {\n            return (date2.tm_year + 1900).toString().substring(2);\n          }, \"%Y\": function(date2) {\n            return date2.tm_year + 1900;\n          }, \"%z\": function(date2) {\n            var off = date2.tm_gmtoff;\n            var ahead = off >= 0;\n            off = Math.abs(off) / 60;\n            off = off / 60 * 100 + off % 60;\n            return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n          }, \"%Z\": function(date2) {\n            return date2.tm_zone;\n          }, \"%%\": function() {\n            return \"%\";\n          } };\n          for (var rule in EXPANSION_RULES_2) {\n            if (pattern.includes(rule)) {\n              pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n            }\n          }\n          var bytes = intArrayFromString(pattern, false);\n          if (bytes.length > maxsize) {\n            return 0;\n          }\n          writeArrayToMemory(bytes, s);\n          return bytes.length - 1;\n        }\n        function _strftime_l(s, maxsize, format, tm) {\n          return _strftime(s, maxsize, format, tm);\n        }\n        if (!ENVIRONMENT_IS_PTHREAD)\n          PThread.initMainThreadBlock();\n        var FSNode = function(parent, name2, mode, rdev) {\n          if (!parent) {\n            parent = this;\n          }\n          this.parent = parent;\n          this.mount = parent.mount;\n          this.mounted = null;\n          this.id = FS.nextInode++;\n          this.name = name2;\n          this.mode = mode;\n          this.node_ops = {};\n          this.stream_ops = {};\n          this.rdev = rdev;\n        };\n        var readMode = 292 | 73;\n        var writeMode = 146;\n        Object.defineProperties(FSNode.prototype, { read: { get: function() {\n          return (this.mode & readMode) === readMode;\n        }, set: function(val) {\n          val ? this.mode |= readMode : this.mode &= ~readMode;\n        } }, write: { get: function() {\n          return (this.mode & writeMode) === writeMode;\n        }, set: function(val) {\n          val ? this.mode |= writeMode : this.mode &= ~writeMode;\n        } }, isFolder: { get: function() {\n          return FS.isDir(this.mode);\n        } }, isDevice: { get: function() {\n          return FS.isChrdev(this.mode);\n        } } });\n        FS.FSNode = FSNode;\n        FS.staticInit();\n        Module[\"FS_createPath\"] = FS.createPath;\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n        Module[\"FS_createDevice\"] = FS.createDevice;\n        Module[\"FS_unlink\"] = FS.unlink;\n        InternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n        embind_init_charCodes();\n        BindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n        init_ClassHandle();\n        init_RegisteredPointer();\n        init_embind();\n        UnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n        init_emval();\n        var GLctx;\n        var proxiedFunctionTable = [null, _atexit, ___sys_fcntl64, ___sys_ioctl, ___sys_open, _emscripten_set_canvas_element_size_main_thread, _environ_get, _environ_sizes_get, _fd_close, _fd_read, _fd_seek, _fd_write];\n        function intArrayFromString(stringy, dontAddNull, length) {\n          var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n          var u8array = new Array(len);\n          var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n          if (dontAddNull)\n            u8array.length = numBytesWritten;\n          return u8array;\n        }\n        var asmLibraryArg = { \"l\": ___assert_fail, \"B\": ___cxa_allocate_exception, \"ka\": ___cxa_thread_atexit, \"A\": ___cxa_throw, \"D\": ___sys_fcntl64, \"V\": ___sys_ioctl, \"W\": ___sys_open, \"ma\": __embind_finalize_value_array, \"s\": __embind_finalize_value_object, \"O\": __embind_register_bigint, \"ia\": __embind_register_bool, \"v\": __embind_register_class, \"u\": __embind_register_class_constructor, \"c\": __embind_register_class_function, \"ha\": __embind_register_emval, \"la\": __embind_register_enum, \"y\": __embind_register_enum_value, \"J\": __embind_register_float, \"f\": __embind_register_function, \"p\": __embind_register_integer, \"k\": __embind_register_memory_view, \"K\": __embind_register_std_string, \"z\": __embind_register_std_wstring, \"na\": __embind_register_value_array, \"h\": __embind_register_value_array_element, \"t\": __embind_register_value_object, \"e\": __embind_register_value_object_field, \"ja\": __embind_register_void, \"ea\": __emscripten_notify_thread_queue, \"n\": __emval_as, \"L\": __emval_call, \"b\": __emval_decref, \"U\": __emval_get_global, \"o\": __emval_get_property, \"j\": __emval_incref, \"ca\": __emval_instanceof, \"M\": __emval_is_number, \"C\": __emval_new_array, \"g\": __emval_new_cstring, \"w\": __emval_new_object, \"m\": __emval_run_destructors, \"i\": __emval_set_property, \"d\": __emval_take_value, \"I\": _abort, \"T\": _clock_gettime, \"G\": _emscripten_asm_const_int, \"_\": _emscripten_check_blocking_allowed, \"F\": _emscripten_conditional_set_current_thread_status, \"r\": _emscripten_futex_wait, \"q\": _emscripten_futex_wake, \"x\": _emscripten_get_now, \"R\": _emscripten_memcpy_big, \"$\": _emscripten_receive_on_main_thread_js, \"S\": _emscripten_resize_heap, \"aa\": _emscripten_set_canvas_element_size, \"E\": _emscripten_set_current_thread_status, \"ba\": _emscripten_webgl_create_context, \"Y\": _environ_get, \"Z\": _environ_sizes_get, \"H\": _fd_close, \"ga\": _fd_read, \"N\": _fd_seek, \"fa\": _fd_write, \"Q\": initPthreadsJS, \"a\": wasmMemory || Module[\"wasmMemory\"], \"da\": _pthread_create, \"P\": _setTempRet0, \"X\": _strftime_l };\n        var asm = createWasm();\n        var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\n          return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"oa\"]).apply(null, arguments);\n        };\n        var _main = Module[\"_main\"] = function() {\n          return (_main = Module[\"_main\"] = Module[\"asm\"][\"pa\"]).apply(null, arguments);\n        };\n        var _malloc = Module[\"_malloc\"] = function() {\n          return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"qa\"]).apply(null, arguments);\n        };\n        var _free = Module[\"_free\"] = function() {\n          return (_free = Module[\"_free\"] = Module[\"asm\"][\"ra\"]).apply(null, arguments);\n        };\n        var _emscripten_tls_init = Module[\"_emscripten_tls_init\"] = function() {\n          return (_emscripten_tls_init = Module[\"_emscripten_tls_init\"] = Module[\"asm\"][\"sa\"]).apply(null, arguments);\n        };\n        var ___getTypeName = Module[\"___getTypeName\"] = function() {\n          return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"ua\"]).apply(null, arguments);\n        };\n        var ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function() {\n          return (___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = Module[\"asm\"][\"va\"]).apply(null, arguments);\n        };\n        var _emscripten_current_thread_process_queued_calls = Module[\"_emscripten_current_thread_process_queued_calls\"] = function() {\n          return (_emscripten_current_thread_process_queued_calls = Module[\"_emscripten_current_thread_process_queued_calls\"] = Module[\"asm\"][\"wa\"]).apply(null, arguments);\n        };\n        var _emscripten_register_main_browser_thread_id = Module[\"_emscripten_register_main_browser_thread_id\"] = function() {\n          return (_emscripten_register_main_browser_thread_id = Module[\"_emscripten_register_main_browser_thread_id\"] = Module[\"asm\"][\"xa\"]).apply(null, arguments);\n        };\n        var __emscripten_do_dispatch_to_thread = Module[\"__emscripten_do_dispatch_to_thread\"] = function() {\n          return (__emscripten_do_dispatch_to_thread = Module[\"__emscripten_do_dispatch_to_thread\"] = Module[\"asm\"][\"ya\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread_4 = Module[\"_emscripten_sync_run_in_main_thread_4\"] = function() {\n          return (_emscripten_sync_run_in_main_thread_4 = Module[\"_emscripten_sync_run_in_main_thread_4\"] = Module[\"asm\"][\"za\"]).apply(null, arguments);\n        };\n        var _emscripten_main_thread_process_queued_calls = Module[\"_emscripten_main_thread_process_queued_calls\"] = function() {\n          return (_emscripten_main_thread_process_queued_calls = Module[\"_emscripten_main_thread_process_queued_calls\"] = Module[\"asm\"][\"Aa\"]).apply(null, arguments);\n        };\n        var _emscripten_run_in_main_runtime_thread_js = Module[\"_emscripten_run_in_main_runtime_thread_js\"] = function() {\n          return (_emscripten_run_in_main_runtime_thread_js = Module[\"_emscripten_run_in_main_runtime_thread_js\"] = Module[\"asm\"][\"Ba\"]).apply(null, arguments);\n        };\n        var __emscripten_call_on_thread = Module[\"__emscripten_call_on_thread\"] = function() {\n          return (__emscripten_call_on_thread = Module[\"__emscripten_call_on_thread\"] = Module[\"asm\"][\"Ca\"]).apply(null, arguments);\n        };\n        var __emscripten_thread_init = Module[\"__emscripten_thread_init\"] = function() {\n          return (__emscripten_thread_init = Module[\"__emscripten_thread_init\"] = Module[\"asm\"][\"Da\"]).apply(null, arguments);\n        };\n        var _emscripten_get_global_libc = Module[\"_emscripten_get_global_libc\"] = function() {\n          return (_emscripten_get_global_libc = Module[\"_emscripten_get_global_libc\"] = Module[\"asm\"][\"Ea\"]).apply(null, arguments);\n        };\n        var ___errno_location = Module[\"___errno_location\"] = function() {\n          return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"Fa\"]).apply(null, arguments);\n        };\n        var _pthread_self = Module[\"_pthread_self\"] = function() {\n          return (_pthread_self = Module[\"_pthread_self\"] = Module[\"asm\"][\"Ga\"]).apply(null, arguments);\n        };\n        var ___pthread_tsd_run_dtors = Module[\"___pthread_tsd_run_dtors\"] = function() {\n          return (___pthread_tsd_run_dtors = Module[\"___pthread_tsd_run_dtors\"] = Module[\"asm\"][\"Ha\"]).apply(null, arguments);\n        };\n        var stackSave = Module[\"stackSave\"] = function() {\n          return (stackSave = Module[\"stackSave\"] = Module[\"asm\"][\"Ia\"]).apply(null, arguments);\n        };\n        var stackRestore = Module[\"stackRestore\"] = function() {\n          return (stackRestore = Module[\"stackRestore\"] = Module[\"asm\"][\"Ja\"]).apply(null, arguments);\n        };\n        var stackAlloc = Module[\"stackAlloc\"] = function() {\n          return (stackAlloc = Module[\"stackAlloc\"] = Module[\"asm\"][\"Ka\"]).apply(null, arguments);\n        };\n        var _emscripten_stack_set_limits = Module[\"_emscripten_stack_set_limits\"] = function() {\n          return (_emscripten_stack_set_limits = Module[\"_emscripten_stack_set_limits\"] = Module[\"asm\"][\"La\"]).apply(null, arguments);\n        };\n        var _memalign = Module[\"_memalign\"] = function() {\n          return (_memalign = Module[\"_memalign\"] = Module[\"asm\"][\"Ma\"]).apply(null, arguments);\n        };\n        var dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n          return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"Na\"]).apply(null, arguments);\n        };\n        var dynCall_viijii = Module[\"dynCall_viijii\"] = function() {\n          return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"Oa\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function() {\n          return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"Pa\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function() {\n          return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"Qa\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function() {\n          return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"Ra\"]).apply(null, arguments);\n        };\n        var __emscripten_allow_main_runtime_queued_calls = Module[\"__emscripten_allow_main_runtime_queued_calls\"] = 44840;\n        var __emscripten_main_thread_futex = Module[\"__emscripten_main_thread_futex\"] = 48292;\n        Module[\"addRunDependency\"] = addRunDependency;\n        Module[\"removeRunDependency\"] = removeRunDependency;\n        Module[\"FS_createPath\"] = FS.createPath;\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n        Module[\"FS_createDevice\"] = FS.createDevice;\n        Module[\"FS_unlink\"] = FS.unlink;\n        Module[\"keepRuntimeAlive\"] = keepRuntimeAlive;\n        Module[\"FS\"] = FS;\n        Module[\"PThread\"] = PThread;\n        Module[\"PThread\"] = PThread;\n        Module[\"wasmMemory\"] = wasmMemory;\n        Module[\"ExitStatus\"] = ExitStatus;\n        var calledRun;\n        function ExitStatus(status) {\n          this.name = \"ExitStatus\";\n          this.message = \"Program terminated with exit(\" + status + \")\";\n          this.status = status;\n        }\n        var calledMain = false;\n        dependenciesFulfilled = function runCaller() {\n          if (!calledRun)\n            run();\n          if (!calledRun)\n            dependenciesFulfilled = runCaller;\n        };\n        function callMain(args) {\n          var entryFunction = Module[\"_main\"];\n          var argc = 0;\n          var argv = 0;\n          try {\n            var ret = entryFunction(argc, argv);\n            exit(ret, true);\n          } catch (e) {\n            if (e instanceof ExitStatus || e == \"unwind\") {\n              return;\n            }\n            var toLog = e;\n            if (e && typeof e === \"object\" && e.stack) {\n              toLog = [e, e.stack];\n            }\n            err(\"exception thrown: \" + toLog);\n            quit_(1, e);\n          } finally {\n            calledMain = true;\n          }\n        }\n        function run(args) {\n          args = args || arguments_;\n          if (runDependencies > 0) {\n            return;\n          }\n          if (ENVIRONMENT_IS_PTHREAD) {\n            readyPromiseResolve(Module);\n            initRuntime();\n            postMessage({ \"cmd\": \"loaded\" });\n            return;\n          }\n          preRun();\n          if (runDependencies > 0) {\n            return;\n          }\n          function doRun() {\n            if (calledRun)\n              return;\n            calledRun = true;\n            Module[\"calledRun\"] = true;\n            if (ABORT)\n              return;\n            initRuntime();\n            preMain();\n            readyPromiseResolve(Module);\n            if (Module[\"onRuntimeInitialized\"])\n              Module[\"onRuntimeInitialized\"]();\n            if (shouldRunNow)\n              callMain(args);\n            postRun();\n          }\n          if (Module[\"setStatus\"]) {\n            Module[\"setStatus\"](\"Running...\");\n            setTimeout(function() {\n              setTimeout(function() {\n                Module[\"setStatus\"](\"\");\n              }, 1);\n              doRun();\n            }, 1);\n          } else {\n            doRun();\n          }\n        }\n        Module[\"run\"] = run;\n        function exit(status, implicit) {\n          EXITSTATUS = status;\n          if (!implicit) {\n            if (ENVIRONMENT_IS_PTHREAD) {\n              postMessage({ \"cmd\": \"exitProcess\", \"returnCode\": status });\n              throw new ExitStatus(status);\n            } else {\n            }\n          }\n          if (keepRuntimeAlive()) {\n          } else {\n            PThread.terminateAllThreads();\n            exitRuntime();\n            if (Module[\"onExit\"])\n              Module[\"onExit\"](status);\n            ABORT = true;\n          }\n          quit_(status, new ExitStatus(status));\n        }\n        if (Module[\"preInit\"]) {\n          if (typeof Module[\"preInit\"] == \"function\")\n            Module[\"preInit\"] = [Module[\"preInit\"]];\n          while (Module[\"preInit\"].length > 0) {\n            Module[\"preInit\"].pop()();\n          }\n        }\n        var shouldRunNow = true;\n        if (Module[\"noInitialRun\"])\n          shouldRunNow = false;\n        if (ENVIRONMENT_IS_PTHREAD) {\n          noExitRuntime = false;\n          PThread.initWorker();\n        }\n        run();\n        return WebIFCWasm3.ready;\n      };\n    }();\n    if (typeof exports === \"object\" && typeof module === \"object\")\n      module.exports = WebIFCWasm2;\n    else if (typeof define === \"function\" && define[\"amd\"])\n      define([], function() {\n        return WebIFCWasm2;\n      });\n    else if (typeof exports === \"object\")\n      exports[\"WebIFCWasm\"] = WebIFCWasm2;\n  }\n});\n\n// dist/web-ifc.js\nvar require_web_ifc = __commonJS({\n  \"dist/web-ifc.js\"(exports, module) {\n    var WebIFCWasm2 = function() {\n      var _scriptDir = typeof document !== \"undefined\" && document.currentScript ? document.currentScript.src : void 0;\n      if (typeof __filename !== \"undefined\")\n        _scriptDir = _scriptDir || __filename;\n      return function(WebIFCWasm3) {\n        WebIFCWasm3 = WebIFCWasm3 || {};\n        var Module = typeof WebIFCWasm3 !== \"undefined\" ? WebIFCWasm3 : {};\n        var readyPromiseResolve, readyPromiseReject;\n        Module[\"ready\"] = new Promise(function(resolve, reject) {\n          readyPromiseResolve = resolve;\n          readyPromiseReject = reject;\n        });\n        var moduleOverrides = {};\n        var key;\n        for (key in Module) {\n          if (Module.hasOwnProperty(key)) {\n            moduleOverrides[key] = Module[key];\n          }\n        }\n        var arguments_ = [];\n        var thisProgram = \"./this.program\";\n        var quit_ = function(status, toThrow) {\n          throw toThrow;\n        };\n        var ENVIRONMENT_IS_WEB = typeof window === \"object\";\n        var ENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n        var ENVIRONMENT_IS_NODE = typeof process === \"object\" && typeof process.versions === \"object\" && typeof process.versions.node === \"string\";\n        var scriptDirectory = \"\";\n        function locateFile(path) {\n          if (Module[\"locateFile\"]) {\n            return Module[\"locateFile\"](path, scriptDirectory);\n          }\n          return scriptDirectory + path;\n        }\n        var read_, readAsync, readBinary, setWindowTitle;\n        var nodeFS;\n        var nodePath;\n        if (ENVIRONMENT_IS_NODE) {\n          if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = __require(\"path\").dirname(scriptDirectory) + \"/\";\n          } else {\n            scriptDirectory = __dirname + \"/\";\n          }\n          read_ = function shell_read(filename, binary) {\n            if (!nodeFS)\n              nodeFS = __require(\"fs\");\n            if (!nodePath)\n              nodePath = __require(\"path\");\n            filename = nodePath[\"normalize\"](filename);\n            return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\n          };\n          readBinary = function readBinary2(filename) {\n            var ret = read_(filename, true);\n            if (!ret.buffer) {\n              ret = new Uint8Array(ret);\n            }\n            assert(ret.buffer);\n            return ret;\n          };\n          readAsync = function readAsync2(filename, onload, onerror) {\n            if (!nodeFS)\n              nodeFS = __require(\"fs\");\n            if (!nodePath)\n              nodePath = __require(\"path\");\n            filename = nodePath[\"normalize\"](filename);\n            nodeFS[\"readFile\"](filename, function(err2, data) {\n              if (err2)\n                onerror(err2);\n              else\n                onload(data.buffer);\n            });\n          };\n          if (process[\"argv\"].length > 1) {\n            thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\n          }\n          arguments_ = process[\"argv\"].slice(2);\n          process[\"on\"](\"uncaughtException\", function(ex) {\n            if (!(ex instanceof ExitStatus)) {\n              throw ex;\n            }\n          });\n          process[\"on\"](\"unhandledRejection\", abort);\n          quit_ = function(status, toThrow) {\n            if (keepRuntimeAlive()) {\n              process[\"exitCode\"] = status;\n              throw toThrow;\n            }\n            process[\"exit\"](status);\n          };\n          Module[\"inspect\"] = function() {\n            return \"[Emscripten Module object]\";\n          };\n        } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n          if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = self.location.href;\n          } else if (typeof document !== \"undefined\" && document.currentScript) {\n            scriptDirectory = document.currentScript.src;\n          }\n          if (_scriptDir) {\n            scriptDirectory = _scriptDir;\n          }\n          if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n            scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1);\n          } else {\n            scriptDirectory = \"\";\n          }\n          {\n            read_ = function(url) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, false);\n              xhr.send(null);\n              return xhr.responseText;\n            };\n            if (ENVIRONMENT_IS_WORKER) {\n              readBinary = function(url) {\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url, false);\n                xhr.responseType = \"arraybuffer\";\n                xhr.send(null);\n                return new Uint8Array(xhr.response);\n              };\n            }\n            readAsync = function(url, onload, onerror) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, true);\n              xhr.responseType = \"arraybuffer\";\n              xhr.onload = function() {\n                if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                  onload(xhr.response);\n                  return;\n                }\n                onerror();\n              };\n              xhr.onerror = onerror;\n              xhr.send(null);\n            };\n          }\n          setWindowTitle = function(title) {\n            document.title = title;\n          };\n        } else {\n        }\n        var out = Module[\"print\"] || console.log.bind(console);\n        var err = Module[\"printErr\"] || console.warn.bind(console);\n        for (key in moduleOverrides) {\n          if (moduleOverrides.hasOwnProperty(key)) {\n            Module[key] = moduleOverrides[key];\n          }\n        }\n        moduleOverrides = null;\n        if (Module[\"arguments\"])\n          arguments_ = Module[\"arguments\"];\n        if (Module[\"thisProgram\"])\n          thisProgram = Module[\"thisProgram\"];\n        if (Module[\"quit\"])\n          quit_ = Module[\"quit\"];\n        var tempRet0 = 0;\n        var setTempRet0 = function(value) {\n          tempRet0 = value;\n        };\n        var wasmBinary;\n        if (Module[\"wasmBinary\"])\n          wasmBinary = Module[\"wasmBinary\"];\n        var noExitRuntime = Module[\"noExitRuntime\"] || true;\n        if (typeof WebAssembly !== \"object\") {\n          abort(\"no native wasm support detected\");\n        }\n        var wasmMemory;\n        var ABORT = false;\n        var EXITSTATUS;\n        function assert(condition, text) {\n          if (!condition) {\n            abort(\"Assertion failed: \" + text);\n          }\n        }\n        var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : void 0;\n        function UTF8ArrayToString(heap, idx, maxBytesToRead) {\n          idx >>>= 0;\n          var endIdx = idx + maxBytesToRead;\n          var endPtr = idx;\n          while (heap[endPtr >>> 0] && !(endPtr >= endIdx))\n            ++endPtr;\n          if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n            return UTF8Decoder.decode(heap.subarray(idx >>> 0, endPtr >>> 0));\n          } else {\n            var str = \"\";\n            while (idx < endPtr) {\n              var u0 = heap[idx++ >>> 0];\n              if (!(u0 & 128)) {\n                str += String.fromCharCode(u0);\n                continue;\n              }\n              var u1 = heap[idx++ >>> 0] & 63;\n              if ((u0 & 224) == 192) {\n                str += String.fromCharCode((u0 & 31) << 6 | u1);\n                continue;\n              }\n              var u2 = heap[idx++ >>> 0] & 63;\n              if ((u0 & 240) == 224) {\n                u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n              } else {\n                u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++ >>> 0] & 63;\n              }\n              if (u0 < 65536) {\n                str += String.fromCharCode(u0);\n              } else {\n                var ch = u0 - 65536;\n                str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n              }\n            }\n          }\n          return str;\n        }\n        function UTF8ToString(ptr, maxBytesToRead) {\n          ptr >>>= 0;\n          return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n        }\n        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n          outIdx >>>= 0;\n          if (!(maxBytesToWrite > 0))\n            return 0;\n          var startIdx = outIdx;\n          var endIdx = outIdx + maxBytesToWrite - 1;\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343) {\n              var u1 = str.charCodeAt(++i);\n              u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n            }\n            if (u <= 127) {\n              if (outIdx >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = u;\n            } else if (u <= 2047) {\n              if (outIdx + 1 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 192 | u >> 6;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            } else if (u <= 65535) {\n              if (outIdx + 2 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 224 | u >> 12;\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            } else {\n              if (outIdx + 3 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 240 | u >> 18;\n              heap[outIdx++ >>> 0] = 128 | u >> 12 & 63;\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            }\n          }\n          heap[outIdx >>> 0] = 0;\n          return outIdx - startIdx;\n        }\n        function stringToUTF8(str, outPtr, maxBytesToWrite) {\n          return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n        }\n        function lengthBytesUTF8(str) {\n          var len = 0;\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343)\n              u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n            if (u <= 127)\n              ++len;\n            else if (u <= 2047)\n              len += 2;\n            else if (u <= 65535)\n              len += 3;\n            else\n              len += 4;\n          }\n          return len;\n        }\n        var UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : void 0;\n        function UTF16ToString(ptr, maxBytesToRead) {\n          var endPtr = ptr;\n          var idx = endPtr >> 1;\n          var maxIdx = idx + maxBytesToRead / 2;\n          while (!(idx >= maxIdx) && HEAPU16[idx >>> 0])\n            ++idx;\n          endPtr = idx << 1;\n          if (endPtr - ptr > 32 && UTF16Decoder) {\n            return UTF16Decoder.decode(HEAPU8.subarray(ptr >>> 0, endPtr >>> 0));\n          } else {\n            var str = \"\";\n            for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n              var codeUnit = HEAP16[ptr + i * 2 >>> 1];\n              if (codeUnit == 0)\n                break;\n              str += String.fromCharCode(codeUnit);\n            }\n            return str;\n          }\n        }\n        function stringToUTF16(str, outPtr, maxBytesToWrite) {\n          if (maxBytesToWrite === void 0) {\n            maxBytesToWrite = 2147483647;\n          }\n          if (maxBytesToWrite < 2)\n            return 0;\n          maxBytesToWrite -= 2;\n          var startPtr = outPtr;\n          var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n          for (var i = 0; i < numCharsToWrite; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            HEAP16[outPtr >>> 1] = codeUnit;\n            outPtr += 2;\n          }\n          HEAP16[outPtr >>> 1] = 0;\n          return outPtr - startPtr;\n        }\n        function lengthBytesUTF16(str) {\n          return str.length * 2;\n        }\n        function UTF32ToString(ptr, maxBytesToRead) {\n          var i = 0;\n          var str = \"\";\n          while (!(i >= maxBytesToRead / 4)) {\n            var utf32 = HEAP32[ptr + i * 4 >>> 2];\n            if (utf32 == 0)\n              break;\n            ++i;\n            if (utf32 >= 65536) {\n              var ch = utf32 - 65536;\n              str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n            } else {\n              str += String.fromCharCode(utf32);\n            }\n          }\n          return str;\n        }\n        function stringToUTF32(str, outPtr, maxBytesToWrite) {\n          outPtr >>>= 0;\n          if (maxBytesToWrite === void 0) {\n            maxBytesToWrite = 2147483647;\n          }\n          if (maxBytesToWrite < 4)\n            return 0;\n          var startPtr = outPtr;\n          var endPtr = startPtr + maxBytesToWrite - 4;\n          for (var i = 0; i < str.length; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            if (codeUnit >= 55296 && codeUnit <= 57343) {\n              var trailSurrogate = str.charCodeAt(++i);\n              codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n            }\n            HEAP32[outPtr >>> 2] = codeUnit;\n            outPtr += 4;\n            if (outPtr + 4 > endPtr)\n              break;\n          }\n          HEAP32[outPtr >>> 2] = 0;\n          return outPtr - startPtr;\n        }\n        function lengthBytesUTF32(str) {\n          var len = 0;\n          for (var i = 0; i < str.length; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            if (codeUnit >= 55296 && codeUnit <= 57343)\n              ++i;\n            len += 4;\n          }\n          return len;\n        }\n        function writeArrayToMemory(array, buffer2) {\n          HEAP8.set(array, buffer2 >>> 0);\n        }\n        function writeAsciiToMemory(str, buffer2, dontAddNull) {\n          for (var i = 0; i < str.length; ++i) {\n            HEAP8[buffer2++ >>> 0] = str.charCodeAt(i);\n          }\n          if (!dontAddNull)\n            HEAP8[buffer2 >>> 0] = 0;\n        }\n        function alignUp(x, multiple) {\n          if (x % multiple > 0) {\n            x += multiple - x % multiple;\n          }\n          return x;\n        }\n        var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n        function updateGlobalBufferAndViews(buf) {\n          buffer = buf;\n          Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n          Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n          Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n          Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n          Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n          Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n          Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n          Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n        }\n        var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n        var wasmTable;\n        var __ATPRERUN__ = [];\n        var __ATINIT__ = [];\n        var __ATMAIN__ = [];\n        var __ATPOSTRUN__ = [];\n        var runtimeInitialized = false;\n        var runtimeExited = false;\n        var runtimeKeepaliveCounter = 0;\n        function keepRuntimeAlive() {\n          return noExitRuntime || runtimeKeepaliveCounter > 0;\n        }\n        function preRun() {\n          if (Module[\"preRun\"]) {\n            if (typeof Module[\"preRun\"] == \"function\")\n              Module[\"preRun\"] = [Module[\"preRun\"]];\n            while (Module[\"preRun\"].length) {\n              addOnPreRun(Module[\"preRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPRERUN__);\n        }\n        function initRuntime() {\n          runtimeInitialized = true;\n          if (!Module[\"noFSInit\"] && !FS.init.initialized)\n            FS.init();\n          FS.ignorePermissions = false;\n          TTY.init();\n          callRuntimeCallbacks(__ATINIT__);\n        }\n        function preMain() {\n          callRuntimeCallbacks(__ATMAIN__);\n        }\n        function exitRuntime() {\n          runtimeExited = true;\n        }\n        function postRun() {\n          if (Module[\"postRun\"]) {\n            if (typeof Module[\"postRun\"] == \"function\")\n              Module[\"postRun\"] = [Module[\"postRun\"]];\n            while (Module[\"postRun\"].length) {\n              addOnPostRun(Module[\"postRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPOSTRUN__);\n        }\n        function addOnPreRun(cb) {\n          __ATPRERUN__.unshift(cb);\n        }\n        function addOnInit(cb) {\n          __ATINIT__.unshift(cb);\n        }\n        function addOnPostRun(cb) {\n          __ATPOSTRUN__.unshift(cb);\n        }\n        var runDependencies = 0;\n        var runDependencyWatcher = null;\n        var dependenciesFulfilled = null;\n        function getUniqueRunDependency(id) {\n          return id;\n        }\n        function addRunDependency(id) {\n          runDependencies++;\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n        }\n        function removeRunDependency(id) {\n          runDependencies--;\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n          if (runDependencies == 0) {\n            if (runDependencyWatcher !== null) {\n              clearInterval(runDependencyWatcher);\n              runDependencyWatcher = null;\n            }\n            if (dependenciesFulfilled) {\n              var callback = dependenciesFulfilled;\n              dependenciesFulfilled = null;\n              callback();\n            }\n          }\n        }\n        Module[\"preloadedImages\"] = {};\n        Module[\"preloadedAudios\"] = {};\n        function abort(what) {\n          if (Module[\"onAbort\"]) {\n            Module[\"onAbort\"](what);\n          }\n          what += \"\";\n          err(what);\n          ABORT = true;\n          EXITSTATUS = 1;\n          what = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n          var e = new WebAssembly.RuntimeError(what);\n          readyPromiseReject(e);\n          throw e;\n        }\n        var dataURIPrefix = \"data:application/octet-stream;base64,\";\n        function isDataURI(filename) {\n          return filename.startsWith(dataURIPrefix);\n        }\n        function isFileURI(filename) {\n          return filename.startsWith(\"file://\");\n        }\n        var wasmBinaryFile;\n        wasmBinaryFile = \"web-ifc.wasm\";\n        if (!isDataURI(wasmBinaryFile)) {\n          wasmBinaryFile = locateFile(wasmBinaryFile);\n        }\n        function getBinary(file) {\n          try {\n            if (file == wasmBinaryFile && wasmBinary) {\n              return new Uint8Array(wasmBinary);\n            }\n            if (readBinary) {\n              return readBinary(file);\n            } else {\n              throw \"both async and sync fetching of the wasm failed\";\n            }\n          } catch (err2) {\n            abort(err2);\n          }\n        }\n        function getBinaryPromise() {\n          if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n            if (typeof fetch === \"function\" && !isFileURI(wasmBinaryFile)) {\n              return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\n                if (!response[\"ok\"]) {\n                  throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n                }\n                return response[\"arrayBuffer\"]();\n              }).catch(function() {\n                return getBinary(wasmBinaryFile);\n              });\n            } else {\n              if (readAsync) {\n                return new Promise(function(resolve, reject) {\n                  readAsync(wasmBinaryFile, function(response) {\n                    resolve(new Uint8Array(response));\n                  }, reject);\n                });\n              }\n            }\n          }\n          return Promise.resolve().then(function() {\n            return getBinary(wasmBinaryFile);\n          });\n        }\n        function createWasm() {\n          var info = { \"a\": asmLibraryArg };\n          function receiveInstance(instance, module2) {\n            var exports3 = instance.exports;\n            Module[\"asm\"] = exports3;\n            wasmMemory = Module[\"asm\"][\"$\"];\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n            wasmTable = Module[\"asm\"][\"ha\"];\n            addOnInit(Module[\"asm\"][\"aa\"]);\n            removeRunDependency(\"wasm-instantiate\");\n          }\n          addRunDependency(\"wasm-instantiate\");\n          function receiveInstantiationResult(result) {\n            receiveInstance(result[\"instance\"]);\n          }\n          function instantiateArrayBuffer(receiver) {\n            return getBinaryPromise().then(function(binary) {\n              var result = WebAssembly.instantiate(binary, info);\n              return result;\n            }).then(receiver, function(reason) {\n              err(\"failed to asynchronously prepare wasm: \" + reason);\n              abort(reason);\n            });\n          }\n          function instantiateAsync() {\n            if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && typeof fetch === \"function\") {\n              return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\n                var result = WebAssembly.instantiateStreaming(response, info);\n                return result.then(receiveInstantiationResult, function(reason) {\n                  err(\"wasm streaming compile failed: \" + reason);\n                  err(\"falling back to ArrayBuffer instantiation\");\n                  return instantiateArrayBuffer(receiveInstantiationResult);\n                });\n              });\n            } else {\n              return instantiateArrayBuffer(receiveInstantiationResult);\n            }\n          }\n          if (Module[\"instantiateWasm\"]) {\n            try {\n              var exports2 = Module[\"instantiateWasm\"](info, receiveInstance);\n              return exports2;\n            } catch (e) {\n              err(\"Module.instantiateWasm callback failed with error: \" + e);\n              return false;\n            }\n          }\n          instantiateAsync().catch(readyPromiseReject);\n          return {};\n        }\n        var tempDouble;\n        var tempI64;\n        function callRuntimeCallbacks(callbacks) {\n          while (callbacks.length > 0) {\n            var callback = callbacks.shift();\n            if (typeof callback == \"function\") {\n              callback(Module);\n              continue;\n            }\n            var func = callback.func;\n            if (typeof func === \"number\") {\n              if (callback.arg === void 0) {\n                wasmTable.get(func)();\n              } else {\n                wasmTable.get(func)(callback.arg);\n              }\n            } else {\n              func(callback.arg === void 0 ? null : callback.arg);\n            }\n          }\n        }\n        function ___assert_fail(condition, filename, line, func) {\n          abort(\"Assertion failed: \" + UTF8ToString(condition) + \", at: \" + [filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\"]);\n        }\n        function ___cxa_allocate_exception(size) {\n          return _malloc(size + 16) + 16;\n        }\n        function ExceptionInfo(excPtr) {\n          this.excPtr = excPtr;\n          this.ptr = excPtr - 16;\n          this.set_type = function(type) {\n            HEAP32[this.ptr + 4 >>> 2] = type;\n          };\n          this.get_type = function() {\n            return HEAP32[this.ptr + 4 >>> 2];\n          };\n          this.set_destructor = function(destructor) {\n            HEAP32[this.ptr + 8 >>> 2] = destructor;\n          };\n          this.get_destructor = function() {\n            return HEAP32[this.ptr + 8 >>> 2];\n          };\n          this.set_refcount = function(refcount) {\n            HEAP32[this.ptr >>> 2] = refcount;\n          };\n          this.set_caught = function(caught) {\n            caught = caught ? 1 : 0;\n            HEAP8[this.ptr + 12 >>> 0] = caught;\n          };\n          this.get_caught = function() {\n            return HEAP8[this.ptr + 12 >>> 0] != 0;\n          };\n          this.set_rethrown = function(rethrown) {\n            rethrown = rethrown ? 1 : 0;\n            HEAP8[this.ptr + 13 >>> 0] = rethrown;\n          };\n          this.get_rethrown = function() {\n            return HEAP8[this.ptr + 13 >>> 0] != 0;\n          };\n          this.init = function(type, destructor) {\n            this.set_type(type);\n            this.set_destructor(destructor);\n            this.set_refcount(0);\n            this.set_caught(false);\n            this.set_rethrown(false);\n          };\n          this.add_ref = function() {\n            var value = HEAP32[this.ptr >>> 2];\n            HEAP32[this.ptr >>> 2] = value + 1;\n          };\n          this.release_ref = function() {\n            var prev = HEAP32[this.ptr >>> 2];\n            HEAP32[this.ptr >>> 2] = prev - 1;\n            return prev === 1;\n          };\n        }\n        var exceptionLast = 0;\n        var uncaughtExceptionCount = 0;\n        function ___cxa_throw(ptr, type, destructor) {\n          var info = new ExceptionInfo(ptr);\n          info.init(type, destructor);\n          exceptionLast = ptr;\n          uncaughtExceptionCount++;\n          throw ptr;\n        }\n        function setErrNo(value) {\n          HEAP32[___errno_location() >>> 2] = value;\n          return value;\n        }\n        var PATH = { splitPath: function(filename) {\n          var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n          return splitPathRe.exec(filename).slice(1);\n        }, normalizeArray: function(parts, allowAboveRoot) {\n          var up = 0;\n          for (var i = parts.length - 1; i >= 0; i--) {\n            var last = parts[i];\n            if (last === \".\") {\n              parts.splice(i, 1);\n            } else if (last === \"..\") {\n              parts.splice(i, 1);\n              up++;\n            } else if (up) {\n              parts.splice(i, 1);\n              up--;\n            }\n          }\n          if (allowAboveRoot) {\n            for (; up; up--) {\n              parts.unshift(\"..\");\n            }\n          }\n          return parts;\n        }, normalize: function(path) {\n          var isAbsolute = path.charAt(0) === \"/\", trailingSlash = path.substr(-1) === \"/\";\n          path = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n            return !!p;\n          }), !isAbsolute).join(\"/\");\n          if (!path && !isAbsolute) {\n            path = \".\";\n          }\n          if (path && trailingSlash) {\n            path += \"/\";\n          }\n          return (isAbsolute ? \"/\" : \"\") + path;\n        }, dirname: function(path) {\n          var result = PATH.splitPath(path), root = result[0], dir = result[1];\n          if (!root && !dir) {\n            return \".\";\n          }\n          if (dir) {\n            dir = dir.substr(0, dir.length - 1);\n          }\n          return root + dir;\n        }, basename: function(path) {\n          if (path === \"/\")\n            return \"/\";\n          path = PATH.normalize(path);\n          path = path.replace(/\\/$/, \"\");\n          var lastSlash = path.lastIndexOf(\"/\");\n          if (lastSlash === -1)\n            return path;\n          return path.substr(lastSlash + 1);\n        }, extname: function(path) {\n          return PATH.splitPath(path)[3];\n        }, join: function() {\n          var paths = Array.prototype.slice.call(arguments, 0);\n          return PATH.normalize(paths.join(\"/\"));\n        }, join2: function(l, r) {\n          return PATH.normalize(l + \"/\" + r);\n        } };\n        function getRandomDevice() {\n          if (typeof crypto === \"object\" && typeof crypto[\"getRandomValues\"] === \"function\") {\n            var randomBuffer = new Uint8Array(1);\n            return function() {\n              crypto.getRandomValues(randomBuffer);\n              return randomBuffer[0];\n            };\n          } else if (ENVIRONMENT_IS_NODE) {\n            try {\n              var crypto_module = require_crypto();\n              return function() {\n                return crypto_module[\"randomBytes\"](1)[0];\n              };\n            } catch (e) {\n            }\n          }\n          return function() {\n            abort(\"randomDevice\");\n          };\n        }\n        var PATH_FS = { resolve: function() {\n          var resolvedPath = \"\", resolvedAbsolute = false;\n          for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            var path = i >= 0 ? arguments[i] : FS.cwd();\n            if (typeof path !== \"string\") {\n              throw new TypeError(\"Arguments to path.resolve must be strings\");\n            } else if (!path) {\n              return \"\";\n            }\n            resolvedPath = path + \"/\" + resolvedPath;\n            resolvedAbsolute = path.charAt(0) === \"/\";\n          }\n          resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p) {\n            return !!p;\n          }), !resolvedAbsolute).join(\"/\");\n          return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n        }, relative: function(from, to) {\n          from = PATH_FS.resolve(from).substr(1);\n          to = PATH_FS.resolve(to).substr(1);\n          function trim(arr) {\n            var start = 0;\n            for (; start < arr.length; start++) {\n              if (arr[start] !== \"\")\n                break;\n            }\n            var end = arr.length - 1;\n            for (; end >= 0; end--) {\n              if (arr[end] !== \"\")\n                break;\n            }\n            if (start > end)\n              return [];\n            return arr.slice(start, end - start + 1);\n          }\n          var fromParts = trim(from.split(\"/\"));\n          var toParts = trim(to.split(\"/\"));\n          var length = Math.min(fromParts.length, toParts.length);\n          var samePartsLength = length;\n          for (var i = 0; i < length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n              samePartsLength = i;\n              break;\n            }\n          }\n          var outputParts = [];\n          for (var i = samePartsLength; i < fromParts.length; i++) {\n            outputParts.push(\"..\");\n          }\n          outputParts = outputParts.concat(toParts.slice(samePartsLength));\n          return outputParts.join(\"/\");\n        } };\n        var TTY = { ttys: [], init: function() {\n        }, shutdown: function() {\n        }, register: function(dev, ops) {\n          TTY.ttys[dev] = { input: [], output: [], ops };\n          FS.registerDevice(dev, TTY.stream_ops);\n        }, stream_ops: { open: function(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        }, close: function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        }, flush: function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        }, read: function(stream, buffer2, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === void 0 && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === void 0)\n              break;\n            bytesRead++;\n            buffer2[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        }, write: function(stream, buffer2, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer2[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        } }, default_tty_ops: { get_char: function(tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (ENVIRONMENT_IS_NODE) {\n              var BUFSIZE = 256;\n              var buf = Buffer.alloc(BUFSIZE);\n              var bytesRead = 0;\n              try {\n                bytesRead = nodeFS.readSync(process.stdin.fd, buf, 0, BUFSIZE, null);\n              } catch (e) {\n                if (e.toString().includes(\"EOF\"))\n                  bytesRead = 0;\n                else\n                  throw e;\n              }\n              if (bytesRead > 0) {\n                result = buf.slice(0, bytesRead).toString(\"utf-8\");\n              } else {\n                result = null;\n              }\n            } else if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n              result = window.prompt(\"Input: \");\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            } else if (typeof readline == \"function\") {\n              result = readline();\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        }, put_char: function(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0)\n              tty.output.push(val);\n          }\n        }, flush: function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        } }, default_tty1_ops: { put_char: function(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0)\n              tty.output.push(val);\n          }\n        }, flush: function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        } } };\n        function mmapAlloc(size) {\n          abort();\n        }\n        var MEMFS = { ops_table: null, mount: function(mount) {\n          return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\n        }, createNode: function(parent, name2, mode, dev) {\n          if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n            throw new FS.ErrnoError(63);\n          }\n          if (!MEMFS.ops_table) {\n            MEMFS.ops_table = { dir: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, lookup: MEMFS.node_ops.lookup, mknod: MEMFS.node_ops.mknod, rename: MEMFS.node_ops.rename, unlink: MEMFS.node_ops.unlink, rmdir: MEMFS.node_ops.rmdir, readdir: MEMFS.node_ops.readdir, symlink: MEMFS.node_ops.symlink }, stream: { llseek: MEMFS.stream_ops.llseek } }, file: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: { llseek: MEMFS.stream_ops.llseek, read: MEMFS.stream_ops.read, write: MEMFS.stream_ops.write, allocate: MEMFS.stream_ops.allocate, mmap: MEMFS.stream_ops.mmap, msync: MEMFS.stream_ops.msync } }, link: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, readlink: MEMFS.node_ops.readlink }, stream: {} }, chrdev: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: FS.chrdev_stream_ops } };\n          }\n          var node = FS.createNode(parent, name2, mode, dev);\n          if (FS.isDir(node.mode)) {\n            node.node_ops = MEMFS.ops_table.dir.node;\n            node.stream_ops = MEMFS.ops_table.dir.stream;\n            node.contents = {};\n          } else if (FS.isFile(node.mode)) {\n            node.node_ops = MEMFS.ops_table.file.node;\n            node.stream_ops = MEMFS.ops_table.file.stream;\n            node.usedBytes = 0;\n            node.contents = null;\n          } else if (FS.isLink(node.mode)) {\n            node.node_ops = MEMFS.ops_table.link.node;\n            node.stream_ops = MEMFS.ops_table.link.stream;\n          } else if (FS.isChrdev(node.mode)) {\n            node.node_ops = MEMFS.ops_table.chrdev.node;\n            node.stream_ops = MEMFS.ops_table.chrdev.stream;\n          }\n          node.timestamp = Date.now();\n          if (parent) {\n            parent.contents[name2] = node;\n            parent.timestamp = node.timestamp;\n          }\n          return node;\n        }, getFileDataAsTypedArray: function(node) {\n          if (!node.contents)\n            return new Uint8Array(0);\n          if (node.contents.subarray)\n            return node.contents.subarray(0, node.usedBytes);\n          return new Uint8Array(node.contents);\n        }, expandFileStorage: function(node, newCapacity) {\n          newCapacity >>>= 0;\n          var prevCapacity = node.contents ? node.contents.length : 0;\n          if (prevCapacity >= newCapacity)\n            return;\n          var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n          newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\n          if (prevCapacity != 0)\n            newCapacity = Math.max(newCapacity, 256);\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newCapacity);\n          if (node.usedBytes > 0)\n            node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n        }, resizeFileStorage: function(node, newSize) {\n          newSize >>>= 0;\n          if (node.usedBytes == newSize)\n            return;\n          if (newSize == 0) {\n            node.contents = null;\n            node.usedBytes = 0;\n          } else {\n            var oldContents = node.contents;\n            node.contents = new Uint8Array(newSize);\n            if (oldContents) {\n              node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n            }\n            node.usedBytes = newSize;\n          }\n        }, node_ops: { getattr: function(node) {\n          var attr = {};\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        }, setattr: function(node, attr) {\n          if (attr.mode !== void 0) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== void 0) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== void 0) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        }, lookup: function(parent, name2) {\n          throw FS.genericErrors[44];\n        }, mknod: function(parent, name2, mode, dev) {\n          return MEMFS.createNode(parent, name2, mode, dev);\n        }, rename: function(old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {\n            }\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        }, unlink: function(parent, name2) {\n          delete parent.contents[name2];\n          parent.timestamp = Date.now();\n        }, rmdir: function(parent, name2) {\n          var node = FS.lookupNode(parent, name2);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name2];\n          parent.timestamp = Date.now();\n        }, readdir: function(node) {\n          var entries = [\".\", \"..\"];\n          for (var key2 in node.contents) {\n            if (!node.contents.hasOwnProperty(key2)) {\n              continue;\n            }\n            entries.push(key2);\n          }\n          return entries;\n        }, symlink: function(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        }, readlink: function(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        } }, stream_ops: { read: function(stream, buffer2, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes)\n            return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer2.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer2[offset + i] = contents[position + i];\n          }\n          return size;\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\n          if (buffer2.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n          if (!length)\n            return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n          if (buffer2.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer2.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer2.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(buffer2.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer2.subarray) {\n            node.contents.set(buffer2.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer2[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        }, llseek: function(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        }, allocate: function(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        }, mmap: function(stream, address, length, position, prot, flags) {\n          if (address !== 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          if (!(flags & 2) && contents.buffer === buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            ptr >>>= 0;\n            HEAP8.set(contents, ptr >>> 0);\n          }\n          return { ptr, allocated };\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (mmapFlags & 2) {\n            return 0;\n          }\n          var bytesWritten = MEMFS.stream_ops.write(stream, buffer2, 0, length, offset, false);\n          return 0;\n        } } };\n        function asyncLoad(url, onload, onerror, noRunDep) {\n          var dep = !noRunDep ? getUniqueRunDependency(\"al \" + url) : \"\";\n          readAsync(url, function(arrayBuffer) {\n            assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\n            onload(new Uint8Array(arrayBuffer));\n            if (dep)\n              removeRunDependency(dep);\n          }, function(event) {\n            if (onerror) {\n              onerror();\n            } else {\n              throw 'Loading data file \"' + url + '\" failed.';\n            }\n          });\n          if (dep)\n            addRunDependency(dep);\n        }\n        var FS = { root: null, mounts: [], devices: {}, streams: [], nextInode: 1, nameTable: null, currentPath: \"/\", initialized: false, ignorePermissions: true, trackingDelegate: {}, tracking: { openFlags: { READ: 1, WRITE: 2 } }, ErrnoError: null, genericErrors: {}, filesystems: null, syncFSRequests: 0, lookupPath: function(path, opts) {\n          path = PATH_FS.resolve(FS.cwd(), path);\n          opts = opts || {};\n          if (!path)\n            return { path: \"\", node: null };\n          var defaults = { follow_mount: true, recurse_count: 0 };\n          for (var key2 in defaults) {\n            if (opts[key2] === void 0) {\n              opts[key2] = defaults[key2];\n            }\n          }\n          if (opts.recurse_count > 8) {\n            throw new FS.ErrnoError(32);\n          }\n          var parts = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n            return !!p;\n          }), false);\n          var current = FS.root;\n          var current_path = \"/\";\n          for (var i = 0; i < parts.length; i++) {\n            var islast = i === parts.length - 1;\n            if (islast && opts.parent) {\n              break;\n            }\n            current = FS.lookupNode(current, parts[i]);\n            current_path = PATH.join2(current_path, parts[i]);\n            if (FS.isMountpoint(current)) {\n              if (!islast || islast && opts.follow_mount) {\n                current = current.mounted.root;\n              }\n            }\n            if (!islast || opts.follow) {\n              var count = 0;\n              while (FS.isLink(current.mode)) {\n                var link = FS.readlink(current_path);\n                current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n                var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });\n                current = lookup.node;\n                if (count++ > 40) {\n                  throw new FS.ErrnoError(32);\n                }\n              }\n            }\n          }\n          return { path: current_path, node: current };\n        }, getPath: function(node) {\n          var path;\n          while (true) {\n            if (FS.isRoot(node)) {\n              var mount = node.mount.mountpoint;\n              if (!path)\n                return mount;\n              return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path;\n            }\n            path = path ? node.name + \"/\" + path : node.name;\n            node = node.parent;\n          }\n        }, hashName: function(parentid, name2) {\n          var hash = 0;\n          for (var i = 0; i < name2.length; i++) {\n            hash = (hash << 5) - hash + name2.charCodeAt(i) | 0;\n          }\n          return (parentid + hash >>> 0) % FS.nameTable.length;\n        }, hashAddNode: function(node) {\n          var hash = FS.hashName(node.parent.id, node.name);\n          node.name_next = FS.nameTable[hash];\n          FS.nameTable[hash] = node;\n        }, hashRemoveNode: function(node) {\n          var hash = FS.hashName(node.parent.id, node.name);\n          if (FS.nameTable[hash] === node) {\n            FS.nameTable[hash] = node.name_next;\n          } else {\n            var current = FS.nameTable[hash];\n            while (current) {\n              if (current.name_next === node) {\n                current.name_next = node.name_next;\n                break;\n              }\n              current = current.name_next;\n            }\n          }\n        }, lookupNode: function(parent, name2) {\n          var errCode = FS.mayLookup(parent);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode, parent);\n          }\n          var hash = FS.hashName(parent.id, name2);\n          for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n            var nodeName = node.name;\n            if (node.parent.id === parent.id && nodeName === name2) {\n              return node;\n            }\n          }\n          return FS.lookup(parent, name2);\n        }, createNode: function(parent, name2, mode, rdev) {\n          var node = new FS.FSNode(parent, name2, mode, rdev);\n          FS.hashAddNode(node);\n          return node;\n        }, destroyNode: function(node) {\n          FS.hashRemoveNode(node);\n        }, isRoot: function(node) {\n          return node === node.parent;\n        }, isMountpoint: function(node) {\n          return !!node.mounted;\n        }, isFile: function(mode) {\n          return (mode & 61440) === 32768;\n        }, isDir: function(mode) {\n          return (mode & 61440) === 16384;\n        }, isLink: function(mode) {\n          return (mode & 61440) === 40960;\n        }, isChrdev: function(mode) {\n          return (mode & 61440) === 8192;\n        }, isBlkdev: function(mode) {\n          return (mode & 61440) === 24576;\n        }, isFIFO: function(mode) {\n          return (mode & 61440) === 4096;\n        }, isSocket: function(mode) {\n          return (mode & 49152) === 49152;\n        }, flagModes: { \"r\": 0, \"r+\": 2, \"w\": 577, \"w+\": 578, \"a\": 1089, \"a+\": 1090 }, modeStringToFlags: function(str) {\n          var flags = FS.flagModes[str];\n          if (typeof flags === \"undefined\") {\n            throw new Error(\"Unknown file open mode: \" + str);\n          }\n          return flags;\n        }, flagsToPermissionString: function(flag) {\n          var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n          if (flag & 512) {\n            perms += \"w\";\n          }\n          return perms;\n        }, nodePermissions: function(node, perms) {\n          if (FS.ignorePermissions) {\n            return 0;\n          }\n          if (perms.includes(\"r\") && !(node.mode & 292)) {\n            return 2;\n          } else if (perms.includes(\"w\") && !(node.mode & 146)) {\n            return 2;\n          } else if (perms.includes(\"x\") && !(node.mode & 73)) {\n            return 2;\n          }\n          return 0;\n        }, mayLookup: function(dir) {\n          var errCode = FS.nodePermissions(dir, \"x\");\n          if (errCode)\n            return errCode;\n          if (!dir.node_ops.lookup)\n            return 2;\n          return 0;\n        }, mayCreate: function(dir, name2) {\n          try {\n            var node = FS.lookupNode(dir, name2);\n            return 20;\n          } catch (e) {\n          }\n          return FS.nodePermissions(dir, \"wx\");\n        }, mayDelete: function(dir, name2, isdir) {\n          var node;\n          try {\n            node = FS.lookupNode(dir, name2);\n          } catch (e) {\n            return e.errno;\n          }\n          var errCode = FS.nodePermissions(dir, \"wx\");\n          if (errCode) {\n            return errCode;\n          }\n          if (isdir) {\n            if (!FS.isDir(node.mode)) {\n              return 54;\n            }\n            if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n              return 10;\n            }\n          } else {\n            if (FS.isDir(node.mode)) {\n              return 31;\n            }\n          }\n          return 0;\n        }, mayOpen: function(node, flags) {\n          if (!node) {\n            return 44;\n          }\n          if (FS.isLink(node.mode)) {\n            return 32;\n          } else if (FS.isDir(node.mode)) {\n            if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n              return 31;\n            }\n          }\n          return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n        }, MAX_OPEN_FDS: 4096, nextfd: function(fd_start, fd_end) {\n          fd_start = fd_start || 0;\n          fd_end = fd_end || FS.MAX_OPEN_FDS;\n          for (var fd = fd_start; fd <= fd_end; fd++) {\n            if (!FS.streams[fd]) {\n              return fd;\n            }\n          }\n          throw new FS.ErrnoError(33);\n        }, getStream: function(fd) {\n          return FS.streams[fd];\n        }, createStream: function(stream, fd_start, fd_end) {\n          if (!FS.FSStream) {\n            FS.FSStream = function() {\n            };\n            FS.FSStream.prototype = { object: { get: function() {\n              return this.node;\n            }, set: function(val) {\n              this.node = val;\n            } }, isRead: { get: function() {\n              return (this.flags & 2097155) !== 1;\n            } }, isWrite: { get: function() {\n              return (this.flags & 2097155) !== 0;\n            } }, isAppend: { get: function() {\n              return this.flags & 1024;\n            } } };\n          }\n          var newStream = new FS.FSStream();\n          for (var p in stream) {\n            newStream[p] = stream[p];\n          }\n          stream = newStream;\n          var fd = FS.nextfd(fd_start, fd_end);\n          stream.fd = fd;\n          FS.streams[fd] = stream;\n          return stream;\n        }, closeStream: function(fd) {\n          FS.streams[fd] = null;\n        }, chrdev_stream_ops: { open: function(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          stream.stream_ops = device.stream_ops;\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        }, llseek: function() {\n          throw new FS.ErrnoError(70);\n        } }, major: function(dev) {\n          return dev >> 8;\n        }, minor: function(dev) {\n          return dev & 255;\n        }, makedev: function(ma, mi) {\n          return ma << 8 | mi;\n        }, registerDevice: function(dev, ops) {\n          FS.devices[dev] = { stream_ops: ops };\n        }, getDevice: function(dev) {\n          return FS.devices[dev];\n        }, getMounts: function(mount) {\n          var mounts = [];\n          var check = [mount];\n          while (check.length) {\n            var m = check.pop();\n            mounts.push(m);\n            check.push.apply(check, m.mounts);\n          }\n          return mounts;\n        }, syncfs: function(populate, callback) {\n          if (typeof populate === \"function\") {\n            callback = populate;\n            populate = false;\n          }\n          FS.syncFSRequests++;\n          if (FS.syncFSRequests > 1) {\n            err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\");\n          }\n          var mounts = FS.getMounts(FS.root.mount);\n          var completed = 0;\n          function doCallback(errCode) {\n            FS.syncFSRequests--;\n            return callback(errCode);\n          }\n          function done(errCode) {\n            if (errCode) {\n              if (!done.errored) {\n                done.errored = true;\n                return doCallback(errCode);\n              }\n              return;\n            }\n            if (++completed >= mounts.length) {\n              doCallback(null);\n            }\n          }\n          mounts.forEach(function(mount) {\n            if (!mount.type.syncfs) {\n              return done(null);\n            }\n            mount.type.syncfs(mount, populate, done);\n          });\n        }, mount: function(type, opts, mountpoint) {\n          var root = mountpoint === \"/\";\n          var pseudo = !mountpoint;\n          var node;\n          if (root && FS.root) {\n            throw new FS.ErrnoError(10);\n          } else if (!root && !pseudo) {\n            var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n            mountpoint = lookup.path;\n            node = lookup.node;\n            if (FS.isMountpoint(node)) {\n              throw new FS.ErrnoError(10);\n            }\n            if (!FS.isDir(node.mode)) {\n              throw new FS.ErrnoError(54);\n            }\n          }\n          var mount = { type, opts, mountpoint, mounts: [] };\n          var mountRoot = type.mount(mount);\n          mountRoot.mount = mount;\n          mount.root = mountRoot;\n          if (root) {\n            FS.root = mountRoot;\n          } else if (node) {\n            node.mounted = mount;\n            if (node.mount) {\n              node.mount.mounts.push(mount);\n            }\n          }\n          return mountRoot;\n        }, unmount: function(mountpoint) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n          if (!FS.isMountpoint(lookup.node)) {\n            throw new FS.ErrnoError(28);\n          }\n          var node = lookup.node;\n          var mount = node.mounted;\n          var mounts = FS.getMounts(mount);\n          Object.keys(FS.nameTable).forEach(function(hash) {\n            var current = FS.nameTable[hash];\n            while (current) {\n              var next = current.name_next;\n              if (mounts.includes(current.mount)) {\n                FS.destroyNode(current);\n              }\n              current = next;\n            }\n          });\n          node.mounted = null;\n          var idx = node.mount.mounts.indexOf(mount);\n          node.mount.mounts.splice(idx, 1);\n        }, lookup: function(parent, name2) {\n          return parent.node_ops.lookup(parent, name2);\n        }, mknod: function(path, mode, dev) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          if (!name2 || name2 === \".\" || name2 === \"..\") {\n            throw new FS.ErrnoError(28);\n          }\n          var errCode = FS.mayCreate(parent, name2);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.mknod) {\n            throw new FS.ErrnoError(63);\n          }\n          return parent.node_ops.mknod(parent, name2, mode, dev);\n        }, create: function(path, mode) {\n          mode = mode !== void 0 ? mode : 438;\n          mode &= 4095;\n          mode |= 32768;\n          return FS.mknod(path, mode, 0);\n        }, mkdir: function(path, mode) {\n          mode = mode !== void 0 ? mode : 511;\n          mode &= 511 | 512;\n          mode |= 16384;\n          return FS.mknod(path, mode, 0);\n        }, mkdirTree: function(path, mode) {\n          var dirs = path.split(\"/\");\n          var d = \"\";\n          for (var i = 0; i < dirs.length; ++i) {\n            if (!dirs[i])\n              continue;\n            d += \"/\" + dirs[i];\n            try {\n              FS.mkdir(d, mode);\n            } catch (e) {\n              if (e.errno != 20)\n                throw e;\n            }\n          }\n        }, mkdev: function(path, mode, dev) {\n          if (typeof dev === \"undefined\") {\n            dev = mode;\n            mode = 438;\n          }\n          mode |= 8192;\n          return FS.mknod(path, mode, dev);\n        }, symlink: function(oldpath, newpath) {\n          if (!PATH_FS.resolve(oldpath)) {\n            throw new FS.ErrnoError(44);\n          }\n          var lookup = FS.lookupPath(newpath, { parent: true });\n          var parent = lookup.node;\n          if (!parent) {\n            throw new FS.ErrnoError(44);\n          }\n          var newname = PATH.basename(newpath);\n          var errCode = FS.mayCreate(parent, newname);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.symlink) {\n            throw new FS.ErrnoError(63);\n          }\n          return parent.node_ops.symlink(parent, newname, oldpath);\n        }, rename: function(old_path, new_path) {\n          var old_dirname = PATH.dirname(old_path);\n          var new_dirname = PATH.dirname(new_path);\n          var old_name = PATH.basename(old_path);\n          var new_name = PATH.basename(new_path);\n          var lookup, old_dir, new_dir;\n          lookup = FS.lookupPath(old_path, { parent: true });\n          old_dir = lookup.node;\n          lookup = FS.lookupPath(new_path, { parent: true });\n          new_dir = lookup.node;\n          if (!old_dir || !new_dir)\n            throw new FS.ErrnoError(44);\n          if (old_dir.mount !== new_dir.mount) {\n            throw new FS.ErrnoError(75);\n          }\n          var old_node = FS.lookupNode(old_dir, old_name);\n          var relative = PATH_FS.relative(old_path, new_dirname);\n          if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(28);\n          }\n          relative = PATH_FS.relative(new_path, old_dirname);\n          if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(55);\n          }\n          var new_node;\n          try {\n            new_node = FS.lookupNode(new_dir, new_name);\n          } catch (e) {\n          }\n          if (old_node === new_node) {\n            return;\n          }\n          var isdir = FS.isDir(old_node.mode);\n          var errCode = FS.mayDelete(old_dir, old_name, isdir);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!old_dir.node_ops.rename) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n            throw new FS.ErrnoError(10);\n          }\n          if (new_dir !== old_dir) {\n            errCode = FS.nodePermissions(old_dir, \"w\");\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n          }\n          try {\n            if (FS.trackingDelegate[\"willMovePath\"]) {\n              FS.trackingDelegate[\"willMovePath\"](old_path, new_path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n          }\n          FS.hashRemoveNode(old_node);\n          try {\n            old_dir.node_ops.rename(old_node, new_dir, new_name);\n          } catch (e) {\n            throw e;\n          } finally {\n            FS.hashAddNode(old_node);\n          }\n          try {\n            if (FS.trackingDelegate[\"onMovePath\"])\n              FS.trackingDelegate[\"onMovePath\"](old_path, new_path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n          }\n        }, rmdir: function(path) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          var node = FS.lookupNode(parent, name2);\n          var errCode = FS.mayDelete(parent, name2, true);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.rmdir) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          try {\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\n              FS.trackingDelegate[\"willDeletePath\"](path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n          parent.node_ops.rmdir(parent, name2);\n          FS.destroyNode(node);\n          try {\n            if (FS.trackingDelegate[\"onDeletePath\"])\n              FS.trackingDelegate[\"onDeletePath\"](path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n        }, readdir: function(path) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          var node = lookup.node;\n          if (!node.node_ops.readdir) {\n            throw new FS.ErrnoError(54);\n          }\n          return node.node_ops.readdir(node);\n        }, unlink: function(path) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          var node = FS.lookupNode(parent, name2);\n          var errCode = FS.mayDelete(parent, name2, false);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.unlink) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          try {\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\n              FS.trackingDelegate[\"willDeletePath\"](path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n          parent.node_ops.unlink(parent, name2);\n          FS.destroyNode(node);\n          try {\n            if (FS.trackingDelegate[\"onDeletePath\"])\n              FS.trackingDelegate[\"onDeletePath\"](path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n        }, readlink: function(path) {\n          var lookup = FS.lookupPath(path);\n          var link = lookup.node;\n          if (!link) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!link.node_ops.readlink) {\n            throw new FS.ErrnoError(28);\n          }\n          return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n        }, stat: function(path, dontFollow) {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          var node = lookup.node;\n          if (!node) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!node.node_ops.getattr) {\n            throw new FS.ErrnoError(63);\n          }\n          return node.node_ops.getattr(node);\n        }, lstat: function(path) {\n          return FS.stat(path, true);\n        }, chmod: function(path, mode, dontFollow) {\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          node.node_ops.setattr(node, { mode: mode & 4095 | node.mode & ~4095, timestamp: Date.now() });\n        }, lchmod: function(path, mode) {\n          FS.chmod(path, mode, true);\n        }, fchmod: function(fd, mode) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          FS.chmod(stream.node, mode);\n        }, chown: function(path, uid, gid, dontFollow) {\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          node.node_ops.setattr(node, { timestamp: Date.now() });\n        }, lchown: function(path, uid, gid) {\n          FS.chown(path, uid, gid, true);\n        }, fchown: function(fd, uid, gid) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          FS.chown(stream.node, uid, gid);\n        }, truncate: function(path, len) {\n          if (len < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: true });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!FS.isFile(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          var errCode = FS.nodePermissions(node, \"w\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          node.node_ops.setattr(node, { size: len, timestamp: Date.now() });\n        }, ftruncate: function(fd, len) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(28);\n          }\n          FS.truncate(stream.node, len);\n        }, utime: function(path, atime, mtime) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          var node = lookup.node;\n          node.node_ops.setattr(node, { timestamp: Math.max(atime, mtime) });\n        }, open: function(path, flags, mode, fd_start, fd_end) {\n          if (path === \"\") {\n            throw new FS.ErrnoError(44);\n          }\n          flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\n          mode = typeof mode === \"undefined\" ? 438 : mode;\n          if (flags & 64) {\n            mode = mode & 4095 | 32768;\n          } else {\n            mode = 0;\n          }\n          var node;\n          if (typeof path === \"object\") {\n            node = path;\n          } else {\n            path = PATH.normalize(path);\n            try {\n              var lookup = FS.lookupPath(path, { follow: !(flags & 131072) });\n              node = lookup.node;\n            } catch (e) {\n            }\n          }\n          var created = false;\n          if (flags & 64) {\n            if (node) {\n              if (flags & 128) {\n                throw new FS.ErrnoError(20);\n              }\n            } else {\n              node = FS.mknod(path, mode, 0);\n              created = true;\n            }\n          }\n          if (!node) {\n            throw new FS.ErrnoError(44);\n          }\n          if (FS.isChrdev(node.mode)) {\n            flags &= ~512;\n          }\n          if (flags & 65536 && !FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n          if (!created) {\n            var errCode = FS.mayOpen(node, flags);\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n          }\n          if (flags & 512) {\n            FS.truncate(node, 0);\n          }\n          flags &= ~(128 | 512 | 131072);\n          var stream = FS.createStream({ node, path: FS.getPath(node), flags, seekable: true, position: 0, stream_ops: node.stream_ops, ungotten: [], error: false }, fd_start, fd_end);\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n          if (Module[\"logReadFiles\"] && !(flags & 1)) {\n            if (!FS.readFiles)\n              FS.readFiles = {};\n            if (!(path in FS.readFiles)) {\n              FS.readFiles[path] = 1;\n              err(\"FS.trackingDelegate error on read file: \" + path);\n            }\n          }\n          try {\n            if (FS.trackingDelegate[\"onOpenFile\"]) {\n              var trackingFlags = 0;\n              if ((flags & 2097155) !== 1) {\n                trackingFlags |= FS.tracking.openFlags.READ;\n              }\n              if ((flags & 2097155) !== 0) {\n                trackingFlags |= FS.tracking.openFlags.WRITE;\n              }\n              FS.trackingDelegate[\"onOpenFile\"](path, trackingFlags);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['onOpenFile']('\" + path + \"', flags) threw an exception: \" + e.message);\n          }\n          return stream;\n        }, close: function(stream) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (stream.getdents)\n            stream.getdents = null;\n          try {\n            if (stream.stream_ops.close) {\n              stream.stream_ops.close(stream);\n            }\n          } catch (e) {\n            throw e;\n          } finally {\n            FS.closeStream(stream.fd);\n          }\n          stream.fd = null;\n        }, isClosed: function(stream) {\n          return stream.fd === null;\n        }, llseek: function(stream, offset, whence) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (!stream.seekable || !stream.stream_ops.llseek) {\n            throw new FS.ErrnoError(70);\n          }\n          if (whence != 0 && whence != 1 && whence != 2) {\n            throw new FS.ErrnoError(28);\n          }\n          stream.position = stream.stream_ops.llseek(stream, offset, whence);\n          stream.ungotten = [];\n          return stream.position;\n        }, read: function(stream, buffer2, offset, length, position) {\n          offset >>>= 0;\n          if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(8);\n          }\n          if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!stream.stream_ops.read) {\n            throw new FS.ErrnoError(28);\n          }\n          var seeking = typeof position !== \"undefined\";\n          if (!seeking) {\n            position = stream.position;\n          } else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n          }\n          var bytesRead = stream.stream_ops.read(stream, buffer2, offset, length, position);\n          if (!seeking)\n            stream.position += bytesRead;\n          return bytesRead;\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\n          offset >>>= 0;\n          if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n          }\n          if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!stream.stream_ops.write) {\n            throw new FS.ErrnoError(28);\n          }\n          if (stream.seekable && stream.flags & 1024) {\n            FS.llseek(stream, 0, 2);\n          }\n          var seeking = typeof position !== \"undefined\";\n          if (!seeking) {\n            position = stream.position;\n          } else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n          }\n          var bytesWritten = stream.stream_ops.write(stream, buffer2, offset, length, position, canOwn);\n          if (!seeking)\n            stream.position += bytesWritten;\n          try {\n            if (stream.path && FS.trackingDelegate[\"onWriteToFile\"])\n              FS.trackingDelegate[\"onWriteToFile\"](stream.path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onWriteToFile']('\" + stream.path + \"') threw an exception: \" + e.message);\n          }\n          return bytesWritten;\n        }, allocate: function(stream, offset, length) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (offset < 0 || length <= 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n          }\n          if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (!stream.stream_ops.allocate) {\n            throw new FS.ErrnoError(138);\n          }\n          stream.stream_ops.allocate(stream, offset, length);\n        }, mmap: function(stream, address, length, position, prot, flags) {\n          address >>>= 0;\n          if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n            throw new FS.ErrnoError(2);\n          }\n          if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(2);\n          }\n          if (!stream.stream_ops.mmap) {\n            throw new FS.ErrnoError(43);\n          }\n          return stream.stream_ops.mmap(stream, address, length, position, prot, flags);\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\n          offset >>>= 0;\n          if (!stream || !stream.stream_ops.msync) {\n            return 0;\n          }\n          return stream.stream_ops.msync(stream, buffer2, offset, length, mmapFlags);\n        }, munmap: function(stream) {\n          return 0;\n        }, ioctl: function(stream, cmd, arg) {\n          if (!stream.stream_ops.ioctl) {\n            throw new FS.ErrnoError(59);\n          }\n          return stream.stream_ops.ioctl(stream, cmd, arg);\n        }, readFile: function(path, opts) {\n          opts = opts || {};\n          opts.flags = opts.flags || 0;\n          opts.encoding = opts.encoding || \"binary\";\n          if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n            throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n          }\n          var ret;\n          var stream = FS.open(path, opts.flags);\n          var stat = FS.stat(path);\n          var length = stat.size;\n          var buf = new Uint8Array(length);\n          FS.read(stream, buf, 0, length, 0);\n          if (opts.encoding === \"utf8\") {\n            ret = UTF8ArrayToString(buf, 0);\n          } else if (opts.encoding === \"binary\") {\n            ret = buf;\n          }\n          FS.close(stream);\n          return ret;\n        }, writeFile: function(path, data, opts) {\n          opts = opts || {};\n          opts.flags = opts.flags || 577;\n          var stream = FS.open(path, opts.flags, opts.mode);\n          if (typeof data === \"string\") {\n            var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n            var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n            FS.write(stream, buf, 0, actualNumBytes, void 0, opts.canOwn);\n          } else if (ArrayBuffer.isView(data)) {\n            FS.write(stream, data, 0, data.byteLength, void 0, opts.canOwn);\n          } else {\n            throw new Error(\"Unsupported data type\");\n          }\n          FS.close(stream);\n        }, cwd: function() {\n          return FS.currentPath;\n        }, chdir: function(path) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          if (lookup.node === null) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!FS.isDir(lookup.node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n          var errCode = FS.nodePermissions(lookup.node, \"x\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          FS.currentPath = lookup.path;\n        }, createDefaultDirectories: function() {\n          FS.mkdir(\"/tmp\");\n          FS.mkdir(\"/home\");\n          FS.mkdir(\"/home/web_user\");\n        }, createDefaultDevices: function() {\n          FS.mkdir(\"/dev\");\n          FS.registerDevice(FS.makedev(1, 3), { read: function() {\n            return 0;\n          }, write: function(stream, buffer2, offset, length, pos) {\n            return length;\n          } });\n          FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n          TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n          TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n          FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n          FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n          var random_device = getRandomDevice();\n          FS.createDevice(\"/dev\", \"random\", random_device);\n          FS.createDevice(\"/dev\", \"urandom\", random_device);\n          FS.mkdir(\"/dev/shm\");\n          FS.mkdir(\"/dev/shm/tmp\");\n        }, createSpecialDirectories: function() {\n          FS.mkdir(\"/proc\");\n          var proc_self = FS.mkdir(\"/proc/self\");\n          FS.mkdir(\"/proc/self/fd\");\n          FS.mount({ mount: function() {\n            var node = FS.createNode(proc_self, \"fd\", 16384 | 511, 73);\n            node.node_ops = { lookup: function(parent, name2) {\n              var fd = +name2;\n              var stream = FS.getStream(fd);\n              if (!stream)\n                throw new FS.ErrnoError(8);\n              var ret = { parent: null, mount: { mountpoint: \"fake\" }, node_ops: { readlink: function() {\n                return stream.path;\n              } } };\n              ret.parent = ret;\n              return ret;\n            } };\n            return node;\n          } }, {}, \"/proc/self/fd\");\n        }, createStandardStreams: function() {\n          if (Module[\"stdin\"]) {\n            FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n          } else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n          }\n          if (Module[\"stdout\"]) {\n            FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n          } else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n          }\n          if (Module[\"stderr\"]) {\n            FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n          } else {\n            FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n          }\n          var stdin = FS.open(\"/dev/stdin\", 0);\n          var stdout = FS.open(\"/dev/stdout\", 1);\n          var stderr = FS.open(\"/dev/stderr\", 1);\n        }, ensureErrnoError: function() {\n          if (FS.ErrnoError)\n            return;\n          FS.ErrnoError = function ErrnoError(errno, node) {\n            this.node = node;\n            this.setErrno = function(errno2) {\n              this.errno = errno2;\n            };\n            this.setErrno(errno);\n            this.message = \"FS error\";\n          };\n          FS.ErrnoError.prototype = new Error();\n          FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n          [44].forEach(function(code) {\n            FS.genericErrors[code] = new FS.ErrnoError(code);\n            FS.genericErrors[code].stack = \"<generic error, no stack>\";\n          });\n        }, staticInit: function() {\n          FS.ensureErrnoError();\n          FS.nameTable = new Array(4096);\n          FS.mount(MEMFS, {}, \"/\");\n          FS.createDefaultDirectories();\n          FS.createDefaultDevices();\n          FS.createSpecialDirectories();\n          FS.filesystems = { \"MEMFS\": MEMFS };\n        }, init: function(input, output, error) {\n          FS.init.initialized = true;\n          FS.ensureErrnoError();\n          Module[\"stdin\"] = input || Module[\"stdin\"];\n          Module[\"stdout\"] = output || Module[\"stdout\"];\n          Module[\"stderr\"] = error || Module[\"stderr\"];\n          FS.createStandardStreams();\n        }, quit: function() {\n          FS.init.initialized = false;\n          var fflush = Module[\"_fflush\"];\n          if (fflush)\n            fflush(0);\n          for (var i = 0; i < FS.streams.length; i++) {\n            var stream = FS.streams[i];\n            if (!stream) {\n              continue;\n            }\n            FS.close(stream);\n          }\n        }, getMode: function(canRead, canWrite) {\n          var mode = 0;\n          if (canRead)\n            mode |= 292 | 73;\n          if (canWrite)\n            mode |= 146;\n          return mode;\n        }, findObject: function(path, dontResolveLastLink) {\n          var ret = FS.analyzePath(path, dontResolveLastLink);\n          if (ret.exists) {\n            return ret.object;\n          } else {\n            return null;\n          }\n        }, analyzePath: function(path, dontResolveLastLink) {\n          try {\n            var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            path = lookup.path;\n          } catch (e) {\n          }\n          var ret = { isRoot: false, exists: false, error: 0, name: null, path: null, object: null, parentExists: false, parentPath: null, parentObject: null };\n          try {\n            var lookup = FS.lookupPath(path, { parent: true });\n            ret.parentExists = true;\n            ret.parentPath = lookup.path;\n            ret.parentObject = lookup.node;\n            ret.name = PATH.basename(path);\n            lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            ret.exists = true;\n            ret.path = lookup.path;\n            ret.object = lookup.node;\n            ret.name = lookup.node.name;\n            ret.isRoot = lookup.path === \"/\";\n          } catch (e) {\n            ret.error = e.errno;\n          }\n          return ret;\n        }, createPath: function(parent, path, canRead, canWrite) {\n          parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\n          var parts = path.split(\"/\").reverse();\n          while (parts.length) {\n            var part = parts.pop();\n            if (!part)\n              continue;\n            var current = PATH.join2(parent, part);\n            try {\n              FS.mkdir(current);\n            } catch (e) {\n            }\n            parent = current;\n          }\n          return current;\n        }, createFile: function(parent, name2, properties, canRead, canWrite) {\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\n          var mode = FS.getMode(canRead, canWrite);\n          return FS.create(path, mode);\n        }, createDataFile: function(parent, name2, data, canRead, canWrite, canOwn) {\n          var path = name2 ? PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2) : parent;\n          var mode = FS.getMode(canRead, canWrite);\n          var node = FS.create(path, mode);\n          if (data) {\n            if (typeof data === \"string\") {\n              var arr = new Array(data.length);\n              for (var i = 0, len = data.length; i < len; ++i)\n                arr[i] = data.charCodeAt(i);\n              data = arr;\n            }\n            FS.chmod(node, mode | 146);\n            var stream = FS.open(node, 577);\n            FS.write(stream, data, 0, data.length, 0, canOwn);\n            FS.close(stream);\n            FS.chmod(node, mode);\n          }\n          return node;\n        }, createDevice: function(parent, name2, input, output) {\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\n          var mode = FS.getMode(!!input, !!output);\n          if (!FS.createDevice.major)\n            FS.createDevice.major = 64;\n          var dev = FS.makedev(FS.createDevice.major++, 0);\n          FS.registerDevice(dev, { open: function(stream) {\n            stream.seekable = false;\n          }, close: function(stream) {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          }, read: function(stream, buffer2, offset, length, pos) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === void 0 && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === void 0)\n                break;\n              bytesRead++;\n              buffer2[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          }, write: function(stream, buffer2, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer2[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          } });\n          return FS.mkdev(path, mode, dev);\n        }, forceLoadFile: function(obj) {\n          if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n            return true;\n          if (typeof XMLHttpRequest !== \"undefined\") {\n            throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n          } else if (read_) {\n            try {\n              obj.contents = intArrayFromString(read_(obj.url), true);\n              obj.usedBytes = obj.contents.length;\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n          } else {\n            throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n          }\n        }, createLazyFile: function(parent, name2, url, canRead, canWrite) {\n          function LazyUint8Array() {\n            this.lengthKnown = false;\n            this.chunks = [];\n          }\n          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n            if (idx > this.length - 1 || idx < 0) {\n              return void 0;\n            }\n            var chunkOffset = idx % this.chunkSize;\n            var chunkNum = idx / this.chunkSize | 0;\n            return this.getter(chunkNum)[chunkOffset];\n          };\n          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n            this.getter = getter;\n          };\n          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"HEAD\", url, false);\n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304))\n              throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n            var header;\n            var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n            var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n            var chunkSize = 1024 * 1024;\n            if (!hasByteServing)\n              chunkSize = datalength;\n            var doXHR = function(from, to) {\n              if (from > to)\n                throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n              if (to > datalength - 1)\n                throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n              var xhr2 = new XMLHttpRequest();\n              xhr2.open(\"GET\", url, false);\n              if (datalength !== chunkSize)\n                xhr2.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n              if (typeof Uint8Array != \"undefined\")\n                xhr2.responseType = \"arraybuffer\";\n              if (xhr2.overrideMimeType) {\n                xhr2.overrideMimeType(\"text/plain; charset=x-user-defined\");\n              }\n              xhr2.send(null);\n              if (!(xhr2.status >= 200 && xhr2.status < 300 || xhr2.status === 304))\n                throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr2.status);\n              if (xhr2.response !== void 0) {\n                return new Uint8Array(xhr2.response || []);\n              } else {\n                return intArrayFromString(xhr2.responseText || \"\", true);\n              }\n            };\n            var lazyArray2 = this;\n            lazyArray2.setDataGetter(function(chunkNum) {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\") {\n                lazyArray2.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\")\n                throw new Error(\"doXHR failed!\");\n              return lazyArray2.chunks[chunkNum];\n            });\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n            }\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          };\n          if (typeof XMLHttpRequest !== \"undefined\") {\n            if (!ENVIRONMENT_IS_WORKER)\n              throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n            var lazyArray = new LazyUint8Array();\n            Object.defineProperties(lazyArray, { length: { get: function() {\n              if (!this.lengthKnown) {\n                this.cacheLength();\n              }\n              return this._length;\n            } }, chunkSize: { get: function() {\n              if (!this.lengthKnown) {\n                this.cacheLength();\n              }\n              return this._chunkSize;\n            } } });\n            var properties = { isDevice: false, contents: lazyArray };\n          } else {\n            var properties = { isDevice: false, url };\n          }\n          var node = FS.createFile(parent, name2, properties, canRead, canWrite);\n          if (properties.contents) {\n            node.contents = properties.contents;\n          } else if (properties.url) {\n            node.contents = null;\n            node.url = properties.url;\n          }\n          Object.defineProperties(node, { usedBytes: { get: function() {\n            return this.contents.length;\n          } } });\n          var stream_ops = {};\n          var keys = Object.keys(node.stream_ops);\n          keys.forEach(function(key2) {\n            var fn = node.stream_ops[key2];\n            stream_ops[key2] = function forceLoadLazyFile() {\n              FS.forceLoadFile(node);\n              return fn.apply(null, arguments);\n            };\n          });\n          stream_ops.read = function stream_ops_read(stream, buffer2, offset, length, position) {\n            FS.forceLoadFile(node);\n            var contents = stream.node.contents;\n            if (position >= contents.length)\n              return 0;\n            var size = Math.min(contents.length - position, length);\n            if (contents.slice) {\n              for (var i = 0; i < size; i++) {\n                buffer2[offset + i] = contents[position + i];\n              }\n            } else {\n              for (var i = 0; i < size; i++) {\n                buffer2[offset + i] = contents.get(position + i);\n              }\n            }\n            return size;\n          };\n          node.stream_ops = stream_ops;\n          return node;\n        }, createPreloadedFile: function(parent, name2, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n          Browser.init();\n          var fullname = name2 ? PATH_FS.resolve(PATH.join2(parent, name2)) : parent;\n          var dep = getUniqueRunDependency(\"cp \" + fullname);\n          function processData(byteArray) {\n            function finish(byteArray2) {\n              if (preFinish)\n                preFinish();\n              if (!dontCreateFile) {\n                FS.createDataFile(parent, name2, byteArray2, canRead, canWrite, canOwn);\n              }\n              if (onload)\n                onload();\n              removeRunDependency(dep);\n            }\n            var handled = false;\n            Module[\"preloadPlugins\"].forEach(function(plugin) {\n              if (handled)\n                return;\n              if (plugin[\"canHandle\"](fullname)) {\n                plugin[\"handle\"](byteArray, fullname, finish, function() {\n                  if (onerror)\n                    onerror();\n                  removeRunDependency(dep);\n                });\n                handled = true;\n              }\n            });\n            if (!handled)\n              finish(byteArray);\n          }\n          addRunDependency(dep);\n          if (typeof url == \"string\") {\n            asyncLoad(url, function(byteArray) {\n              processData(byteArray);\n            }, onerror);\n          } else {\n            processData(url);\n          }\n        }, indexedDB: function() {\n          return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n        }, DB_NAME: function() {\n          return \"EM_FS_\" + window.location.pathname;\n        }, DB_VERSION: 20, DB_STORE_NAME: \"FILE_DATA\", saveFilesToDB: function(paths, onload, onerror) {\n          onload = onload || function() {\n          };\n          onerror = onerror || function() {\n          };\n          var indexedDB = FS.indexedDB();\n          try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n          } catch (e) {\n            return onerror(e);\n          }\n          openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n            out(\"creating db\");\n            var db = openRequest.result;\n            db.createObjectStore(FS.DB_STORE_NAME);\n          };\n          openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n              if (fail == 0)\n                onload();\n              else\n                onerror();\n            }\n            paths.forEach(function(path) {\n              var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n              putRequest.onsuccess = function putRequest_onsuccess() {\n                ok++;\n                if (ok + fail == total)\n                  finish();\n              };\n              putRequest.onerror = function putRequest_onerror() {\n                fail++;\n                if (ok + fail == total)\n                  finish();\n              };\n            });\n            transaction.onerror = onerror;\n          };\n          openRequest.onerror = onerror;\n        }, loadFilesFromDB: function(paths, onload, onerror) {\n          onload = onload || function() {\n          };\n          onerror = onerror || function() {\n          };\n          var indexedDB = FS.indexedDB();\n          try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n          } catch (e) {\n            return onerror(e);\n          }\n          openRequest.onupgradeneeded = onerror;\n          openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            try {\n              var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\");\n            } catch (e) {\n              onerror(e);\n              return;\n            }\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n              if (fail == 0)\n                onload();\n              else\n                onerror();\n            }\n            paths.forEach(function(path) {\n              var getRequest = files.get(path);\n              getRequest.onsuccess = function getRequest_onsuccess() {\n                if (FS.analyzePath(path).exists) {\n                  FS.unlink(path);\n                }\n                FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n                ok++;\n                if (ok + fail == total)\n                  finish();\n              };\n              getRequest.onerror = function getRequest_onerror() {\n                fail++;\n                if (ok + fail == total)\n                  finish();\n              };\n            });\n            transaction.onerror = onerror;\n          };\n          openRequest.onerror = onerror;\n        } };\n        var SYSCALLS = { mappings: {}, DEFAULT_POLLMASK: 5, umask: 511, calculateAt: function(dirfd, path, allowEmpty) {\n          if (path[0] === \"/\") {\n            return path;\n          }\n          var dir;\n          if (dirfd === -100) {\n            dir = FS.cwd();\n          } else {\n            var dirstream = FS.getStream(dirfd);\n            if (!dirstream)\n              throw new FS.ErrnoError(8);\n            dir = dirstream.path;\n          }\n          if (path.length == 0) {\n            if (!allowEmpty) {\n              throw new FS.ErrnoError(44);\n            }\n            return dir;\n          }\n          return PATH.join2(dir, path);\n        }, doStat: function(func, path, buf) {\n          try {\n            var stat = func(path);\n          } catch (e) {\n            if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n              return -54;\n            }\n            throw e;\n          }\n          HEAP32[buf >>> 2] = stat.dev;\n          HEAP32[buf + 4 >>> 2] = 0;\n          HEAP32[buf + 8 >>> 2] = stat.ino;\n          HEAP32[buf + 12 >>> 2] = stat.mode;\n          HEAP32[buf + 16 >>> 2] = stat.nlink;\n          HEAP32[buf + 20 >>> 2] = stat.uid;\n          HEAP32[buf + 24 >>> 2] = stat.gid;\n          HEAP32[buf + 28 >>> 2] = stat.rdev;\n          HEAP32[buf + 32 >>> 2] = 0;\n          tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 40 >>> 2] = tempI64[0], HEAP32[buf + 44 >>> 2] = tempI64[1];\n          HEAP32[buf + 48 >>> 2] = 4096;\n          HEAP32[buf + 52 >>> 2] = stat.blocks;\n          HEAP32[buf + 56 >>> 2] = stat.atime.getTime() / 1e3 | 0;\n          HEAP32[buf + 60 >>> 2] = 0;\n          HEAP32[buf + 64 >>> 2] = stat.mtime.getTime() / 1e3 | 0;\n          HEAP32[buf + 68 >>> 2] = 0;\n          HEAP32[buf + 72 >>> 2] = stat.ctime.getTime() / 1e3 | 0;\n          HEAP32[buf + 76 >>> 2] = 0;\n          tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 80 >>> 2] = tempI64[0], HEAP32[buf + 84 >>> 2] = tempI64[1];\n          return 0;\n        }, doMsync: function(addr, stream, len, flags, offset) {\n          var buffer2 = HEAPU8.slice(addr, addr + len);\n          FS.msync(stream, buffer2, offset, len, flags);\n        }, doMkdir: function(path, mode) {\n          path = PATH.normalize(path);\n          if (path[path.length - 1] === \"/\")\n            path = path.substr(0, path.length - 1);\n          FS.mkdir(path, mode, 0);\n          return 0;\n        }, doMknod: function(path, mode, dev) {\n          switch (mode & 61440) {\n            case 32768:\n            case 8192:\n            case 24576:\n            case 4096:\n            case 49152:\n              break;\n            default:\n              return -28;\n          }\n          FS.mknod(path, mode, dev);\n          return 0;\n        }, doReadlink: function(path, buf, bufsize) {\n          if (bufsize <= 0)\n            return -28;\n          var ret = FS.readlink(path);\n          var len = Math.min(bufsize, lengthBytesUTF8(ret));\n          var endChar = HEAP8[buf + len >>> 0];\n          stringToUTF8(ret, buf, bufsize + 1);\n          HEAP8[buf + len >>> 0] = endChar;\n          return len;\n        }, doAccess: function(path, amode) {\n          if (amode & ~7) {\n            return -28;\n          }\n          var node;\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n          if (!node) {\n            return -44;\n          }\n          var perms = \"\";\n          if (amode & 4)\n            perms += \"r\";\n          if (amode & 2)\n            perms += \"w\";\n          if (amode & 1)\n            perms += \"x\";\n          if (perms && FS.nodePermissions(node, perms)) {\n            return -2;\n          }\n          return 0;\n        }, doDup: function(path, flags, suggestFD) {\n          var suggest = FS.getStream(suggestFD);\n          if (suggest)\n            FS.close(suggest);\n          return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\n        }, doReadv: function(stream, iov, iovcnt, offset) {\n          var ret = 0;\n          for (var i = 0; i < iovcnt; i++) {\n            var ptr = HEAP32[iov + i * 8 >>> 2];\n            var len = HEAP32[iov + (i * 8 + 4) >>> 2];\n            var curr = FS.read(stream, HEAP8, ptr, len, offset);\n            if (curr < 0)\n              return -1;\n            ret += curr;\n            if (curr < len)\n              break;\n          }\n          return ret;\n        }, doWritev: function(stream, iov, iovcnt, offset) {\n          var ret = 0;\n          for (var i = 0; i < iovcnt; i++) {\n            var ptr = HEAP32[iov + i * 8 >>> 2];\n            var len = HEAP32[iov + (i * 8 + 4) >>> 2];\n            var curr = FS.write(stream, HEAP8, ptr, len, offset);\n            if (curr < 0)\n              return -1;\n            ret += curr;\n          }\n          return ret;\n        }, varargs: void 0, get: function() {\n          SYSCALLS.varargs += 4;\n          var ret = HEAP32[SYSCALLS.varargs - 4 >>> 2];\n          return ret;\n        }, getStr: function(ptr) {\n          var ret = UTF8ToString(ptr);\n          return ret;\n        }, getStreamFromFD: function(fd) {\n          var stream = FS.getStream(fd);\n          if (!stream)\n            throw new FS.ErrnoError(8);\n          return stream;\n        }, get64: function(low, high) {\n          return low;\n        } };\n        function ___sys_fcntl64(fd, cmd, varargs) {\n          SYSCALLS.varargs = varargs;\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            switch (cmd) {\n              case 0: {\n                var arg = SYSCALLS.get();\n                if (arg < 0) {\n                  return -28;\n                }\n                var newStream;\n                newStream = FS.open(stream.path, stream.flags, 0, arg);\n                return newStream.fd;\n              }\n              case 1:\n              case 2:\n                return 0;\n              case 3:\n                return stream.flags;\n              case 4: {\n                var arg = SYSCALLS.get();\n                stream.flags |= arg;\n                return 0;\n              }\n              case 12: {\n                var arg = SYSCALLS.get();\n                var offset = 0;\n                HEAP16[arg + offset >>> 1] = 2;\n                return 0;\n              }\n              case 13:\n              case 14:\n                return 0;\n              case 16:\n              case 8:\n                return -28;\n              case 9:\n                setErrNo(28);\n                return -1;\n              default: {\n                return -28;\n              }\n            }\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        function ___sys_ioctl(fd, op, varargs) {\n          SYSCALLS.varargs = varargs;\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            switch (op) {\n              case 21509:\n              case 21505: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21510:\n              case 21511:\n              case 21512:\n              case 21506:\n              case 21507:\n              case 21508: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21519: {\n                if (!stream.tty)\n                  return -59;\n                var argp = SYSCALLS.get();\n                HEAP32[argp >>> 2] = 0;\n                return 0;\n              }\n              case 21520: {\n                if (!stream.tty)\n                  return -59;\n                return -28;\n              }\n              case 21531: {\n                var argp = SYSCALLS.get();\n                return FS.ioctl(stream, op, argp);\n              }\n              case 21523: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21524: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              default:\n                abort(\"bad ioctl syscall \" + op);\n            }\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        function ___sys_open(path, flags, varargs) {\n          SYSCALLS.varargs = varargs;\n          try {\n            var pathname = SYSCALLS.getStr(path);\n            var mode = varargs ? SYSCALLS.get() : 0;\n            var stream = FS.open(pathname, flags, mode);\n            return stream.fd;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        var tupleRegistrations = {};\n        function runDestructors(destructors) {\n          while (destructors.length) {\n            var ptr = destructors.pop();\n            var del = destructors.pop();\n            del(ptr);\n          }\n        }\n        function simpleReadValueFromPointer(pointer) {\n          return this[\"fromWireType\"](HEAPU32[pointer >>> 2]);\n        }\n        var awaitingDependencies = {};\n        var registeredTypes = {};\n        var typeDependencies = {};\n        var char_0 = 48;\n        var char_9 = 57;\n        function makeLegalFunctionName(name2) {\n          if (name2 === void 0) {\n            return \"_unknown\";\n          }\n          name2 = name2.replace(/[^a-zA-Z0-9_]/g, \"$\");\n          var f = name2.charCodeAt(0);\n          if (f >= char_0 && f <= char_9) {\n            return \"_\" + name2;\n          } else {\n            return name2;\n          }\n        }\n        function createNamedFunction(name2, body) {\n          name2 = makeLegalFunctionName(name2);\n          return new Function(\"body\", \"return function \" + name2 + '() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n')(body);\n        }\n        function extendError(baseErrorType, errorName) {\n          var errorClass = createNamedFunction(errorName, function(message) {\n            this.name = errorName;\n            this.message = message;\n            var stack = new Error(message).stack;\n            if (stack !== void 0) {\n              this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n            }\n          });\n          errorClass.prototype = Object.create(baseErrorType.prototype);\n          errorClass.prototype.constructor = errorClass;\n          errorClass.prototype.toString = function() {\n            if (this.message === void 0) {\n              return this.name;\n            } else {\n              return this.name + \": \" + this.message;\n            }\n          };\n          return errorClass;\n        }\n        var InternalError = void 0;\n        function throwInternalError(message) {\n          throw new InternalError(message);\n        }\n        function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n          myTypes.forEach(function(type) {\n            typeDependencies[type] = dependentTypes;\n          });\n          function onComplete(typeConverters2) {\n            var myTypeConverters = getTypeConverters(typeConverters2);\n            if (myTypeConverters.length !== myTypes.length) {\n              throwInternalError(\"Mismatched type converter count\");\n            }\n            for (var i = 0; i < myTypes.length; ++i) {\n              registerType(myTypes[i], myTypeConverters[i]);\n            }\n          }\n          var typeConverters = new Array(dependentTypes.length);\n          var unregisteredTypes = [];\n          var registered = 0;\n          dependentTypes.forEach(function(dt, i) {\n            if (registeredTypes.hasOwnProperty(dt)) {\n              typeConverters[i] = registeredTypes[dt];\n            } else {\n              unregisteredTypes.push(dt);\n              if (!awaitingDependencies.hasOwnProperty(dt)) {\n                awaitingDependencies[dt] = [];\n              }\n              awaitingDependencies[dt].push(function() {\n                typeConverters[i] = registeredTypes[dt];\n                ++registered;\n                if (registered === unregisteredTypes.length) {\n                  onComplete(typeConverters);\n                }\n              });\n            }\n          });\n          if (unregisteredTypes.length === 0) {\n            onComplete(typeConverters);\n          }\n        }\n        function __embind_finalize_value_array(rawTupleType) {\n          var reg = tupleRegistrations[rawTupleType];\n          delete tupleRegistrations[rawTupleType];\n          var elements = reg.elements;\n          var elementsLength = elements.length;\n          var elementTypes = elements.map(function(elt) {\n            return elt.getterReturnType;\n          }).concat(elements.map(function(elt) {\n            return elt.setterArgumentType;\n          }));\n          var rawConstructor = reg.rawConstructor;\n          var rawDestructor = reg.rawDestructor;\n          whenDependentTypesAreResolved([rawTupleType], elementTypes, function(elementTypes2) {\n            elements.forEach(function(elt, i) {\n              var getterReturnType = elementTypes2[i];\n              var getter = elt.getter;\n              var getterContext = elt.getterContext;\n              var setterArgumentType = elementTypes2[i + elementsLength];\n              var setter = elt.setter;\n              var setterContext = elt.setterContext;\n              elt.read = function(ptr) {\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n              };\n              elt.write = function(ptr, o) {\n                var destructors = [];\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n                runDestructors(destructors);\n              };\n            });\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\n              var rv = new Array(elementsLength);\n              for (var i = 0; i < elementsLength; ++i) {\n                rv[i] = elements[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            }, \"toWireType\": function(destructors, o) {\n              if (elementsLength !== o.length) {\n                throw new TypeError(\"Incorrect number of tuple elements for \" + reg.name + \": expected=\" + elementsLength + \", actual=\" + o.length);\n              }\n              var ptr = rawConstructor();\n              for (var i = 0; i < elementsLength; ++i) {\n                elements[i].write(ptr, o[i]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\n          });\n        }\n        var structRegistrations = {};\n        function __embind_finalize_value_object(structType) {\n          var reg = structRegistrations[structType];\n          delete structRegistrations[structType];\n          var rawConstructor = reg.rawConstructor;\n          var rawDestructor = reg.rawDestructor;\n          var fieldRecords = reg.fields;\n          var fieldTypes = fieldRecords.map(function(field) {\n            return field.getterReturnType;\n          }).concat(fieldRecords.map(function(field) {\n            return field.setterArgumentType;\n          }));\n          whenDependentTypesAreResolved([structType], fieldTypes, function(fieldTypes2) {\n            var fields = {};\n            fieldRecords.forEach(function(field, i) {\n              var fieldName = field.fieldName;\n              var getterReturnType = fieldTypes2[i];\n              var getter = field.getter;\n              var getterContext = field.getterContext;\n              var setterArgumentType = fieldTypes2[i + fieldRecords.length];\n              var setter = field.setter;\n              var setterContext = field.setterContext;\n              fields[fieldName] = { read: function(ptr) {\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n              }, write: function(ptr, o) {\n                var destructors = [];\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n                runDestructors(destructors);\n              } };\n            });\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\n              var rv = {};\n              for (var i in fields) {\n                rv[i] = fields[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            }, \"toWireType\": function(destructors, o) {\n              for (var fieldName in fields) {\n                if (!(fieldName in o)) {\n                  throw new TypeError('Missing field:  \"' + fieldName + '\"');\n                }\n              }\n              var ptr = rawConstructor();\n              for (fieldName in fields) {\n                fields[fieldName].write(ptr, o[fieldName]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\n          });\n        }\n        function __embind_register_bigint(primitiveType, name2, size, minRange, maxRange) {\n        }\n        function getShiftFromSize(size) {\n          switch (size) {\n            case 1:\n              return 0;\n            case 2:\n              return 1;\n            case 4:\n              return 2;\n            case 8:\n              return 3;\n            default:\n              throw new TypeError(\"Unknown type size: \" + size);\n          }\n        }\n        function embind_init_charCodes() {\n          var codes = new Array(256);\n          for (var i = 0; i < 256; ++i) {\n            codes[i] = String.fromCharCode(i);\n          }\n          embind_charCodes = codes;\n        }\n        var embind_charCodes = void 0;\n        function readLatin1String(ptr) {\n          var ret = \"\";\n          var c = ptr;\n          while (HEAPU8[c >>> 0]) {\n            ret += embind_charCodes[HEAPU8[c++ >>> 0]];\n          }\n          return ret;\n        }\n        var BindingError = void 0;\n        function throwBindingError(message) {\n          throw new BindingError(message);\n        }\n        function registerType(rawType, registeredInstance, options) {\n          options = options || {};\n          if (!(\"argPackAdvance\" in registeredInstance)) {\n            throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n          }\n          var name2 = registeredInstance.name;\n          if (!rawType) {\n            throwBindingError('type \"' + name2 + '\" must have a positive integer typeid pointer');\n          }\n          if (registeredTypes.hasOwnProperty(rawType)) {\n            if (options.ignoreDuplicateRegistrations) {\n              return;\n            } else {\n              throwBindingError(\"Cannot register type '\" + name2 + \"' twice\");\n            }\n          }\n          registeredTypes[rawType] = registeredInstance;\n          delete typeDependencies[rawType];\n          if (awaitingDependencies.hasOwnProperty(rawType)) {\n            var callbacks = awaitingDependencies[rawType];\n            delete awaitingDependencies[rawType];\n            callbacks.forEach(function(cb) {\n              cb();\n            });\n          }\n        }\n        function __embind_register_bool(rawType, name2, size, trueValue, falseValue) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(wt) {\n            return !!wt;\n          }, \"toWireType\": function(destructors, o) {\n            return o ? trueValue : falseValue;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": function(pointer) {\n            var heap;\n            if (size === 1) {\n              heap = HEAP8;\n            } else if (size === 2) {\n              heap = HEAP16;\n            } else if (size === 4) {\n              heap = HEAP32;\n            } else {\n              throw new TypeError(\"Unknown boolean type size: \" + name2);\n            }\n            return this[\"fromWireType\"](heap[pointer >>> shift]);\n          }, destructorFunction: null });\n        }\n        function ClassHandle_isAliasOf(other) {\n          if (!(this instanceof ClassHandle)) {\n            return false;\n          }\n          if (!(other instanceof ClassHandle)) {\n            return false;\n          }\n          var leftClass = this.$$.ptrType.registeredClass;\n          var left = this.$$.ptr;\n          var rightClass = other.$$.ptrType.registeredClass;\n          var right = other.$$.ptr;\n          while (leftClass.baseClass) {\n            left = leftClass.upcast(left);\n            leftClass = leftClass.baseClass;\n          }\n          while (rightClass.baseClass) {\n            right = rightClass.upcast(right);\n            rightClass = rightClass.baseClass;\n          }\n          return leftClass === rightClass && left === right;\n        }\n        function shallowCopyInternalPointer(o) {\n          return { count: o.count, deleteScheduled: o.deleteScheduled, preservePointerOnDelete: o.preservePointerOnDelete, ptr: o.ptr, ptrType: o.ptrType, smartPtr: o.smartPtr, smartPtrType: o.smartPtrType };\n        }\n        function throwInstanceAlreadyDeleted(obj) {\n          function getInstanceTypeName(handle) {\n            return handle.$$.ptrType.registeredClass.name;\n          }\n          throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n        }\n        var finalizationGroup = false;\n        function detachFinalizer(handle) {\n        }\n        function runDestructor($$) {\n          if ($$.smartPtr) {\n            $$.smartPtrType.rawDestructor($$.smartPtr);\n          } else {\n            $$.ptrType.registeredClass.rawDestructor($$.ptr);\n          }\n        }\n        function releaseClassHandle($$) {\n          $$.count.value -= 1;\n          var toDelete = $$.count.value === 0;\n          if (toDelete) {\n            runDestructor($$);\n          }\n        }\n        function attachFinalizer(handle) {\n          if (typeof FinalizationGroup === \"undefined\") {\n            attachFinalizer = function(handle2) {\n              return handle2;\n            };\n            return handle;\n          }\n          finalizationGroup = new FinalizationGroup(function(iter) {\n            for (var result = iter.next(); !result.done; result = iter.next()) {\n              var $$ = result.value;\n              if (!$$.ptr) {\n                console.warn(\"object already deleted: \" + $$.ptr);\n              } else {\n                releaseClassHandle($$);\n              }\n            }\n          });\n          attachFinalizer = function(handle2) {\n            finalizationGroup.register(handle2, handle2.$$, handle2.$$);\n            return handle2;\n          };\n          detachFinalizer = function(handle2) {\n            finalizationGroup.unregister(handle2.$$);\n          };\n          return attachFinalizer(handle);\n        }\n        function ClassHandle_clone() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.preservePointerOnDelete) {\n            this.$$.count.value += 1;\n            return this;\n          } else {\n            var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), { $$: { value: shallowCopyInternalPointer(this.$$) } }));\n            clone.$$.count.value += 1;\n            clone.$$.deleteScheduled = false;\n            return clone;\n          }\n        }\n        function ClassHandle_delete() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          detachFinalizer(this);\n          releaseClassHandle(this.$$);\n          if (!this.$$.preservePointerOnDelete) {\n            this.$$.smartPtr = void 0;\n            this.$$.ptr = void 0;\n          }\n        }\n        function ClassHandle_isDeleted() {\n          return !this.$$.ptr;\n        }\n        var delayFunction = void 0;\n        var deletionQueue = [];\n        function flushPendingDeletes() {\n          while (deletionQueue.length) {\n            var obj = deletionQueue.pop();\n            obj.$$.deleteScheduled = false;\n            obj[\"delete\"]();\n          }\n        }\n        function ClassHandle_deleteLater() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          deletionQueue.push(this);\n          if (deletionQueue.length === 1 && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n          this.$$.deleteScheduled = true;\n          return this;\n        }\n        function init_ClassHandle() {\n          ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\n          ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\n          ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\n          ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\n          ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater;\n        }\n        function ClassHandle() {\n        }\n        var registeredPointers = {};\n        function ensureOverloadTable(proto, methodName, humanName) {\n          if (proto[methodName].overloadTable === void 0) {\n            var prevFunc = proto[methodName];\n            proto[methodName] = function() {\n              if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n                throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n              }\n              return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n            };\n            proto[methodName].overloadTable = [];\n            proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n          }\n        }\n        function exposePublicSymbol(name2, value, numArguments) {\n          if (Module.hasOwnProperty(name2)) {\n            if (numArguments === void 0 || Module[name2].overloadTable !== void 0 && Module[name2].overloadTable[numArguments] !== void 0) {\n              throwBindingError(\"Cannot register public name '\" + name2 + \"' twice\");\n            }\n            ensureOverloadTable(Module, name2, name2);\n            if (Module.hasOwnProperty(numArguments)) {\n              throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n            }\n            Module[name2].overloadTable[numArguments] = value;\n          } else {\n            Module[name2] = value;\n            if (numArguments !== void 0) {\n              Module[name2].numArguments = numArguments;\n            }\n          }\n        }\n        function RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n          this.name = name2;\n          this.constructor = constructor;\n          this.instancePrototype = instancePrototype;\n          this.rawDestructor = rawDestructor;\n          this.baseClass = baseClass;\n          this.getActualType = getActualType;\n          this.upcast = upcast;\n          this.downcast = downcast;\n          this.pureVirtualFunctions = [];\n        }\n        function upcastPointer(ptr, ptrClass, desiredClass) {\n          while (ptrClass !== desiredClass) {\n            if (!ptrClass.upcast) {\n              throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\n            }\n            ptr = ptrClass.upcast(ptr);\n            ptrClass = ptrClass.baseClass;\n          }\n          return ptr;\n        }\n        function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            return 0;\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          return ptr;\n        }\n        function genericPointerToWireType(destructors, handle) {\n          var ptr;\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            if (this.isSmartPointer) {\n              ptr = this.rawConstructor();\n              if (destructors !== null) {\n                destructors.push(this.rawDestructor, ptr);\n              }\n              return ptr;\n            } else {\n              return 0;\n            }\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          if (!this.isConst && handle.$$.ptrType.isConst) {\n            throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          if (this.isSmartPointer) {\n            if (handle.$$.smartPtr === void 0) {\n              throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n            }\n            switch (this.sharingPolicy) {\n              case 0:\n                if (handle.$$.smartPtrType === this) {\n                  ptr = handle.$$.smartPtr;\n                } else {\n                  throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n                }\n                break;\n              case 1:\n                ptr = handle.$$.smartPtr;\n                break;\n              case 2:\n                if (handle.$$.smartPtrType === this) {\n                  ptr = handle.$$.smartPtr;\n                } else {\n                  var clonedHandle = handle[\"clone\"]();\n                  ptr = this.rawShare(ptr, __emval_register(function() {\n                    clonedHandle[\"delete\"]();\n                  }));\n                  if (destructors !== null) {\n                    destructors.push(this.rawDestructor, ptr);\n                  }\n                }\n                break;\n              default:\n                throwBindingError(\"Unsupporting sharing policy\");\n            }\n          }\n          return ptr;\n        }\n        function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            return 0;\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          if (handle.$$.ptrType.isConst) {\n            throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          return ptr;\n        }\n        function RegisteredPointer_getPointee(ptr) {\n          if (this.rawGetPointee) {\n            ptr = this.rawGetPointee(ptr);\n          }\n          return ptr;\n        }\n        function RegisteredPointer_destructor(ptr) {\n          if (this.rawDestructor) {\n            this.rawDestructor(ptr);\n          }\n        }\n        function RegisteredPointer_deleteObject(handle) {\n          if (handle !== null) {\n            handle[\"delete\"]();\n          }\n        }\n        function downcastPointer(ptr, ptrClass, desiredClass) {\n          if (ptrClass === desiredClass) {\n            return ptr;\n          }\n          if (desiredClass.baseClass === void 0) {\n            return null;\n          }\n          var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n          if (rv === null) {\n            return null;\n          }\n          return desiredClass.downcast(rv);\n        }\n        function getInheritedInstanceCount() {\n          return Object.keys(registeredInstances).length;\n        }\n        function getLiveInheritedInstances() {\n          var rv = [];\n          for (var k in registeredInstances) {\n            if (registeredInstances.hasOwnProperty(k)) {\n              rv.push(registeredInstances[k]);\n            }\n          }\n          return rv;\n        }\n        function setDelayFunction(fn) {\n          delayFunction = fn;\n          if (deletionQueue.length && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n        }\n        function init_embind() {\n          Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n          Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n          Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n          Module[\"setDelayFunction\"] = setDelayFunction;\n        }\n        var registeredInstances = {};\n        function getBasestPointer(class_, ptr) {\n          if (ptr === void 0) {\n            throwBindingError(\"ptr should not be undefined\");\n          }\n          while (class_.baseClass) {\n            ptr = class_.upcast(ptr);\n            class_ = class_.baseClass;\n          }\n          return ptr;\n        }\n        function getInheritedInstance(class_, ptr) {\n          ptr = getBasestPointer(class_, ptr);\n          return registeredInstances[ptr];\n        }\n        function makeClassHandle(prototype, record) {\n          if (!record.ptrType || !record.ptr) {\n            throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n          }\n          var hasSmartPtrType = !!record.smartPtrType;\n          var hasSmartPtr = !!record.smartPtr;\n          if (hasSmartPtrType !== hasSmartPtr) {\n            throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n          }\n          record.count = { value: 1 };\n          return attachFinalizer(Object.create(prototype, { $$: { value: record } }));\n        }\n        function RegisteredPointer_fromWireType(ptr) {\n          var rawPointer = this.getPointee(ptr);\n          if (!rawPointer) {\n            this.destructor(ptr);\n            return null;\n          }\n          var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n          if (registeredInstance !== void 0) {\n            if (registeredInstance.$$.count.value === 0) {\n              registeredInstance.$$.ptr = rawPointer;\n              registeredInstance.$$.smartPtr = ptr;\n              return registeredInstance[\"clone\"]();\n            } else {\n              var rv = registeredInstance[\"clone\"]();\n              this.destructor(ptr);\n              return rv;\n            }\n          }\n          function makeDefaultHandle() {\n            if (this.isSmartPointer) {\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this.pointeeType, ptr: rawPointer, smartPtrType: this, smartPtr: ptr });\n            } else {\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this, ptr });\n            }\n          }\n          var actualType = this.registeredClass.getActualType(rawPointer);\n          var registeredPointerRecord = registeredPointers[actualType];\n          if (!registeredPointerRecord) {\n            return makeDefaultHandle.call(this);\n          }\n          var toType;\n          if (this.isConst) {\n            toType = registeredPointerRecord.constPointerType;\n          } else {\n            toType = registeredPointerRecord.pointerType;\n          }\n          var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n          if (dp === null) {\n            return makeDefaultHandle.call(this);\n          }\n          if (this.isSmartPointer) {\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp, smartPtrType: this, smartPtr: ptr });\n          } else {\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp });\n          }\n        }\n        function init_RegisteredPointer() {\n          RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n          RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n          RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\n          RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\n          RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\n          RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType;\n        }\n        function RegisteredPointer(name2, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n          this.name = name2;\n          this.registeredClass = registeredClass;\n          this.isReference = isReference;\n          this.isConst = isConst;\n          this.isSmartPointer = isSmartPointer;\n          this.pointeeType = pointeeType;\n          this.sharingPolicy = sharingPolicy;\n          this.rawGetPointee = rawGetPointee;\n          this.rawConstructor = rawConstructor;\n          this.rawShare = rawShare;\n          this.rawDestructor = rawDestructor;\n          if (!isSmartPointer && registeredClass.baseClass === void 0) {\n            if (isConst) {\n              this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n            } else {\n              this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n            }\n          } else {\n            this[\"toWireType\"] = genericPointerToWireType;\n          }\n        }\n        function replacePublicSymbol(name2, value, numArguments) {\n          if (!Module.hasOwnProperty(name2)) {\n            throwInternalError(\"Replacing nonexistant public symbol\");\n          }\n          if (Module[name2].overloadTable !== void 0 && numArguments !== void 0) {\n            Module[name2].overloadTable[numArguments] = value;\n          } else {\n            Module[name2] = value;\n            Module[name2].argCount = numArguments;\n          }\n        }\n        function dynCallLegacy(sig, ptr, args) {\n          var f = Module[\"dynCall_\" + sig];\n          return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\n        }\n        function dynCall(sig, ptr, args) {\n          if (sig.includes(\"j\")) {\n            return dynCallLegacy(sig, ptr, args);\n          }\n          return wasmTable.get(ptr).apply(null, args);\n        }\n        function getDynCaller(sig, ptr) {\n          var argCache = [];\n          return function() {\n            argCache.length = arguments.length;\n            for (var i = 0; i < arguments.length; i++) {\n              argCache[i] = arguments[i];\n            }\n            return dynCall(sig, ptr, argCache);\n          };\n        }\n        function embind__requireFunction(signature, rawFunction) {\n          signature = readLatin1String(signature);\n          function makeDynCaller() {\n            if (signature.includes(\"j\")) {\n              return getDynCaller(signature, rawFunction);\n            }\n            return wasmTable.get(rawFunction);\n          }\n          var fp = makeDynCaller();\n          if (typeof fp !== \"function\") {\n            throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n          }\n          return fp;\n        }\n        var UnboundTypeError = void 0;\n        function getTypeName(type) {\n          var ptr = ___getTypeName(type);\n          var rv = readLatin1String(ptr);\n          _free(ptr);\n          return rv;\n        }\n        function throwUnboundTypeError(message, types) {\n          var unboundTypes = [];\n          var seen = {};\n          function visit(type) {\n            if (seen[type]) {\n              return;\n            }\n            if (registeredTypes[type]) {\n              return;\n            }\n            if (typeDependencies[type]) {\n              typeDependencies[type].forEach(visit);\n              return;\n            }\n            unboundTypes.push(type);\n            seen[type] = true;\n          }\n          types.forEach(visit);\n          throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([\", \"]));\n        }\n        function __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name2, destructorSignature, rawDestructor) {\n          name2 = readLatin1String(name2);\n          getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n          if (upcast) {\n            upcast = embind__requireFunction(upcastSignature, upcast);\n          }\n          if (downcast) {\n            downcast = embind__requireFunction(downcastSignature, downcast);\n          }\n          rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n          var legalFunctionName = makeLegalFunctionName(name2);\n          exposePublicSymbol(legalFunctionName, function() {\n            throwUnboundTypeError(\"Cannot construct \" + name2 + \" due to unbound types\", [baseClassRawType]);\n          });\n          whenDependentTypesAreResolved([rawType, rawPointerType, rawConstPointerType], baseClassRawType ? [baseClassRawType] : [], function(base) {\n            base = base[0];\n            var baseClass;\n            var basePrototype;\n            if (baseClassRawType) {\n              baseClass = base.registeredClass;\n              basePrototype = baseClass.instancePrototype;\n            } else {\n              basePrototype = ClassHandle.prototype;\n            }\n            var constructor = createNamedFunction(legalFunctionName, function() {\n              if (Object.getPrototypeOf(this) !== instancePrototype) {\n                throw new BindingError(\"Use 'new' to construct \" + name2);\n              }\n              if (registeredClass.constructor_body === void 0) {\n                throw new BindingError(name2 + \" has no accessible constructor\");\n              }\n              var body = registeredClass.constructor_body[arguments.length];\n              if (body === void 0) {\n                throw new BindingError(\"Tried to invoke ctor of \" + name2 + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\n              }\n              return body.apply(this, arguments);\n            });\n            var instancePrototype = Object.create(basePrototype, { constructor: { value: constructor } });\n            constructor.prototype = instancePrototype;\n            var registeredClass = new RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n            var referenceConverter = new RegisteredPointer(name2, registeredClass, true, false, false);\n            var pointerConverter = new RegisteredPointer(name2 + \"*\", registeredClass, false, false, false);\n            var constPointerConverter = new RegisteredPointer(name2 + \" const*\", registeredClass, false, true, false);\n            registeredPointers[rawType] = { pointerType: pointerConverter, constPointerType: constPointerConverter };\n            replacePublicSymbol(legalFunctionName, constructor);\n            return [referenceConverter, pointerConverter, constPointerConverter];\n          });\n        }\n        function heap32VectorToArray(count, firstElement) {\n          var array = [];\n          for (var i = 0; i < count; i++) {\n            array.push(HEAP32[(firstElement >> 2) + i >>> 0]);\n          }\n          return array;\n        }\n        function __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n          assert(argCount > 0);\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          invoker = embind__requireFunction(invokerSignature, invoker);\n          var args = [rawConstructor];\n          var destructors = [];\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n            classType = classType[0];\n            var humanName = \"constructor \" + classType.name;\n            if (classType.registeredClass.constructor_body === void 0) {\n              classType.registeredClass.constructor_body = [];\n            }\n            if (classType.registeredClass.constructor_body[argCount - 1] !== void 0) {\n              throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n            }\n            classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {\n              throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes);\n            };\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n              classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {\n                if (arguments.length !== argCount - 1) {\n                  throwBindingError(humanName + \" called with \" + arguments.length + \" arguments, expected \" + (argCount - 1));\n                }\n                destructors.length = 0;\n                args.length = argCount;\n                for (var i = 1; i < argCount; ++i) {\n                  args[i] = argTypes[i][\"toWireType\"](destructors, arguments[i - 1]);\n                }\n                var ptr = invoker.apply(null, args);\n                runDestructors(destructors);\n                return argTypes[0][\"fromWireType\"](ptr);\n              };\n              return [];\n            });\n            return [];\n          });\n        }\n        function new_(constructor, argumentList) {\n          if (!(constructor instanceof Function)) {\n            throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n          }\n          var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {\n          });\n          dummy.prototype = constructor.prototype;\n          var obj = new dummy();\n          var r = constructor.apply(obj, argumentList);\n          return r instanceof Object ? r : obj;\n        }\n        function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n          var argCount = argTypes.length;\n          if (argCount < 2) {\n            throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n          }\n          var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n          var needsDestructorStack = false;\n          for (var i = 1; i < argTypes.length; ++i) {\n            if (argTypes[i] !== null && argTypes[i].destructorFunction === void 0) {\n              needsDestructorStack = true;\n              break;\n            }\n          }\n          var returns = argTypes[0].name !== \"void\";\n          var argsList = \"\";\n          var argsListWired = \"\";\n          for (var i = 0; i < argCount - 2; ++i) {\n            argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n            argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n          }\n          var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\nif (arguments.length !== \" + (argCount - 2) + \") {\\nthrowBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n}\\n\";\n          if (needsDestructorStack) {\n            invokerFnBody += \"var destructors = [];\\n\";\n          }\n          var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n          var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n          var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n          if (isClassMethodFunc) {\n            invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n          }\n          for (var i = 0; i < argCount - 2; ++i) {\n            invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n            args1.push(\"argType\" + i);\n            args2.push(argTypes[i + 2]);\n          }\n          if (isClassMethodFunc) {\n            argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n          }\n          invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n          if (needsDestructorStack) {\n            invokerFnBody += \"runDestructors(destructors);\\n\";\n          } else {\n            for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n              var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n              if (argTypes[i].destructorFunction !== null) {\n                invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n                args1.push(paramName + \"_dtor\");\n                args2.push(argTypes[i].destructorFunction);\n              }\n            }\n          }\n          if (returns) {\n            invokerFnBody += \"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\";\n          } else {\n          }\n          invokerFnBody += \"}\\n\";\n          args1.push(invokerFnBody);\n          var invokerFunction = new_(Function, args1).apply(null, args2);\n          return invokerFunction;\n        }\n        function __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          methodName = readLatin1String(methodName);\n          rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n            classType = classType[0];\n            var humanName = classType.name + \".\" + methodName;\n            if (methodName.startsWith(\"@@\")) {\n              methodName = Symbol[methodName.substring(2)];\n            }\n            if (isPureVirtual) {\n              classType.registeredClass.pureVirtualFunctions.push(methodName);\n            }\n            function unboundTypesHandler() {\n              throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n            }\n            var proto = classType.registeredClass.instancePrototype;\n            var method = proto[methodName];\n            if (method === void 0 || method.overloadTable === void 0 && method.className !== classType.name && method.argCount === argCount - 2) {\n              unboundTypesHandler.argCount = argCount - 2;\n              unboundTypesHandler.className = classType.name;\n              proto[methodName] = unboundTypesHandler;\n            } else {\n              ensureOverloadTable(proto, methodName, humanName);\n              proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n            }\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n              var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\n              if (proto[methodName].overloadTable === void 0) {\n                memberFunction.argCount = argCount - 2;\n                proto[methodName] = memberFunction;\n              } else {\n                proto[methodName].overloadTable[argCount - 2] = memberFunction;\n              }\n              return [];\n            });\n            return [];\n          });\n        }\n        var emval_free_list = [];\n        var emval_handle_array = [{}, { value: void 0 }, { value: null }, { value: true }, { value: false }];\n        function __emval_decref(handle) {\n          if (handle > 4 && --emval_handle_array[handle].refcount === 0) {\n            emval_handle_array[handle] = void 0;\n            emval_free_list.push(handle);\n          }\n        }\n        function count_emval_handles() {\n          var count = 0;\n          for (var i = 5; i < emval_handle_array.length; ++i) {\n            if (emval_handle_array[i] !== void 0) {\n              ++count;\n            }\n          }\n          return count;\n        }\n        function get_first_emval() {\n          for (var i = 5; i < emval_handle_array.length; ++i) {\n            if (emval_handle_array[i] !== void 0) {\n              return emval_handle_array[i];\n            }\n          }\n          return null;\n        }\n        function init_emval() {\n          Module[\"count_emval_handles\"] = count_emval_handles;\n          Module[\"get_first_emval\"] = get_first_emval;\n        }\n        function __emval_register(value) {\n          switch (value) {\n            case void 0: {\n              return 1;\n            }\n            case null: {\n              return 2;\n            }\n            case true: {\n              return 3;\n            }\n            case false: {\n              return 4;\n            }\n            default: {\n              var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n              emval_handle_array[handle] = { refcount: 1, value };\n              return handle;\n            }\n          }\n        }\n        function __embind_register_emval(rawType, name2) {\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(handle) {\n            var rv = emval_handle_array[handle].value;\n            __emval_decref(handle);\n            return rv;\n          }, \"toWireType\": function(destructors, value) {\n            return __emval_register(value);\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: null });\n        }\n        function enumReadValueFromPointer(name2, shift, signed) {\n          switch (shift) {\n            case 0:\n              return function(pointer) {\n                var heap = signed ? HEAP8 : HEAPU8;\n                return this[\"fromWireType\"](heap[pointer >>> 0]);\n              };\n            case 1:\n              return function(pointer) {\n                var heap = signed ? HEAP16 : HEAPU16;\n                return this[\"fromWireType\"](heap[pointer >>> 1]);\n              };\n            case 2:\n              return function(pointer) {\n                var heap = signed ? HEAP32 : HEAPU32;\n                return this[\"fromWireType\"](heap[pointer >>> 2]);\n              };\n            default:\n              throw new TypeError(\"Unknown integer type: \" + name2);\n          }\n        }\n        function __embind_register_enum(rawType, name2, size, isSigned) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          function ctor() {\n          }\n          ctor.values = {};\n          registerType(rawType, { name: name2, constructor: ctor, \"fromWireType\": function(c) {\n            return this.constructor.values[c];\n          }, \"toWireType\": function(destructors, c) {\n            return c.value;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": enumReadValueFromPointer(name2, shift, isSigned), destructorFunction: null });\n          exposePublicSymbol(name2, ctor);\n        }\n        function requireRegisteredType(rawType, humanName) {\n          var impl = registeredTypes[rawType];\n          if (impl === void 0) {\n            throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n          }\n          return impl;\n        }\n        function __embind_register_enum_value(rawEnumType, name2, enumValue) {\n          var enumType = requireRegisteredType(rawEnumType, \"enum\");\n          name2 = readLatin1String(name2);\n          var Enum = enumType.constructor;\n          var Value2 = Object.create(enumType.constructor.prototype, { value: { value: enumValue }, constructor: { value: createNamedFunction(enumType.name + \"_\" + name2, function() {\n          }) } });\n          Enum.values[enumValue] = Value2;\n          Enum[name2] = Value2;\n        }\n        function _embind_repr(v) {\n          if (v === null) {\n            return \"null\";\n          }\n          var t = typeof v;\n          if (t === \"object\" || t === \"array\" || t === \"function\") {\n            return v.toString();\n          } else {\n            return \"\" + v;\n          }\n        }\n        function floatReadValueFromPointer(name2, shift) {\n          switch (shift) {\n            case 2:\n              return function(pointer) {\n                return this[\"fromWireType\"](HEAPF32[pointer >>> 2]);\n              };\n            case 3:\n              return function(pointer) {\n                return this[\"fromWireType\"](HEAPF64[pointer >>> 3]);\n              };\n            default:\n              throw new TypeError(\"Unknown float type: \" + name2);\n          }\n        }\n        function __embind_register_float(rawType, name2, size) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            return value;\n          }, \"toWireType\": function(destructors, value) {\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n            }\n            return value;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": floatReadValueFromPointer(name2, shift), destructorFunction: null });\n        }\n        function __embind_register_function(name2, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {\n          var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          name2 = readLatin1String(name2);\n          rawInvoker = embind__requireFunction(signature, rawInvoker);\n          exposePublicSymbol(name2, function() {\n            throwUnboundTypeError(\"Cannot call \" + name2 + \" due to unbound types\", argTypes);\n          }, argCount - 1);\n          whenDependentTypesAreResolved([], argTypes, function(argTypes2) {\n            var invokerArgsArray = [argTypes2[0], null].concat(argTypes2.slice(1));\n            replacePublicSymbol(name2, craftInvokerFunction(name2, invokerArgsArray, null, rawInvoker, fn), argCount - 1);\n            return [];\n          });\n        }\n        function integerReadValueFromPointer(name2, shift, signed) {\n          switch (shift) {\n            case 0:\n              return signed ? function readS8FromPointer(pointer) {\n                return HEAP8[pointer >>> 0];\n              } : function readU8FromPointer(pointer) {\n                return HEAPU8[pointer >>> 0];\n              };\n            case 1:\n              return signed ? function readS16FromPointer(pointer) {\n                return HEAP16[pointer >>> 1];\n              } : function readU16FromPointer(pointer) {\n                return HEAPU16[pointer >>> 1];\n              };\n            case 2:\n              return signed ? function readS32FromPointer(pointer) {\n                return HEAP32[pointer >>> 2];\n              } : function readU32FromPointer(pointer) {\n                return HEAPU32[pointer >>> 2];\n              };\n            default:\n              throw new TypeError(\"Unknown integer type: \" + name2);\n          }\n        }\n        function __embind_register_integer(primitiveType, name2, size, minRange, maxRange) {\n          name2 = readLatin1String(name2);\n          if (maxRange === -1) {\n            maxRange = 4294967295;\n          }\n          var shift = getShiftFromSize(size);\n          var fromWireType = function(value) {\n            return value;\n          };\n          if (minRange === 0) {\n            var bitshift = 32 - 8 * size;\n            fromWireType = function(value) {\n              return value << bitshift >>> bitshift;\n            };\n          }\n          var isUnsignedType = name2.includes(\"unsigned\");\n          registerType(primitiveType, { name: name2, \"fromWireType\": fromWireType, \"toWireType\": function(destructors, value) {\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n            }\n            if (value < minRange || value > maxRange) {\n              throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name2 + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n            }\n            return isUnsignedType ? value >>> 0 : value | 0;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": integerReadValueFromPointer(name2, shift, minRange !== 0), destructorFunction: null });\n        }\n        function __embind_register_memory_view(rawType, dataTypeIndex, name2) {\n          var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\n          var TA = typeMapping[dataTypeIndex];\n          function decodeMemoryView(handle) {\n            handle = handle >> 2;\n            var heap = HEAPU32;\n            var size = heap[handle >>> 0];\n            var data = heap[handle + 1 >>> 0];\n            return new TA(buffer, data, size);\n          }\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": decodeMemoryView, \"argPackAdvance\": 8, \"readValueFromPointer\": decodeMemoryView }, { ignoreDuplicateRegistrations: true });\n        }\n        function __embind_register_std_string(rawType, name2) {\n          name2 = readLatin1String(name2);\n          var stdStringIsUTF8 = name2 === \"std::string\";\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            var length = HEAPU32[value >>> 2];\n            var str;\n            if (stdStringIsUTF8) {\n              var decodeStartPtr = value + 4;\n              for (var i = 0; i <= length; ++i) {\n                var currentBytePtr = value + 4 + i;\n                if (i == length || HEAPU8[currentBytePtr >>> 0] == 0) {\n                  var maxRead = currentBytePtr - decodeStartPtr;\n                  var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                  if (str === void 0) {\n                    str = stringSegment;\n                  } else {\n                    str += String.fromCharCode(0);\n                    str += stringSegment;\n                  }\n                  decodeStartPtr = currentBytePtr + 1;\n                }\n              }\n            } else {\n              var a = new Array(length);\n              for (var i = 0; i < length; ++i) {\n                a[i] = String.fromCharCode(HEAPU8[value + 4 + i >>> 0]);\n              }\n              str = a.join(\"\");\n            }\n            _free(value);\n            return str;\n          }, \"toWireType\": function(destructors, value) {\n            if (value instanceof ArrayBuffer) {\n              value = new Uint8Array(value);\n            }\n            var getLength;\n            var valueIsOfTypeString = typeof value === \"string\";\n            if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n              throwBindingError(\"Cannot pass non-string to std::string\");\n            }\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n              getLength = function() {\n                return lengthBytesUTF8(value);\n              };\n            } else {\n              getLength = function() {\n                return value.length;\n              };\n            }\n            var length = getLength();\n            var ptr = _malloc(4 + length + 1);\n            ptr >>>= 0;\n            HEAPU32[ptr >>> 2] = length;\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n              stringToUTF8(value, ptr + 4, length + 1);\n            } else {\n              if (valueIsOfTypeString) {\n                for (var i = 0; i < length; ++i) {\n                  var charCode = value.charCodeAt(i);\n                  if (charCode > 255) {\n                    _free(ptr);\n                    throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n                  }\n                  HEAPU8[ptr + 4 + i >>> 0] = charCode;\n                }\n              } else {\n                for (var i = 0; i < length; ++i) {\n                  HEAPU8[ptr + 4 + i >>> 0] = value[i];\n                }\n              }\n            }\n            if (destructors !== null) {\n              destructors.push(_free, ptr);\n            }\n            return ptr;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\n            _free(ptr);\n          } });\n        }\n        function __embind_register_std_wstring(rawType, charSize, name2) {\n          name2 = readLatin1String(name2);\n          var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n          if (charSize === 2) {\n            decodeString = UTF16ToString;\n            encodeString = stringToUTF16;\n            lengthBytesUTF = lengthBytesUTF16;\n            getHeap = function() {\n              return HEAPU16;\n            };\n            shift = 1;\n          } else if (charSize === 4) {\n            decodeString = UTF32ToString;\n            encodeString = stringToUTF32;\n            lengthBytesUTF = lengthBytesUTF32;\n            getHeap = function() {\n              return HEAPU32;\n            };\n            shift = 2;\n          }\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            var length = HEAPU32[value >>> 2];\n            var HEAP = getHeap();\n            var str;\n            var decodeStartPtr = value + 4;\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = value + 4 + i * charSize;\n              if (i == length || HEAP[currentBytePtr >>> shift] == 0) {\n                var maxReadBytes = currentBytePtr - decodeStartPtr;\n                var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n                if (str === void 0) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + charSize;\n              }\n            }\n            _free(value);\n            return str;\n          }, \"toWireType\": function(destructors, value) {\n            if (!(typeof value === \"string\")) {\n              throwBindingError(\"Cannot pass non-string to C++ string type \" + name2);\n            }\n            var length = lengthBytesUTF(value);\n            var ptr = _malloc(4 + length + charSize);\n            ptr >>>= 0;\n            HEAPU32[ptr >>> 2] = length >> shift;\n            encodeString(value, ptr + 4, length + charSize);\n            if (destructors !== null) {\n              destructors.push(_free, ptr);\n            }\n            return ptr;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\n            _free(ptr);\n          } });\n        }\n        function __embind_register_value_array(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n          tupleRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), elements: [] };\n        }\n        function __embind_register_value_array_element(rawTupleType, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n          tupleRegistrations[rawTupleType].elements.push({ getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\n        }\n        function __embind_register_value_object(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n          structRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), fields: [] };\n        }\n        function __embind_register_value_object_field(structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n          structRegistrations[structType].fields.push({ fieldName: readLatin1String(fieldName), getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\n        }\n        function __embind_register_void(rawType, name2) {\n          name2 = readLatin1String(name2);\n          registerType(rawType, { isVoid: true, name: name2, \"argPackAdvance\": 0, \"fromWireType\": function() {\n            return void 0;\n          }, \"toWireType\": function(destructors, o) {\n            return void 0;\n          } });\n        }\n        function requireHandle(handle) {\n          if (!handle) {\n            throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n          }\n          return emval_handle_array[handle].value;\n        }\n        function __emval_as(handle, returnType, destructorsRef) {\n          handle = requireHandle(handle);\n          returnType = requireRegisteredType(returnType, \"emval::as\");\n          var destructors = [];\n          var rd = __emval_register(destructors);\n          HEAP32[destructorsRef >>> 2] = rd;\n          return returnType[\"toWireType\"](destructors, handle);\n        }\n        function __emval_lookupTypes(argCount, argTypes) {\n          var a = new Array(argCount);\n          for (var i = 0; i < argCount; ++i) {\n            a[i] = requireRegisteredType(HEAP32[(argTypes >> 2) + i >>> 0], \"parameter \" + i);\n          }\n          return a;\n        }\n        function __emval_call(handle, argCount, argTypes, argv) {\n          handle = requireHandle(handle);\n          var types = __emval_lookupTypes(argCount, argTypes);\n          var args = new Array(argCount);\n          for (var i = 0; i < argCount; ++i) {\n            var type = types[i];\n            args[i] = type[\"readValueFromPointer\"](argv);\n            argv += type[\"argPackAdvance\"];\n          }\n          var rv = handle.apply(void 0, args);\n          return __emval_register(rv);\n        }\n        var emval_symbols = {};\n        function getStringOrSymbol(address) {\n          var symbol = emval_symbols[address];\n          if (symbol === void 0) {\n            return readLatin1String(address);\n          } else {\n            return symbol;\n          }\n        }\n        function emval_get_global() {\n          if (typeof globalThis === \"object\") {\n            return globalThis;\n          }\n          return function() {\n            return Function;\n          }()(\"return this\")();\n        }\n        function __emval_get_global(name2) {\n          if (name2 === 0) {\n            return __emval_register(emval_get_global());\n          } else {\n            name2 = getStringOrSymbol(name2);\n            return __emval_register(emval_get_global()[name2]);\n          }\n        }\n        function __emval_get_property(handle, key2) {\n          handle = requireHandle(handle);\n          key2 = requireHandle(key2);\n          return __emval_register(handle[key2]);\n        }\n        function __emval_incref(handle) {\n          if (handle > 4) {\n            emval_handle_array[handle].refcount += 1;\n          }\n        }\n        function __emval_instanceof(object, constructor) {\n          object = requireHandle(object);\n          constructor = requireHandle(constructor);\n          return object instanceof constructor;\n        }\n        function __emval_is_number(handle) {\n          handle = requireHandle(handle);\n          return typeof handle === \"number\";\n        }\n        function __emval_new_array() {\n          return __emval_register([]);\n        }\n        function __emval_new_cstring(v) {\n          return __emval_register(getStringOrSymbol(v));\n        }\n        function __emval_new_object() {\n          return __emval_register({});\n        }\n        function __emval_run_destructors(handle) {\n          var destructors = emval_handle_array[handle].value;\n          runDestructors(destructors);\n          __emval_decref(handle);\n        }\n        function __emval_set_property(handle, key2, value) {\n          handle = requireHandle(handle);\n          key2 = requireHandle(key2);\n          value = requireHandle(value);\n          handle[key2] = value;\n        }\n        function __emval_take_value(type, argv) {\n          type = requireRegisteredType(type, \"_emval_take_value\");\n          var v = type[\"readValueFromPointer\"](argv);\n          return __emval_register(v);\n        }\n        function _abort() {\n          abort();\n        }\n        var _emscripten_get_now;\n        if (ENVIRONMENT_IS_NODE) {\n          _emscripten_get_now = function() {\n            var t = process[\"hrtime\"]();\n            return t[0] * 1e3 + t[1] / 1e6;\n          };\n        } else\n          _emscripten_get_now = function() {\n            return performance.now();\n          };\n        var _emscripten_get_now_is_monotonic = true;\n        function _clock_gettime(clk_id, tp) {\n          var now;\n          if (clk_id === 0) {\n            now = Date.now();\n          } else if ((clk_id === 1 || clk_id === 4) && _emscripten_get_now_is_monotonic) {\n            now = _emscripten_get_now();\n          } else {\n            setErrNo(28);\n            return -1;\n          }\n          HEAP32[tp >>> 2] = now / 1e3 | 0;\n          HEAP32[tp + 4 >>> 2] = now % 1e3 * 1e3 * 1e3 | 0;\n          return 0;\n        }\n        function _emscripten_memcpy_big(dest, src, num) {\n          HEAPU8.copyWithin(dest >>> 0, src >>> 0, src + num >>> 0);\n        }\n        function emscripten_realloc_buffer(size) {\n          try {\n            wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n            return 1;\n          } catch (e) {\n          }\n        }\n        function _emscripten_resize_heap(requestedSize) {\n          var oldSize = HEAPU8.length;\n          requestedSize = requestedSize >>> 0;\n          var maxHeapSize = 4294901760;\n          if (requestedSize > maxHeapSize) {\n            return false;\n          }\n          for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n            var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n            var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n            var replacement = emscripten_realloc_buffer(newSize);\n            if (replacement) {\n              return true;\n            }\n          }\n          return false;\n        }\n        var ENV = {};\n        function getExecutableName() {\n          return thisProgram || \"./this.program\";\n        }\n        function getEnvStrings() {\n          if (!getEnvStrings.strings) {\n            var lang = (typeof navigator === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n            var env = { \"USER\": \"web_user\", \"LOGNAME\": \"web_user\", \"PATH\": \"/\", \"PWD\": \"/\", \"HOME\": \"/home/web_user\", \"LANG\": lang, \"_\": getExecutableName() };\n            for (var x in ENV) {\n              if (ENV[x] === void 0)\n                delete env[x];\n              else\n                env[x] = ENV[x];\n            }\n            var strings = [];\n            for (var x in env) {\n              strings.push(x + \"=\" + env[x]);\n            }\n            getEnvStrings.strings = strings;\n          }\n          return getEnvStrings.strings;\n        }\n        function _environ_get(__environ, environ_buf) {\n          try {\n            var bufSize = 0;\n            getEnvStrings().forEach(function(string, i) {\n              var ptr = environ_buf + bufSize;\n              HEAP32[__environ + i * 4 >>> 2] = ptr;\n              writeAsciiToMemory(string, ptr);\n              bufSize += string.length + 1;\n            });\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _environ_sizes_get(penviron_count, penviron_buf_size) {\n          try {\n            var strings = getEnvStrings();\n            HEAP32[penviron_count >>> 2] = strings.length;\n            var bufSize = 0;\n            strings.forEach(function(string) {\n              bufSize += string.length + 1;\n            });\n            HEAP32[penviron_buf_size >>> 2] = bufSize;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_close(fd) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            FS.close(stream);\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_read(fd, iov, iovcnt, pnum) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n            HEAP32[pnum >>> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var HIGH_OFFSET = 4294967296;\n            var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\n            var DOUBLE_LIMIT = 9007199254740992;\n            if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\n              return -61;\n            }\n            FS.llseek(stream, offset, whence);\n            tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[newOffset >>> 2] = tempI64[0], HEAP32[newOffset + 4 >>> 2] = tempI64[1];\n            if (stream.getdents && offset === 0 && whence === 0)\n              stream.getdents = null;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_write(fd, iov, iovcnt, pnum) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doWritev(stream, iov, iovcnt);\n            HEAP32[pnum >>> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _setTempRet0(val) {\n          setTempRet0(val);\n        }\n        function __isLeapYear(year) {\n          return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n        }\n        function __arraySum(array, index) {\n          var sum = 0;\n          for (var i = 0; i <= index; sum += array[i++]) {\n          }\n          return sum;\n        }\n        var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        function __addDays(date, days) {\n          var newDate = new Date(date.getTime());\n          while (days > 0) {\n            var leap = __isLeapYear(newDate.getFullYear());\n            var currentMonth = newDate.getMonth();\n            var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\n            if (days > daysInCurrentMonth - newDate.getDate()) {\n              days -= daysInCurrentMonth - newDate.getDate() + 1;\n              newDate.setDate(1);\n              if (currentMonth < 11) {\n                newDate.setMonth(currentMonth + 1);\n              } else {\n                newDate.setMonth(0);\n                newDate.setFullYear(newDate.getFullYear() + 1);\n              }\n            } else {\n              newDate.setDate(newDate.getDate() + days);\n              return newDate;\n            }\n          }\n          return newDate;\n        }\n        function _strftime(s, maxsize, format, tm) {\n          var tm_zone = HEAP32[tm + 40 >>> 2];\n          var date = { tm_sec: HEAP32[tm >>> 2], tm_min: HEAP32[tm + 4 >>> 2], tm_hour: HEAP32[tm + 8 >>> 2], tm_mday: HEAP32[tm + 12 >>> 2], tm_mon: HEAP32[tm + 16 >>> 2], tm_year: HEAP32[tm + 20 >>> 2], tm_wday: HEAP32[tm + 24 >>> 2], tm_yday: HEAP32[tm + 28 >>> 2], tm_isdst: HEAP32[tm + 32 >>> 2], tm_gmtoff: HEAP32[tm + 36 >>> 2], tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\" };\n          var pattern = UTF8ToString(format);\n          var EXPANSION_RULES_1 = { \"%c\": \"%a %b %d %H:%M:%S %Y\", \"%D\": \"%m/%d/%y\", \"%F\": \"%Y-%m-%d\", \"%h\": \"%b\", \"%r\": \"%I:%M:%S %p\", \"%R\": \"%H:%M\", \"%T\": \"%H:%M:%S\", \"%x\": \"%m/%d/%y\", \"%X\": \"%H:%M:%S\", \"%Ec\": \"%c\", \"%EC\": \"%C\", \"%Ex\": \"%m/%d/%y\", \"%EX\": \"%H:%M:%S\", \"%Ey\": \"%y\", \"%EY\": \"%Y\", \"%Od\": \"%d\", \"%Oe\": \"%e\", \"%OH\": \"%H\", \"%OI\": \"%I\", \"%Om\": \"%m\", \"%OM\": \"%M\", \"%OS\": \"%S\", \"%Ou\": \"%u\", \"%OU\": \"%U\", \"%OV\": \"%V\", \"%Ow\": \"%w\", \"%OW\": \"%W\", \"%Oy\": \"%y\" };\n          for (var rule in EXPANSION_RULES_1) {\n            pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n          }\n          var WEEKDAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n          var MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n          function leadingSomething(value, digits, character) {\n            var str = typeof value === \"number\" ? value.toString() : value || \"\";\n            while (str.length < digits) {\n              str = character[0] + str;\n            }\n            return str;\n          }\n          function leadingNulls(value, digits) {\n            return leadingSomething(value, digits, \"0\");\n          }\n          function compareByDay(date1, date2) {\n            function sgn(value) {\n              return value < 0 ? -1 : value > 0 ? 1 : 0;\n            }\n            var compare;\n            if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n              if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n                compare = sgn(date1.getDate() - date2.getDate());\n              }\n            }\n            return compare;\n          }\n          function getFirstWeekStartDate(janFourth) {\n            switch (janFourth.getDay()) {\n              case 0:\n                return new Date(janFourth.getFullYear() - 1, 11, 29);\n              case 1:\n                return janFourth;\n              case 2:\n                return new Date(janFourth.getFullYear(), 0, 3);\n              case 3:\n                return new Date(janFourth.getFullYear(), 0, 2);\n              case 4:\n                return new Date(janFourth.getFullYear(), 0, 1);\n              case 5:\n                return new Date(janFourth.getFullYear() - 1, 11, 31);\n              case 6:\n                return new Date(janFourth.getFullYear() - 1, 11, 30);\n            }\n          }\n          function getWeekBasedYear(date2) {\n            var thisDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\n            var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n            var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n            if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n              if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n                return thisDate.getFullYear() + 1;\n              } else {\n                return thisDate.getFullYear();\n              }\n            } else {\n              return thisDate.getFullYear() - 1;\n            }\n          }\n          var EXPANSION_RULES_2 = { \"%a\": function(date2) {\n            return WEEKDAYS[date2.tm_wday].substring(0, 3);\n          }, \"%A\": function(date2) {\n            return WEEKDAYS[date2.tm_wday];\n          }, \"%b\": function(date2) {\n            return MONTHS[date2.tm_mon].substring(0, 3);\n          }, \"%B\": function(date2) {\n            return MONTHS[date2.tm_mon];\n          }, \"%C\": function(date2) {\n            var year = date2.tm_year + 1900;\n            return leadingNulls(year / 100 | 0, 2);\n          }, \"%d\": function(date2) {\n            return leadingNulls(date2.tm_mday, 2);\n          }, \"%e\": function(date2) {\n            return leadingSomething(date2.tm_mday, 2, \" \");\n          }, \"%g\": function(date2) {\n            return getWeekBasedYear(date2).toString().substring(2);\n          }, \"%G\": function(date2) {\n            return getWeekBasedYear(date2);\n          }, \"%H\": function(date2) {\n            return leadingNulls(date2.tm_hour, 2);\n          }, \"%I\": function(date2) {\n            var twelveHour = date2.tm_hour;\n            if (twelveHour == 0)\n              twelveHour = 12;\n            else if (twelveHour > 12)\n              twelveHour -= 12;\n            return leadingNulls(twelveHour, 2);\n          }, \"%j\": function(date2) {\n            return leadingNulls(date2.tm_mday + __arraySum(__isLeapYear(date2.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date2.tm_mon - 1), 3);\n          }, \"%m\": function(date2) {\n            return leadingNulls(date2.tm_mon + 1, 2);\n          }, \"%M\": function(date2) {\n            return leadingNulls(date2.tm_min, 2);\n          }, \"%n\": function() {\n            return \"\\n\";\n          }, \"%p\": function(date2) {\n            if (date2.tm_hour >= 0 && date2.tm_hour < 12) {\n              return \"AM\";\n            } else {\n              return \"PM\";\n            }\n          }, \"%S\": function(date2) {\n            return leadingNulls(date2.tm_sec, 2);\n          }, \"%t\": function() {\n            return \"\t\";\n          }, \"%u\": function(date2) {\n            return date2.tm_wday || 7;\n          }, \"%U\": function(date2) {\n            var janFirst = new Date(date2.tm_year + 1900, 0, 1);\n            var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\n            if (compareByDay(firstSunday, endDate) < 0) {\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n              var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();\n              var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n              return leadingNulls(Math.ceil(days / 7), 2);\n            }\n            return compareByDay(firstSunday, janFirst) === 0 ? \"01\" : \"00\";\n          }, \"%V\": function(date2) {\n            var janFourthThisYear = new Date(date2.tm_year + 1900, 0, 4);\n            var janFourthNextYear = new Date(date2.tm_year + 1901, 0, 4);\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n            var endDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\n            if (compareByDay(endDate, firstWeekStartThisYear) < 0) {\n              return \"53\";\n            }\n            if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {\n              return \"01\";\n            }\n            var daysDifference;\n            if (firstWeekStartThisYear.getFullYear() < date2.tm_year + 1900) {\n              daysDifference = date2.tm_yday + 32 - firstWeekStartThisYear.getDate();\n            } else {\n              daysDifference = date2.tm_yday + 1 - firstWeekStartThisYear.getDate();\n            }\n            return leadingNulls(Math.ceil(daysDifference / 7), 2);\n          }, \"%w\": function(date2) {\n            return date2.tm_wday;\n          }, \"%W\": function(date2) {\n            var janFirst = new Date(date2.tm_year, 0, 1);\n            var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\n            if (compareByDay(firstMonday, endDate) < 0) {\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n              var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();\n              var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n              return leadingNulls(Math.ceil(days / 7), 2);\n            }\n            return compareByDay(firstMonday, janFirst) === 0 ? \"01\" : \"00\";\n          }, \"%y\": function(date2) {\n            return (date2.tm_year + 1900).toString().substring(2);\n          }, \"%Y\": function(date2) {\n            return date2.tm_year + 1900;\n          }, \"%z\": function(date2) {\n            var off = date2.tm_gmtoff;\n            var ahead = off >= 0;\n            off = Math.abs(off) / 60;\n            off = off / 60 * 100 + off % 60;\n            return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n          }, \"%Z\": function(date2) {\n            return date2.tm_zone;\n          }, \"%%\": function() {\n            return \"%\";\n          } };\n          for (var rule in EXPANSION_RULES_2) {\n            if (pattern.includes(rule)) {\n              pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n            }\n          }\n          var bytes = intArrayFromString(pattern, false);\n          if (bytes.length > maxsize) {\n            return 0;\n          }\n          writeArrayToMemory(bytes, s);\n          return bytes.length - 1;\n        }\n        function _strftime_l(s, maxsize, format, tm) {\n          return _strftime(s, maxsize, format, tm);\n        }\n        var FSNode = function(parent, name2, mode, rdev) {\n          if (!parent) {\n            parent = this;\n          }\n          this.parent = parent;\n          this.mount = parent.mount;\n          this.mounted = null;\n          this.id = FS.nextInode++;\n          this.name = name2;\n          this.mode = mode;\n          this.node_ops = {};\n          this.stream_ops = {};\n          this.rdev = rdev;\n        };\n        var readMode = 292 | 73;\n        var writeMode = 146;\n        Object.defineProperties(FSNode.prototype, { read: { get: function() {\n          return (this.mode & readMode) === readMode;\n        }, set: function(val) {\n          val ? this.mode |= readMode : this.mode &= ~readMode;\n        } }, write: { get: function() {\n          return (this.mode & writeMode) === writeMode;\n        }, set: function(val) {\n          val ? this.mode |= writeMode : this.mode &= ~writeMode;\n        } }, isFolder: { get: function() {\n          return FS.isDir(this.mode);\n        } }, isDevice: { get: function() {\n          return FS.isChrdev(this.mode);\n        } } });\n        FS.FSNode = FSNode;\n        FS.staticInit();\n        Module[\"FS_createPath\"] = FS.createPath;\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n        Module[\"FS_createDevice\"] = FS.createDevice;\n        Module[\"FS_unlink\"] = FS.unlink;\n        InternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n        embind_init_charCodes();\n        BindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n        init_ClassHandle();\n        init_RegisteredPointer();\n        init_embind();\n        UnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n        init_emval();\n        function intArrayFromString(stringy, dontAddNull, length) {\n          var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n          var u8array = new Array(len);\n          var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n          if (dontAddNull)\n            u8array.length = numBytesWritten;\n          return u8array;\n        }\n        var asmLibraryArg = { \"y\": ___assert_fail, \"x\": ___cxa_allocate_exception, \"w\": ___cxa_throw, \"A\": ___sys_fcntl64, \"O\": ___sys_ioctl, \"P\": ___sys_open, \"Z\": __embind_finalize_value_array, \"o\": __embind_finalize_value_object, \"J\": __embind_register_bigint, \"W\": __embind_register_bool, \"r\": __embind_register_class, \"q\": __embind_register_class_constructor, \"b\": __embind_register_class_function, \"V\": __embind_register_emval, \"Y\": __embind_register_enum, \"t\": __embind_register_enum_value, \"D\": __embind_register_float, \"e\": __embind_register_function, \"n\": __embind_register_integer, \"j\": __embind_register_memory_view, \"E\": __embind_register_std_string, \"v\": __embind_register_std_wstring, \"_\": __embind_register_value_array, \"g\": __embind_register_value_array_element, \"p\": __embind_register_value_object, \"d\": __embind_register_value_object_field, \"X\": __embind_register_void, \"l\": __emval_as, \"F\": __emval_call, \"a\": __emval_decref, \"H\": __emval_get_global, \"m\": __emval_get_property, \"i\": __emval_incref, \"L\": __emval_instanceof, \"G\": __emval_is_number, \"z\": __emval_new_array, \"f\": __emval_new_cstring, \"s\": __emval_new_object, \"k\": __emval_run_destructors, \"h\": __emval_set_property, \"c\": __emval_take_value, \"C\": _abort, \"N\": _clock_gettime, \"M\": _emscripten_memcpy_big, \"u\": _emscripten_resize_heap, \"R\": _environ_get, \"S\": _environ_sizes_get, \"B\": _fd_close, \"U\": _fd_read, \"I\": _fd_seek, \"T\": _fd_write, \"K\": _setTempRet0, \"Q\": _strftime_l };\n        var asm = createWasm();\n        var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\n          return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"aa\"]).apply(null, arguments);\n        };\n        var _main = Module[\"_main\"] = function() {\n          return (_main = Module[\"_main\"] = Module[\"asm\"][\"ba\"]).apply(null, arguments);\n        };\n        var _malloc = Module[\"_malloc\"] = function() {\n          return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"ca\"]).apply(null, arguments);\n        };\n        var _free = Module[\"_free\"] = function() {\n          return (_free = Module[\"_free\"] = Module[\"asm\"][\"da\"]).apply(null, arguments);\n        };\n        var ___getTypeName = Module[\"___getTypeName\"] = function() {\n          return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"ea\"]).apply(null, arguments);\n        };\n        var ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function() {\n          return (___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = Module[\"asm\"][\"fa\"]).apply(null, arguments);\n        };\n        var ___errno_location = Module[\"___errno_location\"] = function() {\n          return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"ga\"]).apply(null, arguments);\n        };\n        var dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n          return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"ia\"]).apply(null, arguments);\n        };\n        var dynCall_viijii = Module[\"dynCall_viijii\"] = function() {\n          return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"ja\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function() {\n          return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"ka\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function() {\n          return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"la\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function() {\n          return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"ma\"]).apply(null, arguments);\n        };\n        Module[\"addRunDependency\"] = addRunDependency;\n        Module[\"removeRunDependency\"] = removeRunDependency;\n        Module[\"FS_createPath\"] = FS.createPath;\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n        Module[\"FS_createDevice\"] = FS.createDevice;\n        Module[\"FS_unlink\"] = FS.unlink;\n        Module[\"FS\"] = FS;\n        var calledRun;\n        function ExitStatus(status) {\n          this.name = \"ExitStatus\";\n          this.message = \"Program terminated with exit(\" + status + \")\";\n          this.status = status;\n        }\n        var calledMain = false;\n        dependenciesFulfilled = function runCaller() {\n          if (!calledRun)\n            run();\n          if (!calledRun)\n            dependenciesFulfilled = runCaller;\n        };\n        function callMain(args) {\n          var entryFunction = Module[\"_main\"];\n          var argc = 0;\n          var argv = 0;\n          try {\n            var ret = entryFunction(argc, argv);\n            exit(ret, true);\n          } catch (e) {\n            if (e instanceof ExitStatus || e == \"unwind\") {\n              return;\n            }\n            var toLog = e;\n            if (e && typeof e === \"object\" && e.stack) {\n              toLog = [e, e.stack];\n            }\n            err(\"exception thrown: \" + toLog);\n            quit_(1, e);\n          } finally {\n            calledMain = true;\n          }\n        }\n        function run(args) {\n          args = args || arguments_;\n          if (runDependencies > 0) {\n            return;\n          }\n          preRun();\n          if (runDependencies > 0) {\n            return;\n          }\n          function doRun() {\n            if (calledRun)\n              return;\n            calledRun = true;\n            Module[\"calledRun\"] = true;\n            if (ABORT)\n              return;\n            initRuntime();\n            preMain();\n            readyPromiseResolve(Module);\n            if (Module[\"onRuntimeInitialized\"])\n              Module[\"onRuntimeInitialized\"]();\n            if (shouldRunNow)\n              callMain(args);\n            postRun();\n          }\n          if (Module[\"setStatus\"]) {\n            Module[\"setStatus\"](\"Running...\");\n            setTimeout(function() {\n              setTimeout(function() {\n                Module[\"setStatus\"](\"\");\n              }, 1);\n              doRun();\n            }, 1);\n          } else {\n            doRun();\n          }\n        }\n        Module[\"run\"] = run;\n        function exit(status, implicit) {\n          EXITSTATUS = status;\n          if (keepRuntimeAlive()) {\n          } else {\n            exitRuntime();\n            if (Module[\"onExit\"])\n              Module[\"onExit\"](status);\n            ABORT = true;\n          }\n          quit_(status, new ExitStatus(status));\n        }\n        if (Module[\"preInit\"]) {\n          if (typeof Module[\"preInit\"] == \"function\")\n            Module[\"preInit\"] = [Module[\"preInit\"]];\n          while (Module[\"preInit\"].length > 0) {\n            Module[\"preInit\"].pop()();\n          }\n        }\n        var shouldRunNow = true;\n        if (Module[\"noInitialRun\"])\n          shouldRunNow = false;\n        run();\n        return WebIFCWasm3.ready;\n      };\n    }();\n    if (typeof exports === \"object\" && typeof module === \"object\")\n      module.exports = WebIFCWasm2;\n    else if (typeof define === \"function\" && define[\"amd\"])\n      define([], function() {\n        return WebIFCWasm2;\n      });\n    else if (typeof exports === \"object\")\n      exports[\"WebIFCWasm\"] = WebIFCWasm2;\n  }\n});\n\n// dist/ifc2x4.ts\nvar IFCACTIONREQUEST = 3821786052;\nvar IFCACTOR = 2296667514;\nvar IFCACTORROLE = 3630933823;\nvar IFCACTUATOR = 4288193352;\nvar IFCACTUATORTYPE = 2874132201;\nvar IFCADDRESS = 618182010;\nvar IFCADVANCEDBREP = 1635779807;\nvar IFCADVANCEDBREPWITHVOIDS = 2603310189;\nvar IFCADVANCEDFACE = 3406155212;\nvar IFCAIRTERMINAL = 1634111441;\nvar IFCAIRTERMINALBOX = 177149247;\nvar IFCAIRTERMINALBOXTYPE = 1411407467;\nvar IFCAIRTERMINALTYPE = 3352864051;\nvar IFCAIRTOAIRHEATRECOVERY = 2056796094;\nvar IFCAIRTOAIRHEATRECOVERYTYPE = 1871374353;\nvar IFCALARM = 3087945054;\nvar IFCALARMTYPE = 3001207471;\nvar IFCALIGNMENT = 325726236;\nvar IFCALIGNMENT2DHORIZONTAL = 749761778;\nvar IFCALIGNMENT2DHORIZONTALSEGMENT = 3199563722;\nvar IFCALIGNMENT2DSEGMENT = 2483840362;\nvar IFCALIGNMENT2DVERSEGCIRCULARARC = 3379348081;\nvar IFCALIGNMENT2DVERSEGLINE = 3239324667;\nvar IFCALIGNMENT2DVERSEGPARABOLICARC = 4263986512;\nvar IFCALIGNMENT2DVERTICAL = 53199957;\nvar IFCALIGNMENT2DVERTICALSEGMENT = 2029264950;\nvar IFCALIGNMENTCURVE = 3512275521;\nvar IFCANNOTATION = 1674181508;\nvar IFCANNOTATIONFILLAREA = 669184980;\nvar IFCAPPLICATION = 639542469;\nvar IFCAPPLIEDVALUE = 411424972;\nvar IFCAPPROVAL = 130549933;\nvar IFCAPPROVALRELATIONSHIP = 3869604511;\nvar IFCARBITRARYCLOSEDPROFILEDEF = 3798115385;\nvar IFCARBITRARYOPENPROFILEDEF = 1310608509;\nvar IFCARBITRARYPROFILEDEFWITHVOIDS = 2705031697;\nvar IFCASSET = 3460190687;\nvar IFCASYMMETRICISHAPEPROFILEDEF = 3207858831;\nvar IFCAUDIOVISUALAPPLIANCE = 277319702;\nvar IFCAUDIOVISUALAPPLIANCETYPE = 1532957894;\nvar IFCAXIS1PLACEMENT = 4261334040;\nvar IFCAXIS2PLACEMENT2D = 3125803723;\nvar IFCAXIS2PLACEMENT3D = 2740243338;\nvar IFCBSPLINECURVE = 1967976161;\nvar IFCBSPLINECURVEWITHKNOTS = 2461110595;\nvar IFCBSPLINESURFACE = 2887950389;\nvar IFCBSPLINESURFACEWITHKNOTS = 167062518;\nvar IFCBEAM = 753842376;\nvar IFCBEAMSTANDARDCASE = 2906023776;\nvar IFCBEAMTYPE = 819618141;\nvar IFCBEARING = 4196446775;\nvar IFCBEARINGTYPE = 3649138523;\nvar IFCBLOBTEXTURE = 616511568;\nvar IFCBLOCK = 1334484129;\nvar IFCBOILER = 32344328;\nvar IFCBOILERTYPE = 231477066;\nvar IFCBOOLEANCLIPPINGRESULT = 3649129432;\nvar IFCBOOLEANRESULT = 2736907675;\nvar IFCBOUNDARYCONDITION = 4037036970;\nvar IFCBOUNDARYCURVE = 1136057603;\nvar IFCBOUNDARYEDGECONDITION = 1560379544;\nvar IFCBOUNDARYFACECONDITION = 3367102660;\nvar IFCBOUNDARYNODECONDITION = 1387855156;\nvar IFCBOUNDARYNODECONDITIONWARPING = 2069777674;\nvar IFCBOUNDEDCURVE = 1260505505;\nvar IFCBOUNDEDSURFACE = 4182860854;\nvar IFCBOUNDINGBOX = 2581212453;\nvar IFCBOXEDHALFSPACE = 2713105998;\nvar IFCBRIDGE = 644574406;\nvar IFCBRIDGEPART = 963979645;\nvar IFCBUILDING = 4031249490;\nvar IFCBUILDINGELEMENT = 3299480353;\nvar IFCBUILDINGELEMENTPART = 2979338954;\nvar IFCBUILDINGELEMENTPARTTYPE = 39481116;\nvar IFCBUILDINGELEMENTPROXY = 1095909175;\nvar IFCBUILDINGELEMENTPROXYTYPE = 1909888760;\nvar IFCBUILDINGELEMENTTYPE = 1950629157;\nvar IFCBUILDINGSTOREY = 3124254112;\nvar IFCBUILDINGSYSTEM = 1177604601;\nvar IFCBURNER = 2938176219;\nvar IFCBURNERTYPE = 2188180465;\nvar IFCCSHAPEPROFILEDEF = 2898889636;\nvar IFCCABLECARRIERFITTING = 635142910;\nvar IFCCABLECARRIERFITTINGTYPE = 395041908;\nvar IFCCABLECARRIERSEGMENT = 3758799889;\nvar IFCCABLECARRIERSEGMENTTYPE = 3293546465;\nvar IFCCABLEFITTING = 1051757585;\nvar IFCCABLEFITTINGTYPE = 2674252688;\nvar IFCCABLESEGMENT = 4217484030;\nvar IFCCABLESEGMENTTYPE = 1285652485;\nvar IFCCAISSONFOUNDATION = 3999819293;\nvar IFCCAISSONFOUNDATIONTYPE = 3203706013;\nvar IFCCARTESIANPOINT = 1123145078;\nvar IFCCARTESIANPOINTLIST = 574549367;\nvar IFCCARTESIANPOINTLIST2D = 1675464909;\nvar IFCCARTESIANPOINTLIST3D = 2059837836;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR = 59481748;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR2D = 3749851601;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM = 3486308946;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR3D = 3331915920;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM = 1416205885;\nvar IFCCENTERLINEPROFILEDEF = 3150382593;\nvar IFCCHILLER = 3902619387;\nvar IFCCHILLERTYPE = 2951183804;\nvar IFCCHIMNEY = 3296154744;\nvar IFCCHIMNEYTYPE = 2197970202;\nvar IFCCIRCLE = 2611217952;\nvar IFCCIRCLEHOLLOWPROFILEDEF = 2937912522;\nvar IFCCIRCLEPROFILEDEF = 1383045692;\nvar IFCCIRCULARARCSEGMENT2D = 1062206242;\nvar IFCCIVILELEMENT = 1677625105;\nvar IFCCIVILELEMENTTYPE = 3893394355;\nvar IFCCLASSIFICATION = 747523909;\nvar IFCCLASSIFICATIONREFERENCE = 647927063;\nvar IFCCLOSEDSHELL = 2205249479;\nvar IFCCOIL = 639361253;\nvar IFCCOILTYPE = 2301859152;\nvar IFCCOLOURRGB = 776857604;\nvar IFCCOLOURRGBLIST = 3285139300;\nvar IFCCOLOURSPECIFICATION = 3264961684;\nvar IFCCOLUMN = 843113511;\nvar IFCCOLUMNSTANDARDCASE = 905975707;\nvar IFCCOLUMNTYPE = 300633059;\nvar IFCCOMMUNICATIONSAPPLIANCE = 3221913625;\nvar IFCCOMMUNICATIONSAPPLIANCETYPE = 400855858;\nvar IFCCOMPLEXPROPERTY = 2542286263;\nvar IFCCOMPLEXPROPERTYTEMPLATE = 3875453745;\nvar IFCCOMPOSITECURVE = 3732776249;\nvar IFCCOMPOSITECURVEONSURFACE = 15328376;\nvar IFCCOMPOSITECURVESEGMENT = 2485617015;\nvar IFCCOMPOSITEPROFILEDEF = 1485152156;\nvar IFCCOMPRESSOR = 3571504051;\nvar IFCCOMPRESSORTYPE = 3850581409;\nvar IFCCONDENSER = 2272882330;\nvar IFCCONDENSERTYPE = 2816379211;\nvar IFCCONIC = 2510884976;\nvar IFCCONNECTEDFACESET = 370225590;\nvar IFCCONNECTIONCURVEGEOMETRY = 1981873012;\nvar IFCCONNECTIONGEOMETRY = 2859738748;\nvar IFCCONNECTIONPOINTECCENTRICITY = 45288368;\nvar IFCCONNECTIONPOINTGEOMETRY = 2614616156;\nvar IFCCONNECTIONSURFACEGEOMETRY = 2732653382;\nvar IFCCONNECTIONVOLUMEGEOMETRY = 775493141;\nvar IFCCONSTRAINT = 1959218052;\nvar IFCCONSTRUCTIONEQUIPMENTRESOURCE = 3898045240;\nvar IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE = 2185764099;\nvar IFCCONSTRUCTIONMATERIALRESOURCE = 1060000209;\nvar IFCCONSTRUCTIONMATERIALRESOURCETYPE = 4105962743;\nvar IFCCONSTRUCTIONPRODUCTRESOURCE = 488727124;\nvar IFCCONSTRUCTIONPRODUCTRESOURCETYPE = 1525564444;\nvar IFCCONSTRUCTIONRESOURCE = 2559216714;\nvar IFCCONSTRUCTIONRESOURCETYPE = 2574617495;\nvar IFCCONTEXT = 3419103109;\nvar IFCCONTEXTDEPENDENTUNIT = 3050246964;\nvar IFCCONTROL = 3293443760;\nvar IFCCONTROLLER = 25142252;\nvar IFCCONTROLLERTYPE = 578613899;\nvar IFCCONVERSIONBASEDUNIT = 2889183280;\nvar IFCCONVERSIONBASEDUNITWITHOFFSET = 2713554722;\nvar IFCCOOLEDBEAM = 4136498852;\nvar IFCCOOLEDBEAMTYPE = 335055490;\nvar IFCCOOLINGTOWER = 3640358203;\nvar IFCCOOLINGTOWERTYPE = 2954562838;\nvar IFCCOORDINATEOPERATION = 1785450214;\nvar IFCCOORDINATEREFERENCESYSTEM = 1466758467;\nvar IFCCOSTITEM = 3895139033;\nvar IFCCOSTSCHEDULE = 1419761937;\nvar IFCCOSTVALUE = 602808272;\nvar IFCCOVERING = 1973544240;\nvar IFCCOVERINGTYPE = 1916426348;\nvar IFCCREWRESOURCE = 3295246426;\nvar IFCCREWRESOURCETYPE = 1815067380;\nvar IFCCSGPRIMITIVE3D = 2506170314;\nvar IFCCSGSOLID = 2147822146;\nvar IFCCURRENCYRELATIONSHIP = 539742890;\nvar IFCCURTAINWALL = 3495092785;\nvar IFCCURTAINWALLTYPE = 1457835157;\nvar IFCCURVE = 2601014836;\nvar IFCCURVEBOUNDEDPLANE = 2827736869;\nvar IFCCURVEBOUNDEDSURFACE = 2629017746;\nvar IFCCURVESEGMENT2D = 1186437898;\nvar IFCCURVESTYLE = 3800577675;\nvar IFCCURVESTYLEFONT = 1105321065;\nvar IFCCURVESTYLEFONTANDSCALING = 2367409068;\nvar IFCCURVESTYLEFONTPATTERN = 3510044353;\nvar IFCCYLINDRICALSURFACE = 1213902940;\nvar IFCDAMPER = 4074379575;\nvar IFCDAMPERTYPE = 3961806047;\nvar IFCDEEPFOUNDATION = 3426335179;\nvar IFCDEEPFOUNDATIONTYPE = 1306400036;\nvar IFCDERIVEDPROFILEDEF = 3632507154;\nvar IFCDERIVEDUNIT = 1765591967;\nvar IFCDERIVEDUNITELEMENT = 1045800335;\nvar IFCDIMENSIONALEXPONENTS = 2949456006;\nvar IFCDIRECTION = 32440307;\nvar IFCDISCRETEACCESSORY = 1335981549;\nvar IFCDISCRETEACCESSORYTYPE = 2635815018;\nvar IFCDISTANCEEXPRESSION = 1945343521;\nvar IFCDISTRIBUTIONCHAMBERELEMENT = 1052013943;\nvar IFCDISTRIBUTIONCHAMBERELEMENTTYPE = 1599208980;\nvar IFCDISTRIBUTIONCIRCUIT = 562808652;\nvar IFCDISTRIBUTIONCONTROLELEMENT = 1062813311;\nvar IFCDISTRIBUTIONCONTROLELEMENTTYPE = 2063403501;\nvar IFCDISTRIBUTIONELEMENT = 1945004755;\nvar IFCDISTRIBUTIONELEMENTTYPE = 3256556792;\nvar IFCDISTRIBUTIONFLOWELEMENT = 3040386961;\nvar IFCDISTRIBUTIONFLOWELEMENTTYPE = 3849074793;\nvar IFCDISTRIBUTIONPORT = 3041715199;\nvar IFCDISTRIBUTIONSYSTEM = 3205830791;\nvar IFCDOCUMENTINFORMATION = 1154170062;\nvar IFCDOCUMENTINFORMATIONRELATIONSHIP = 770865208;\nvar IFCDOCUMENTREFERENCE = 3732053477;\nvar IFCDOOR = 395920057;\nvar IFCDOORLININGPROPERTIES = 2963535650;\nvar IFCDOORPANELPROPERTIES = 1714330368;\nvar IFCDOORSTANDARDCASE = 3242481149;\nvar IFCDOORSTYLE = 526551008;\nvar IFCDOORTYPE = 2323601079;\nvar IFCDRAUGHTINGPREDEFINEDCOLOUR = 445594917;\nvar IFCDRAUGHTINGPREDEFINEDCURVEFONT = 4006246654;\nvar IFCDUCTFITTING = 342316401;\nvar IFCDUCTFITTINGTYPE = 869906466;\nvar IFCDUCTSEGMENT = 3518393246;\nvar IFCDUCTSEGMENTTYPE = 3760055223;\nvar IFCDUCTSILENCER = 1360408905;\nvar IFCDUCTSILENCERTYPE = 2030761528;\nvar IFCEDGE = 3900360178;\nvar IFCEDGECURVE = 476780140;\nvar IFCEDGELOOP = 1472233963;\nvar IFCELECTRICAPPLIANCE = 1904799276;\nvar IFCELECTRICAPPLIANCETYPE = 663422040;\nvar IFCELECTRICDISTRIBUTIONBOARD = 862014818;\nvar IFCELECTRICDISTRIBUTIONBOARDTYPE = 2417008758;\nvar IFCELECTRICFLOWSTORAGEDEVICE = 3310460725;\nvar IFCELECTRICFLOWSTORAGEDEVICETYPE = 3277789161;\nvar IFCELECTRICGENERATOR = 264262732;\nvar IFCELECTRICGENERATORTYPE = 1534661035;\nvar IFCELECTRICMOTOR = 402227799;\nvar IFCELECTRICMOTORTYPE = 1217240411;\nvar IFCELECTRICTIMECONTROL = 1003880860;\nvar IFCELECTRICTIMECONTROLTYPE = 712377611;\nvar IFCELEMENT = 1758889154;\nvar IFCELEMENTASSEMBLY = 4123344466;\nvar IFCELEMENTASSEMBLYTYPE = 2397081782;\nvar IFCELEMENTCOMPONENT = 1623761950;\nvar IFCELEMENTCOMPONENTTYPE = 2590856083;\nvar IFCELEMENTQUANTITY = 1883228015;\nvar IFCELEMENTTYPE = 339256511;\nvar IFCELEMENTARYSURFACE = 2777663545;\nvar IFCELLIPSE = 1704287377;\nvar IFCELLIPSEPROFILEDEF = 2835456948;\nvar IFCENERGYCONVERSIONDEVICE = 1658829314;\nvar IFCENERGYCONVERSIONDEVICETYPE = 2107101300;\nvar IFCENGINE = 2814081492;\nvar IFCENGINETYPE = 132023988;\nvar IFCEVAPORATIVECOOLER = 3747195512;\nvar IFCEVAPORATIVECOOLERTYPE = 3174744832;\nvar IFCEVAPORATOR = 484807127;\nvar IFCEVAPORATORTYPE = 3390157468;\nvar IFCEVENT = 4148101412;\nvar IFCEVENTTIME = 211053100;\nvar IFCEVENTTYPE = 4024345920;\nvar IFCEXTENDEDPROPERTIES = 297599258;\nvar IFCEXTERNALINFORMATION = 4294318154;\nvar IFCEXTERNALREFERENCE = 3200245327;\nvar IFCEXTERNALREFERENCERELATIONSHIP = 1437805879;\nvar IFCEXTERNALSPATIALELEMENT = 1209101575;\nvar IFCEXTERNALSPATIALSTRUCTUREELEMENT = 2853485674;\nvar IFCEXTERNALLYDEFINEDHATCHSTYLE = 2242383968;\nvar IFCEXTERNALLYDEFINEDSURFACESTYLE = 1040185647;\nvar IFCEXTERNALLYDEFINEDTEXTFONT = 3548104201;\nvar IFCEXTRUDEDAREASOLID = 477187591;\nvar IFCEXTRUDEDAREASOLIDTAPERED = 2804161546;\nvar IFCFACE = 2556980723;\nvar IFCFACEBASEDSURFACEMODEL = 2047409740;\nvar IFCFACEBOUND = 1809719519;\nvar IFCFACEOUTERBOUND = 803316827;\nvar IFCFACESURFACE = 3008276851;\nvar IFCFACETEDBREP = 807026263;\nvar IFCFACETEDBREPWITHVOIDS = 3737207727;\nvar IFCFACILITY = 24185140;\nvar IFCFACILITYPART = 1310830890;\nvar IFCFAILURECONNECTIONCONDITION = 4219587988;\nvar IFCFAN = 3415622556;\nvar IFCFANTYPE = 346874300;\nvar IFCFASTENER = 647756555;\nvar IFCFASTENERTYPE = 2489546625;\nvar IFCFEATUREELEMENT = 2827207264;\nvar IFCFEATUREELEMENTADDITION = 2143335405;\nvar IFCFEATUREELEMENTSUBTRACTION = 1287392070;\nvar IFCFILLAREASTYLE = 738692330;\nvar IFCFILLAREASTYLEHATCHING = 374418227;\nvar IFCFILLAREASTYLETILES = 315944413;\nvar IFCFILTER = 819412036;\nvar IFCFILTERTYPE = 1810631287;\nvar IFCFIRESUPPRESSIONTERMINAL = 1426591983;\nvar IFCFIRESUPPRESSIONTERMINALTYPE = 4222183408;\nvar IFCFIXEDREFERENCESWEPTAREASOLID = 2652556860;\nvar IFCFLOWCONTROLLER = 2058353004;\nvar IFCFLOWCONTROLLERTYPE = 3907093117;\nvar IFCFLOWFITTING = 4278956645;\nvar IFCFLOWFITTINGTYPE = 3198132628;\nvar IFCFLOWINSTRUMENT = 182646315;\nvar IFCFLOWINSTRUMENTTYPE = 4037862832;\nvar IFCFLOWMETER = 2188021234;\nvar IFCFLOWMETERTYPE = 3815607619;\nvar IFCFLOWMOVINGDEVICE = 3132237377;\nvar IFCFLOWMOVINGDEVICETYPE = 1482959167;\nvar IFCFLOWSEGMENT = 987401354;\nvar IFCFLOWSEGMENTTYPE = 1834744321;\nvar IFCFLOWSTORAGEDEVICE = 707683696;\nvar IFCFLOWSTORAGEDEVICETYPE = 1339347760;\nvar IFCFLOWTERMINAL = 2223149337;\nvar IFCFLOWTERMINALTYPE = 2297155007;\nvar IFCFLOWTREATMENTDEVICE = 3508470533;\nvar IFCFLOWTREATMENTDEVICETYPE = 3009222698;\nvar IFCFOOTING = 900683007;\nvar IFCFOOTINGTYPE = 1893162501;\nvar IFCFURNISHINGELEMENT = 263784265;\nvar IFCFURNISHINGELEMENTTYPE = 4238390223;\nvar IFCFURNITURE = 1509553395;\nvar IFCFURNITURETYPE = 1268542332;\nvar IFCGEOGRAPHICELEMENT = 3493046030;\nvar IFCGEOGRAPHICELEMENTTYPE = 4095422895;\nvar IFCGEOMETRICCURVESET = 987898635;\nvar IFCGEOMETRICREPRESENTATIONCONTEXT = 3448662350;\nvar IFCGEOMETRICREPRESENTATIONITEM = 2453401579;\nvar IFCGEOMETRICREPRESENTATIONSUBCONTEXT = 4142052618;\nvar IFCGEOMETRICSET = 3590301190;\nvar IFCGRID = 3009204131;\nvar IFCGRIDAXIS = 852622518;\nvar IFCGRIDPLACEMENT = 178086475;\nvar IFCGROUP = 2706460486;\nvar IFCHALFSPACESOLID = 812098782;\nvar IFCHEATEXCHANGER = 3319311131;\nvar IFCHEATEXCHANGERTYPE = 1251058090;\nvar IFCHUMIDIFIER = 2068733104;\nvar IFCHUMIDIFIERTYPE = 1806887404;\nvar IFCISHAPEPROFILEDEF = 1484403080;\nvar IFCIMAGETEXTURE = 3905492369;\nvar IFCINDEXEDCOLOURMAP = 3570813810;\nvar IFCINDEXEDPOLYCURVE = 2571569899;\nvar IFCINDEXEDPOLYGONALFACE = 178912537;\nvar IFCINDEXEDPOLYGONALFACEWITHVOIDS = 2294589976;\nvar IFCINDEXEDTEXTUREMAP = 1437953363;\nvar IFCINDEXEDTRIANGLETEXTUREMAP = 2133299955;\nvar IFCINTERCEPTOR = 4175244083;\nvar IFCINTERCEPTORTYPE = 3946677679;\nvar IFCINTERSECTIONCURVE = 3113134337;\nvar IFCINVENTORY = 2391368822;\nvar IFCIRREGULARTIMESERIES = 3741457305;\nvar IFCIRREGULARTIMESERIESVALUE = 3020489413;\nvar IFCJUNCTIONBOX = 2176052936;\nvar IFCJUNCTIONBOXTYPE = 4288270099;\nvar IFCLSHAPEPROFILEDEF = 572779678;\nvar IFCLABORRESOURCE = 3827777499;\nvar IFCLABORRESOURCETYPE = 428585644;\nvar IFCLAGTIME = 1585845231;\nvar IFCLAMP = 76236018;\nvar IFCLAMPTYPE = 1051575348;\nvar IFCLIBRARYINFORMATION = 2655187982;\nvar IFCLIBRARYREFERENCE = 3452421091;\nvar IFCLIGHTDISTRIBUTIONDATA = 4162380809;\nvar IFCLIGHTFIXTURE = 629592764;\nvar IFCLIGHTFIXTURETYPE = 1161773419;\nvar IFCLIGHTINTENSITYDISTRIBUTION = 1566485204;\nvar IFCLIGHTSOURCE = 1402838566;\nvar IFCLIGHTSOURCEAMBIENT = 125510826;\nvar IFCLIGHTSOURCEDIRECTIONAL = 2604431987;\nvar IFCLIGHTSOURCEGONIOMETRIC = 4266656042;\nvar IFCLIGHTSOURCEPOSITIONAL = 1520743889;\nvar IFCLIGHTSOURCESPOT = 3422422726;\nvar IFCLINE = 1281925730;\nvar IFCLINESEGMENT2D = 3092502836;\nvar IFCLINEARPLACEMENT = 388784114;\nvar IFCLINEARPOSITIONINGELEMENT = 1154579445;\nvar IFCLOCALPLACEMENT = 2624227202;\nvar IFCLOOP = 1008929658;\nvar IFCMANIFOLDSOLIDBREP = 1425443689;\nvar IFCMAPCONVERSION = 3057273783;\nvar IFCMAPPEDITEM = 2347385850;\nvar IFCMATERIAL = 1838606355;\nvar IFCMATERIALCLASSIFICATIONRELATIONSHIP = 1847130766;\nvar IFCMATERIALCONSTITUENT = 3708119e3;\nvar IFCMATERIALCONSTITUENTSET = 2852063980;\nvar IFCMATERIALDEFINITION = 760658860;\nvar IFCMATERIALDEFINITIONREPRESENTATION = 2022407955;\nvar IFCMATERIALLAYER = 248100487;\nvar IFCMATERIALLAYERSET = 3303938423;\nvar IFCMATERIALLAYERSETUSAGE = 1303795690;\nvar IFCMATERIALLAYERWITHOFFSETS = 1847252529;\nvar IFCMATERIALLIST = 2199411900;\nvar IFCMATERIALPROFILE = 2235152071;\nvar IFCMATERIALPROFILESET = 164193824;\nvar IFCMATERIALPROFILESETUSAGE = 3079605661;\nvar IFCMATERIALPROFILESETUSAGETAPERING = 3404854881;\nvar IFCMATERIALPROFILEWITHOFFSETS = 552965576;\nvar IFCMATERIALPROPERTIES = 3265635763;\nvar IFCMATERIALRELATIONSHIP = 853536259;\nvar IFCMATERIALUSAGEDEFINITION = 1507914824;\nvar IFCMEASUREWITHUNIT = 2597039031;\nvar IFCMECHANICALFASTENER = 377706215;\nvar IFCMECHANICALFASTENERTYPE = 2108223431;\nvar IFCMEDICALDEVICE = 1437502449;\nvar IFCMEDICALDEVICETYPE = 1114901282;\nvar IFCMEMBER = 1073191201;\nvar IFCMEMBERSTANDARDCASE = 1911478936;\nvar IFCMEMBERTYPE = 3181161470;\nvar IFCMETRIC = 3368373690;\nvar IFCMIRROREDPROFILEDEF = 2998442950;\nvar IFCMONETARYUNIT = 2706619895;\nvar IFCMOTORCONNECTION = 2474470126;\nvar IFCMOTORCONNECTIONTYPE = 977012517;\nvar IFCNAMEDUNIT = 1918398963;\nvar IFCOBJECT = 3888040117;\nvar IFCOBJECTDEFINITION = 219451334;\nvar IFCOBJECTPLACEMENT = 3701648758;\nvar IFCOBJECTIVE = 2251480897;\nvar IFCOCCUPANT = 4143007308;\nvar IFCOFFSETCURVE = 590820931;\nvar IFCOFFSETCURVE2D = 3388369263;\nvar IFCOFFSETCURVE3D = 3505215534;\nvar IFCOFFSETCURVEBYDISTANCES = 2485787929;\nvar IFCOPENSHELL = 2665983363;\nvar IFCOPENINGELEMENT = 3588315303;\nvar IFCOPENINGSTANDARDCASE = 3079942009;\nvar IFCORGANIZATION = 4251960020;\nvar IFCORGANIZATIONRELATIONSHIP = 1411181986;\nvar IFCORIENTATIONEXPRESSION = 643959842;\nvar IFCORIENTEDEDGE = 1029017970;\nvar IFCOUTERBOUNDARYCURVE = 144952367;\nvar IFCOUTLET = 3694346114;\nvar IFCOUTLETTYPE = 2837617999;\nvar IFCOWNERHISTORY = 1207048766;\nvar IFCPARAMETERIZEDPROFILEDEF = 2529465313;\nvar IFCPATH = 2519244187;\nvar IFCPCURVE = 1682466193;\nvar IFCPERFORMANCEHISTORY = 2382730787;\nvar IFCPERMEABLECOVERINGPROPERTIES = 3566463478;\nvar IFCPERMIT = 3327091369;\nvar IFCPERSON = 2077209135;\nvar IFCPERSONANDORGANIZATION = 101040310;\nvar IFCPHYSICALCOMPLEXQUANTITY = 3021840470;\nvar IFCPHYSICALQUANTITY = 2483315170;\nvar IFCPHYSICALSIMPLEQUANTITY = 2226359599;\nvar IFCPILE = 1687234759;\nvar IFCPILETYPE = 1158309216;\nvar IFCPIPEFITTING = 310824031;\nvar IFCPIPEFITTINGTYPE = 804291784;\nvar IFCPIPESEGMENT = 3612865200;\nvar IFCPIPESEGMENTTYPE = 4231323485;\nvar IFCPIXELTEXTURE = 597895409;\nvar IFCPLACEMENT = 2004835150;\nvar IFCPLANARBOX = 603570806;\nvar IFCPLANAREXTENT = 1663979128;\nvar IFCPLANE = 220341763;\nvar IFCPLATE = 3171933400;\nvar IFCPLATESTANDARDCASE = 1156407060;\nvar IFCPLATETYPE = 4017108033;\nvar IFCPOINT = 2067069095;\nvar IFCPOINTONCURVE = 4022376103;\nvar IFCPOINTONSURFACE = 1423911732;\nvar IFCPOLYLOOP = 2924175390;\nvar IFCPOLYGONALBOUNDEDHALFSPACE = 2775532180;\nvar IFCPOLYGONALFACESET = 2839578677;\nvar IFCPOLYLINE = 3724593414;\nvar IFCPORT = 3740093272;\nvar IFCPOSITIONINGELEMENT = 1946335990;\nvar IFCPOSTALADDRESS = 3355820592;\nvar IFCPREDEFINEDCOLOUR = 759155922;\nvar IFCPREDEFINEDCURVEFONT = 2559016684;\nvar IFCPREDEFINEDITEM = 3727388367;\nvar IFCPREDEFINEDPROPERTIES = 3778827333;\nvar IFCPREDEFINEDPROPERTYSET = 3967405729;\nvar IFCPREDEFINEDTEXTFONT = 1775413392;\nvar IFCPRESENTATIONITEM = 677532197;\nvar IFCPRESENTATIONLAYERASSIGNMENT = 2022622350;\nvar IFCPRESENTATIONLAYERWITHSTYLE = 1304840413;\nvar IFCPRESENTATIONSTYLE = 3119450353;\nvar IFCPRESENTATIONSTYLEASSIGNMENT = 2417041796;\nvar IFCPROCEDURE = 2744685151;\nvar IFCPROCEDURETYPE = 569719735;\nvar IFCPROCESS = 2945172077;\nvar IFCPRODUCT = 4208778838;\nvar IFCPRODUCTDEFINITIONSHAPE = 673634403;\nvar IFCPRODUCTREPRESENTATION = 2095639259;\nvar IFCPROFILEDEF = 3958567839;\nvar IFCPROFILEPROPERTIES = 2802850158;\nvar IFCPROJECT = 103090709;\nvar IFCPROJECTLIBRARY = 653396225;\nvar IFCPROJECTORDER = 2904328755;\nvar IFCPROJECTEDCRS = 3843373140;\nvar IFCPROJECTIONELEMENT = 3651124850;\nvar IFCPROPERTY = 2598011224;\nvar IFCPROPERTYABSTRACTION = 986844984;\nvar IFCPROPERTYBOUNDEDVALUE = 871118103;\nvar IFCPROPERTYDEFINITION = 1680319473;\nvar IFCPROPERTYDEPENDENCYRELATIONSHIP = 148025276;\nvar IFCPROPERTYENUMERATEDVALUE = 4166981789;\nvar IFCPROPERTYENUMERATION = 3710013099;\nvar IFCPROPERTYLISTVALUE = 2752243245;\nvar IFCPROPERTYREFERENCEVALUE = 941946838;\nvar IFCPROPERTYSET = 1451395588;\nvar IFCPROPERTYSETDEFINITION = 3357820518;\nvar IFCPROPERTYSETTEMPLATE = 492091185;\nvar IFCPROPERTYSINGLEVALUE = 3650150729;\nvar IFCPROPERTYTABLEVALUE = 110355661;\nvar IFCPROPERTYTEMPLATE = 3521284610;\nvar IFCPROPERTYTEMPLATEDEFINITION = 1482703590;\nvar IFCPROTECTIVEDEVICE = 738039164;\nvar IFCPROTECTIVEDEVICETRIPPINGUNIT = 2295281155;\nvar IFCPROTECTIVEDEVICETRIPPINGUNITTYPE = 655969474;\nvar IFCPROTECTIVEDEVICETYPE = 1842657554;\nvar IFCPROXY = 3219374653;\nvar IFCPUMP = 90941305;\nvar IFCPUMPTYPE = 2250791053;\nvar IFCQUANTITYAREA = 2044713172;\nvar IFCQUANTITYCOUNT = 2093928680;\nvar IFCQUANTITYLENGTH = 931644368;\nvar IFCQUANTITYSET = 2090586900;\nvar IFCQUANTITYTIME = 3252649465;\nvar IFCQUANTITYVOLUME = 2405470396;\nvar IFCQUANTITYWEIGHT = 825690147;\nvar IFCRAILING = 2262370178;\nvar IFCRAILINGTYPE = 2893384427;\nvar IFCRAMP = 3024970846;\nvar IFCRAMPFLIGHT = 3283111854;\nvar IFCRAMPFLIGHTTYPE = 2324767716;\nvar IFCRAMPTYPE = 1469900589;\nvar IFCRATIONALBSPLINECURVEWITHKNOTS = 1232101972;\nvar IFCRATIONALBSPLINESURFACEWITHKNOTS = 683857671;\nvar IFCRECTANGLEHOLLOWPROFILEDEF = 2770003689;\nvar IFCRECTANGLEPROFILEDEF = 3615266464;\nvar IFCRECTANGULARPYRAMID = 2798486643;\nvar IFCRECTANGULARTRIMMEDSURFACE = 3454111270;\nvar IFCRECURRENCEPATTERN = 3915482550;\nvar IFCREFERENCE = 2433181523;\nvar IFCREFERENT = 4021432810;\nvar IFCREGULARTIMESERIES = 3413951693;\nvar IFCREINFORCEMENTBARPROPERTIES = 1580146022;\nvar IFCREINFORCEMENTDEFINITIONPROPERTIES = 3765753017;\nvar IFCREINFORCINGBAR = 979691226;\nvar IFCREINFORCINGBARTYPE = 2572171363;\nvar IFCREINFORCINGELEMENT = 3027567501;\nvar IFCREINFORCINGELEMENTTYPE = 964333572;\nvar IFCREINFORCINGMESH = 2320036040;\nvar IFCREINFORCINGMESHTYPE = 2310774935;\nvar IFCRELAGGREGATES = 160246688;\nvar IFCRELASSIGNS = 3939117080;\nvar IFCRELASSIGNSTOACTOR = 1683148259;\nvar IFCRELASSIGNSTOCONTROL = 2495723537;\nvar IFCRELASSIGNSTOGROUP = 1307041759;\nvar IFCRELASSIGNSTOGROUPBYFACTOR = 1027710054;\nvar IFCRELASSIGNSTOPROCESS = 4278684876;\nvar IFCRELASSIGNSTOPRODUCT = 2857406711;\nvar IFCRELASSIGNSTORESOURCE = 205026976;\nvar IFCRELASSOCIATES = 1865459582;\nvar IFCRELASSOCIATESAPPROVAL = 4095574036;\nvar IFCRELASSOCIATESCLASSIFICATION = 919958153;\nvar IFCRELASSOCIATESCONSTRAINT = 2728634034;\nvar IFCRELASSOCIATESDOCUMENT = 982818633;\nvar IFCRELASSOCIATESLIBRARY = 3840914261;\nvar IFCRELASSOCIATESMATERIAL = 2655215786;\nvar IFCRELCONNECTS = 826625072;\nvar IFCRELCONNECTSELEMENTS = 1204542856;\nvar IFCRELCONNECTSPATHELEMENTS = 3945020480;\nvar IFCRELCONNECTSPORTTOELEMENT = 4201705270;\nvar IFCRELCONNECTSPORTS = 3190031847;\nvar IFCRELCONNECTSSTRUCTURALACTIVITY = 2127690289;\nvar IFCRELCONNECTSSTRUCTURALMEMBER = 1638771189;\nvar IFCRELCONNECTSWITHECCENTRICITY = 504942748;\nvar IFCRELCONNECTSWITHREALIZINGELEMENTS = 3678494232;\nvar IFCRELCONTAINEDINSPATIALSTRUCTURE = 3242617779;\nvar IFCRELCOVERSBLDGELEMENTS = 886880790;\nvar IFCRELCOVERSSPACES = 2802773753;\nvar IFCRELDECLARES = 2565941209;\nvar IFCRELDECOMPOSES = 2551354335;\nvar IFCRELDEFINES = 693640335;\nvar IFCRELDEFINESBYOBJECT = 1462361463;\nvar IFCRELDEFINESBYPROPERTIES = 4186316022;\nvar IFCRELDEFINESBYTEMPLATE = 307848117;\nvar IFCRELDEFINESBYTYPE = 781010003;\nvar IFCRELFILLSELEMENT = 3940055652;\nvar IFCRELFLOWCONTROLELEMENTS = 279856033;\nvar IFCRELINTERFERESELEMENTS = 427948657;\nvar IFCRELNESTS = 3268803585;\nvar IFCRELPOSITIONS = 1441486842;\nvar IFCRELPROJECTSELEMENT = 750771296;\nvar IFCRELREFERENCEDINSPATIALSTRUCTURE = 1245217292;\nvar IFCRELSEQUENCE = 4122056220;\nvar IFCRELSERVICESBUILDINGS = 366585022;\nvar IFCRELSPACEBOUNDARY = 3451746338;\nvar IFCRELSPACEBOUNDARY1STLEVEL = 3523091289;\nvar IFCRELSPACEBOUNDARY2NDLEVEL = 1521410863;\nvar IFCRELVOIDSELEMENT = 1401173127;\nvar IFCRELATIONSHIP = 478536968;\nvar IFCREPARAMETRISEDCOMPOSITECURVESEGMENT = 816062949;\nvar IFCREPRESENTATION = 1076942058;\nvar IFCREPRESENTATIONCONTEXT = 3377609919;\nvar IFCREPRESENTATIONITEM = 3008791417;\nvar IFCREPRESENTATIONMAP = 1660063152;\nvar IFCRESOURCE = 2914609552;\nvar IFCRESOURCEAPPROVALRELATIONSHIP = 2943643501;\nvar IFCRESOURCECONSTRAINTRELATIONSHIP = 1608871552;\nvar IFCRESOURCELEVELRELATIONSHIP = 2439245199;\nvar IFCRESOURCETIME = 1042787934;\nvar IFCREVOLVEDAREASOLID = 1856042241;\nvar IFCREVOLVEDAREASOLIDTAPERED = 3243963512;\nvar IFCRIGHTCIRCULARCONE = 4158566097;\nvar IFCRIGHTCIRCULARCYLINDER = 3626867408;\nvar IFCROOF = 2016517767;\nvar IFCROOFTYPE = 2781568857;\nvar IFCROOT = 2341007311;\nvar IFCROUNDEDRECTANGLEPROFILEDEF = 2778083089;\nvar IFCSIUNIT = 448429030;\nvar IFCSANITARYTERMINAL = 3053780830;\nvar IFCSANITARYTERMINALTYPE = 1768891740;\nvar IFCSCHEDULINGTIME = 1054537805;\nvar IFCSEAMCURVE = 2157484638;\nvar IFCSECTIONPROPERTIES = 2042790032;\nvar IFCSECTIONREINFORCEMENTPROPERTIES = 4165799628;\nvar IFCSECTIONEDSOLID = 1862484736;\nvar IFCSECTIONEDSOLIDHORIZONTAL = 1290935644;\nvar IFCSECTIONEDSPINE = 1509187699;\nvar IFCSENSOR = 4086658281;\nvar IFCSENSORTYPE = 1783015770;\nvar IFCSHADINGDEVICE = 1329646415;\nvar IFCSHADINGDEVICETYPE = 4074543187;\nvar IFCSHAPEASPECT = 867548509;\nvar IFCSHAPEMODEL = 3982875396;\nvar IFCSHAPEREPRESENTATION = 4240577450;\nvar IFCSHELLBASEDSURFACEMODEL = 4124623270;\nvar IFCSIMPLEPROPERTY = 3692461612;\nvar IFCSIMPLEPROPERTYTEMPLATE = 3663146110;\nvar IFCSITE = 4097777520;\nvar IFCSLAB = 1529196076;\nvar IFCSLABELEMENTEDCASE = 3127900445;\nvar IFCSLABSTANDARDCASE = 3027962421;\nvar IFCSLABTYPE = 2533589738;\nvar IFCSLIPPAGECONNECTIONCONDITION = 2609359061;\nvar IFCSOLARDEVICE = 3420628829;\nvar IFCSOLARDEVICETYPE = 1072016465;\nvar IFCSOLIDMODEL = 723233188;\nvar IFCSPACE = 3856911033;\nvar IFCSPACEHEATER = 1999602285;\nvar IFCSPACEHEATERTYPE = 1305183839;\nvar IFCSPACETYPE = 3812236995;\nvar IFCSPATIALELEMENT = 1412071761;\nvar IFCSPATIALELEMENTTYPE = 710998568;\nvar IFCSPATIALSTRUCTUREELEMENT = 2706606064;\nvar IFCSPATIALSTRUCTUREELEMENTTYPE = 3893378262;\nvar IFCSPATIALZONE = 463610769;\nvar IFCSPATIALZONETYPE = 2481509218;\nvar IFCSPHERE = 451544542;\nvar IFCSPHERICALSURFACE = 4015995234;\nvar IFCSTACKTERMINAL = 1404847402;\nvar IFCSTACKTERMINALTYPE = 3112655638;\nvar IFCSTAIR = 331165859;\nvar IFCSTAIRFLIGHT = 4252922144;\nvar IFCSTAIRFLIGHTTYPE = 1039846685;\nvar IFCSTAIRTYPE = 338393293;\nvar IFCSTRUCTURALACTION = 682877961;\nvar IFCSTRUCTURALACTIVITY = 3544373492;\nvar IFCSTRUCTURALANALYSISMODEL = 2515109513;\nvar IFCSTRUCTURALCONNECTION = 1179482911;\nvar IFCSTRUCTURALCONNECTIONCONDITION = 2273995522;\nvar IFCSTRUCTURALCURVEACTION = 1004757350;\nvar IFCSTRUCTURALCURVECONNECTION = 4243806635;\nvar IFCSTRUCTURALCURVEMEMBER = 214636428;\nvar IFCSTRUCTURALCURVEMEMBERVARYING = 2445595289;\nvar IFCSTRUCTURALCURVEREACTION = 2757150158;\nvar IFCSTRUCTURALITEM = 3136571912;\nvar IFCSTRUCTURALLINEARACTION = 1807405624;\nvar IFCSTRUCTURALLOAD = 2162789131;\nvar IFCSTRUCTURALLOADCASE = 385403989;\nvar IFCSTRUCTURALLOADCONFIGURATION = 3478079324;\nvar IFCSTRUCTURALLOADGROUP = 1252848954;\nvar IFCSTRUCTURALLOADLINEARFORCE = 1595516126;\nvar IFCSTRUCTURALLOADORRESULT = 609421318;\nvar IFCSTRUCTURALLOADPLANARFORCE = 2668620305;\nvar IFCSTRUCTURALLOADSINGLEDISPLACEMENT = 2473145415;\nvar IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION = 1973038258;\nvar IFCSTRUCTURALLOADSINGLEFORCE = 1597423693;\nvar IFCSTRUCTURALLOADSINGLEFORCEWARPING = 1190533807;\nvar IFCSTRUCTURALLOADSTATIC = 2525727697;\nvar IFCSTRUCTURALLOADTEMPERATURE = 3408363356;\nvar IFCSTRUCTURALMEMBER = 530289379;\nvar IFCSTRUCTURALPLANARACTION = 1621171031;\nvar IFCSTRUCTURALPOINTACTION = 2082059205;\nvar IFCSTRUCTURALPOINTCONNECTION = 734778138;\nvar IFCSTRUCTURALPOINTREACTION = 1235345126;\nvar IFCSTRUCTURALREACTION = 3689010777;\nvar IFCSTRUCTURALRESULTGROUP = 2986769608;\nvar IFCSTRUCTURALSURFACEACTION = 3657597509;\nvar IFCSTRUCTURALSURFACECONNECTION = 1975003073;\nvar IFCSTRUCTURALSURFACEMEMBER = 3979015343;\nvar IFCSTRUCTURALSURFACEMEMBERVARYING = 2218152070;\nvar IFCSTRUCTURALSURFACEREACTION = 603775116;\nvar IFCSTYLEMODEL = 2830218821;\nvar IFCSTYLEDITEM = 3958052878;\nvar IFCSTYLEDREPRESENTATION = 3049322572;\nvar IFCSUBCONTRACTRESOURCE = 148013059;\nvar IFCSUBCONTRACTRESOURCETYPE = 4095615324;\nvar IFCSUBEDGE = 2233826070;\nvar IFCSURFACE = 2513912981;\nvar IFCSURFACECURVE = 699246055;\nvar IFCSURFACECURVESWEPTAREASOLID = 2028607225;\nvar IFCSURFACEFEATURE = 3101698114;\nvar IFCSURFACEOFLINEAREXTRUSION = 2809605785;\nvar IFCSURFACEOFREVOLUTION = 4124788165;\nvar IFCSURFACEREINFORCEMENTAREA = 2934153892;\nvar IFCSURFACESTYLE = 1300840506;\nvar IFCSURFACESTYLELIGHTING = 3303107099;\nvar IFCSURFACESTYLEREFRACTION = 1607154358;\nvar IFCSURFACESTYLERENDERING = 1878645084;\nvar IFCSURFACESTYLESHADING = 846575682;\nvar IFCSURFACESTYLEWITHTEXTURES = 1351298697;\nvar IFCSURFACETEXTURE = 626085974;\nvar IFCSWEPTAREASOLID = 2247615214;\nvar IFCSWEPTDISKSOLID = 1260650574;\nvar IFCSWEPTDISKSOLIDPOLYGONAL = 1096409881;\nvar IFCSWEPTSURFACE = 230924584;\nvar IFCSWITCHINGDEVICE = 1162798199;\nvar IFCSWITCHINGDEVICETYPE = 2315554128;\nvar IFCSYSTEM = 2254336722;\nvar IFCSYSTEMFURNITUREELEMENT = 413509423;\nvar IFCSYSTEMFURNITUREELEMENTTYPE = 1580310250;\nvar IFCTSHAPEPROFILEDEF = 3071757647;\nvar IFCTABLE = 985171141;\nvar IFCTABLECOLUMN = 2043862942;\nvar IFCTABLEROW = 531007025;\nvar IFCTANK = 812556717;\nvar IFCTANKTYPE = 5716631;\nvar IFCTASK = 3473067441;\nvar IFCTASKTIME = 1549132990;\nvar IFCTASKTIMERECURRING = 2771591690;\nvar IFCTASKTYPE = 3206491090;\nvar IFCTELECOMADDRESS = 912023232;\nvar IFCTENDON = 3824725483;\nvar IFCTENDONANCHOR = 2347447852;\nvar IFCTENDONANCHORTYPE = 3081323446;\nvar IFCTENDONCONDUIT = 3663046924;\nvar IFCTENDONCONDUITTYPE = 2281632017;\nvar IFCTENDONTYPE = 2415094496;\nvar IFCTESSELLATEDFACESET = 2387106220;\nvar IFCTESSELLATEDITEM = 901063453;\nvar IFCTEXTLITERAL = 4282788508;\nvar IFCTEXTLITERALWITHEXTENT = 3124975700;\nvar IFCTEXTSTYLE = 1447204868;\nvar IFCTEXTSTYLEFONTMODEL = 1983826977;\nvar IFCTEXTSTYLEFORDEFINEDFONT = 2636378356;\nvar IFCTEXTSTYLETEXTMODEL = 1640371178;\nvar IFCTEXTURECOORDINATE = 280115917;\nvar IFCTEXTURECOORDINATEGENERATOR = 1742049831;\nvar IFCTEXTUREMAP = 2552916305;\nvar IFCTEXTUREVERTEX = 1210645708;\nvar IFCTEXTUREVERTEXLIST = 3611470254;\nvar IFCTIMEPERIOD = 1199560280;\nvar IFCTIMESERIES = 3101149627;\nvar IFCTIMESERIESVALUE = 581633288;\nvar IFCTOPOLOGICALREPRESENTATIONITEM = 1377556343;\nvar IFCTOPOLOGYREPRESENTATION = 1735638870;\nvar IFCTOROIDALSURFACE = 1935646853;\nvar IFCTRANSFORMER = 3825984169;\nvar IFCTRANSFORMERTYPE = 1692211062;\nvar IFCTRANSITIONCURVESEGMENT2D = 2595432518;\nvar IFCTRANSPORTELEMENT = 1620046519;\nvar IFCTRANSPORTELEMENTTYPE = 2097647324;\nvar IFCTRAPEZIUMPROFILEDEF = 2715220739;\nvar IFCTRIANGULATEDFACESET = 2916149573;\nvar IFCTRIANGULATEDIRREGULARNETWORK = 1229763772;\nvar IFCTRIMMEDCURVE = 3593883385;\nvar IFCTUBEBUNDLE = 3026737570;\nvar IFCTUBEBUNDLETYPE = 1600972822;\nvar IFCTYPEOBJECT = 1628702193;\nvar IFCTYPEPROCESS = 3736923433;\nvar IFCTYPEPRODUCT = 2347495698;\nvar IFCTYPERESOURCE = 3698973494;\nvar IFCUSHAPEPROFILEDEF = 427810014;\nvar IFCUNITASSIGNMENT = 180925521;\nvar IFCUNITARYCONTROLELEMENT = 630975310;\nvar IFCUNITARYCONTROLELEMENTTYPE = 3179687236;\nvar IFCUNITARYEQUIPMENT = 4292641817;\nvar IFCUNITARYEQUIPMENTTYPE = 1911125066;\nvar IFCVALVE = 4207607924;\nvar IFCVALVETYPE = 728799441;\nvar IFCVECTOR = 1417489154;\nvar IFCVERTEX = 2799835756;\nvar IFCVERTEXLOOP = 2759199220;\nvar IFCVERTEXPOINT = 1907098498;\nvar IFCVIBRATIONDAMPER = 1530820697;\nvar IFCVIBRATIONDAMPERTYPE = 3956297820;\nvar IFCVIBRATIONISOLATOR = 2391383451;\nvar IFCVIBRATIONISOLATORTYPE = 3313531582;\nvar IFCVIRTUALELEMENT = 2769231204;\nvar IFCVIRTUALGRIDINTERSECTION = 891718957;\nvar IFCVOIDINGFEATURE = 926996030;\nvar IFCWALL = 2391406946;\nvar IFCWALLELEMENTEDCASE = 4156078855;\nvar IFCWALLSTANDARDCASE = 3512223829;\nvar IFCWALLTYPE = 1898987631;\nvar IFCWASTETERMINAL = 4237592921;\nvar IFCWASTETERMINALTYPE = 1133259667;\nvar IFCWINDOW = 3304561284;\nvar IFCWINDOWLININGPROPERTIES = 336235671;\nvar IFCWINDOWPANELPROPERTIES = 512836454;\nvar IFCWINDOWSTANDARDCASE = 486154966;\nvar IFCWINDOWSTYLE = 1299126871;\nvar IFCWINDOWTYPE = 4009809668;\nvar IFCWORKCALENDAR = 4088093105;\nvar IFCWORKCONTROL = 1028945134;\nvar IFCWORKPLAN = 4218914973;\nvar IFCWORKSCHEDULE = 3342526732;\nvar IFCWORKTIME = 1236880293;\nvar IFCZSHAPEPROFILEDEF = 2543172580;\nvar IFCZONE = 1033361043;\nvar IfcElements = [\n  IFCACTUATOR,\n  IFCAIRTERMINAL,\n  IFCAIRTERMINALBOX,\n  IFCAIRTOAIRHEATRECOVERY,\n  IFCALARM,\n  IFCALIGNMENT,\n  IFCANNOTATION,\n  IFCAUDIOVISUALAPPLIANCE,\n  IFCBEAM,\n  IFCBEAMSTANDARDCASE,\n  IFCBEARING,\n  IFCBOILER,\n  IFCBRIDGE,\n  IFCBRIDGEPART,\n  IFCBUILDING,\n  IFCBUILDINGELEMENT,\n  IFCBUILDINGELEMENTPART,\n  IFCBUILDINGELEMENTPROXY,\n  IFCBUILDINGSTOREY,\n  IFCBURNER,\n  IFCCABLECARRIERFITTING,\n  IFCCABLECARRIERSEGMENT,\n  IFCCABLEFITTING,\n  IFCCABLESEGMENT,\n  IFCCAISSONFOUNDATION,\n  IFCCHILLER,\n  IFCCHIMNEY,\n  IFCCIVILELEMENT,\n  IFCCOIL,\n  IFCCOLUMN,\n  IFCCOLUMNSTANDARDCASE,\n  IFCCOMMUNICATIONSAPPLIANCE,\n  IFCCOMPRESSOR,\n  IFCCONDENSER,\n  IFCCONTROLLER,\n  IFCCOOLEDBEAM,\n  IFCCOOLINGTOWER,\n  IFCCOVERING,\n  IFCCURTAINWALL,\n  IFCDAMPER,\n  IFCDEEPFOUNDATION,\n  IFCDISCRETEACCESSORY,\n  IFCDISTRIBUTIONCHAMBERELEMENT,\n  IFCDISTRIBUTIONCONTROLELEMENT,\n  IFCDISTRIBUTIONELEMENT,\n  IFCDISTRIBUTIONFLOWELEMENT,\n  IFCDISTRIBUTIONPORT,\n  IFCDOOR,\n  IFCDOORSTANDARDCASE,\n  IFCDUCTFITTING,\n  IFCDUCTSEGMENT,\n  IFCDUCTSILENCER,\n  IFCELECTRICAPPLIANCE,\n  IFCELECTRICDISTRIBUTIONBOARD,\n  IFCELECTRICFLOWSTORAGEDEVICE,\n  IFCELECTRICGENERATOR,\n  IFCELECTRICMOTOR,\n  IFCELECTRICTIMECONTROL,\n  IFCELEMENT,\n  IFCELEMENTASSEMBLY,\n  IFCELEMENTCOMPONENT,\n  IFCENERGYCONVERSIONDEVICE,\n  IFCENGINE,\n  IFCEVAPORATIVECOOLER,\n  IFCEVAPORATOR,\n  IFCEXTERNALSPATIALELEMENT,\n  IFCEXTERNALSPATIALSTRUCTUREELEMENT,\n  IFCFACILITY,\n  IFCFACILITYPART,\n  IFCFAN,\n  IFCFASTENER,\n  IFCFEATUREELEMENT,\n  IFCFEATUREELEMENTADDITION,\n  IFCFEATUREELEMENTSUBTRACTION,\n  IFCFILTER,\n  IFCFIRESUPPRESSIONTERMINAL,\n  IFCFLOWCONTROLLER,\n  IFCFLOWFITTING,\n  IFCFLOWINSTRUMENT,\n  IFCFLOWMETER,\n  IFCFLOWMOVINGDEVICE,\n  IFCFLOWSEGMENT,\n  IFCFLOWSTORAGEDEVICE,\n  IFCFLOWTERMINAL,\n  IFCFLOWTREATMENTDEVICE,\n  IFCFOOTING,\n  IFCFURNISHINGELEMENT,\n  IFCFURNITURE,\n  IFCGEOGRAPHICELEMENT,\n  IFCGRID,\n  IFCHEATEXCHANGER,\n  IFCHUMIDIFIER,\n  IFCINTERCEPTOR,\n  IFCJUNCTIONBOX,\n  IFCLAMP,\n  IFCLIGHTFIXTURE,\n  IFCLINEARPOSITIONINGELEMENT,\n  IFCMECHANICALFASTENER,\n  IFCMEDICALDEVICE,\n  IFCMEMBER,\n  IFCMEMBERSTANDARDCASE,\n  IFCMOTORCONNECTION,\n  IFCOPENINGELEMENT,\n  IFCOPENINGSTANDARDCASE,\n  IFCOUTLET,\n  IFCPILE,\n  IFCPIPEFITTING,\n  IFCPIPESEGMENT,\n  IFCPLATE,\n  IFCPLATESTANDARDCASE,\n  IFCPORT,\n  IFCPOSITIONINGELEMENT,\n  IFCPROJECTIONELEMENT,\n  IFCPROTECTIVEDEVICE,\n  IFCPROTECTIVEDEVICETRIPPINGUNIT,\n  IFCPROXY,\n  IFCPUMP,\n  IFCRAILING,\n  IFCRAMP,\n  IFCRAMPFLIGHT,\n  IFCREFERENT,\n  IFCREINFORCINGBAR,\n  IFCREINFORCINGELEMENT,\n  IFCREINFORCINGMESH,\n  IFCROOF,\n  IFCSANITARYTERMINAL,\n  IFCSENSOR,\n  IFCSHADINGDEVICE,\n  IFCSITE,\n  IFCSLAB,\n  IFCSLABELEMENTEDCASE,\n  IFCSLABSTANDARDCASE,\n  IFCSOLARDEVICE,\n  IFCSPACE,\n  IFCSPACEHEATER,\n  IFCSPATIALELEMENT,\n  IFCSPATIALSTRUCTUREELEMENT,\n  IFCSPATIALZONE,\n  IFCSTACKTERMINAL,\n  IFCSTAIR,\n  IFCSTAIRFLIGHT,\n  IFCSTRUCTURALACTION,\n  IFCSTRUCTURALACTIVITY,\n  IFCSTRUCTURALCONNECTION,\n  IFCSTRUCTURALCURVEACTION,\n  IFCSTRUCTURALCURVECONNECTION,\n  IFCSTRUCTURALCURVEMEMBER,\n  IFCSTRUCTURALCURVEMEMBERVARYING,\n  IFCSTRUCTURALCURVEREACTION,\n  IFCSTRUCTURALITEM,\n  IFCSTRUCTURALLINEARACTION,\n  IFCSTRUCTURALMEMBER,\n  IFCSTRUCTURALPLANARACTION,\n  IFCSTRUCTURALPOINTACTION,\n  IFCSTRUCTURALPOINTCONNECTION,\n  IFCSTRUCTURALPOINTREACTION,\n  IFCSTRUCTURALREACTION,\n  IFCSTRUCTURALSURFACEACTION,\n  IFCSTRUCTURALSURFACECONNECTION,\n  IFCSTRUCTURALSURFACEMEMBER,\n  IFCSTRUCTURALSURFACEMEMBERVARYING,\n  IFCSTRUCTURALSURFACEREACTION,\n  IFCSURFACEFEATURE,\n  IFCSWITCHINGDEVICE,\n  IFCSYSTEMFURNITUREELEMENT,\n  IFCTANK,\n  IFCTENDON,\n  IFCTENDONANCHOR,\n  IFCTENDONCONDUIT,\n  IFCTRANSFORMER,\n  IFCTRANSPORTELEMENT,\n  IFCTUBEBUNDLE,\n  IFCUNITARYCONTROLELEMENT,\n  IFCUNITARYEQUIPMENT,\n  IFCVALVE,\n  IFCVIBRATIONDAMPER,\n  IFCVIBRATIONISOLATOR,\n  IFCVIRTUALELEMENT,\n  IFCVOIDINGFEATURE,\n  IFCWALL,\n  IFCWALLELEMENTEDCASE,\n  IFCWALLSTANDARDCASE,\n  IFCWASTETERMINAL,\n  IFCWINDOW,\n  IFCWINDOWSTANDARDCASE\n];\n\n// dist/ifc2x4_helper.ts\nvar FromRawLineData = {};\nFromRawLineData[IFCACTIONREQUEST] = (d) => {\n  return IfcActionRequest.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTOR] = (d) => {\n  return IfcActor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTORROLE] = (d) => {\n  return IfcActorRole.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTUATOR] = (d) => {\n  return IfcActuator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTUATORTYPE] = (d) => {\n  return IfcActuatorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADDRESS] = (d) => {\n  return IfcAddress.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADVANCEDBREP] = (d) => {\n  return IfcAdvancedBrep.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADVANCEDBREPWITHVOIDS] = (d) => {\n  return IfcAdvancedBrepWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADVANCEDFACE] = (d) => {\n  return IfcAdvancedFace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINAL] = (d) => {\n  return IfcAirTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINALBOX] = (d) => {\n  return IfcAirTerminalBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINALBOXTYPE] = (d) => {\n  return IfcAirTerminalBoxType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINALTYPE] = (d) => {\n  return IfcAirTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTOAIRHEATRECOVERY] = (d) => {\n  return IfcAirToAirHeatRecovery.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTOAIRHEATRECOVERYTYPE] = (d) => {\n  return IfcAirToAirHeatRecoveryType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALARM] = (d) => {\n  return IfcAlarm.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALARMTYPE] = (d) => {\n  return IfcAlarmType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT] = (d) => {\n  return IfcAlignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DHORIZONTAL] = (d) => {\n  return IfcAlignment2DHorizontal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DHORIZONTALSEGMENT] = (d) => {\n  return IfcAlignment2DHorizontalSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DSEGMENT] = (d) => {\n  return IfcAlignment2DSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERSEGCIRCULARARC] = (d) => {\n  return IfcAlignment2DVerSegCircularArc.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERSEGLINE] = (d) => {\n  return IfcAlignment2DVerSegLine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERSEGPARABOLICARC] = (d) => {\n  return IfcAlignment2DVerSegParabolicArc.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERTICAL] = (d) => {\n  return IfcAlignment2DVertical.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERTICALSEGMENT] = (d) => {\n  return IfcAlignment2DVerticalSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENTCURVE] = (d) => {\n  return IfcAlignmentCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCANNOTATION] = (d) => {\n  return IfcAnnotation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCANNOTATIONFILLAREA] = (d) => {\n  return IfcAnnotationFillArea.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPLICATION] = (d) => {\n  return IfcApplication.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPLIEDVALUE] = (d) => {\n  return IfcAppliedValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPROVAL] = (d) => {\n  return IfcApproval.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPROVALRELATIONSHIP] = (d) => {\n  return IfcApprovalRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCARBITRARYCLOSEDPROFILEDEF] = (d) => {\n  return IfcArbitraryClosedProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCARBITRARYOPENPROFILEDEF] = (d) => {\n  return IfcArbitraryOpenProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCARBITRARYPROFILEDEFWITHVOIDS] = (d) => {\n  return IfcArbitraryProfileDefWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCASSET] = (d) => {\n  return IfcAsset.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCASYMMETRICISHAPEPROFILEDEF] = (d) => {\n  return IfcAsymmetricIShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAUDIOVISUALAPPLIANCE] = (d) => {\n  return IfcAudioVisualAppliance.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAUDIOVISUALAPPLIANCETYPE] = (d) => {\n  return IfcAudioVisualApplianceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAXIS1PLACEMENT] = (d) => {\n  return IfcAxis1Placement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAXIS2PLACEMENT2D] = (d) => {\n  return IfcAxis2Placement2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAXIS2PLACEMENT3D] = (d) => {\n  return IfcAxis2Placement3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINECURVE] = (d) => {\n  return IfcBSplineCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINECURVEWITHKNOTS] = (d) => {\n  return IfcBSplineCurveWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINESURFACE] = (d) => {\n  return IfcBSplineSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINESURFACEWITHKNOTS] = (d) => {\n  return IfcBSplineSurfaceWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEAM] = (d) => {\n  return IfcBeam.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEAMSTANDARDCASE] = (d) => {\n  return IfcBeamStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEAMTYPE] = (d) => {\n  return IfcBeamType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEARING] = (d) => {\n  return IfcBearing.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEARINGTYPE] = (d) => {\n  return IfcBearingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBLOBTEXTURE] = (d) => {\n  return IfcBlobTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBLOCK] = (d) => {\n  return IfcBlock.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOILER] = (d) => {\n  return IfcBoiler.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOILERTYPE] = (d) => {\n  return IfcBoilerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOOLEANCLIPPINGRESULT] = (d) => {\n  return IfcBooleanClippingResult.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOOLEANRESULT] = (d) => {\n  return IfcBooleanResult.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYCONDITION] = (d) => {\n  return IfcBoundaryCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYCURVE] = (d) => {\n  return IfcBoundaryCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYEDGECONDITION] = (d) => {\n  return IfcBoundaryEdgeCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYFACECONDITION] = (d) => {\n  return IfcBoundaryFaceCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYNODECONDITION] = (d) => {\n  return IfcBoundaryNodeCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYNODECONDITIONWARPING] = (d) => {\n  return IfcBoundaryNodeConditionWarping.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDEDCURVE] = (d) => {\n  return IfcBoundedCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDEDSURFACE] = (d) => {\n  return IfcBoundedSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDINGBOX] = (d) => {\n  return IfcBoundingBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOXEDHALFSPACE] = (d) => {\n  return IfcBoxedHalfSpace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBRIDGE] = (d) => {\n  return IfcBridge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBRIDGEPART] = (d) => {\n  return IfcBridgePart.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDING] = (d) => {\n  return IfcBuilding.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENT] = (d) => {\n  return IfcBuildingElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPART] = (d) => {\n  return IfcBuildingElementPart.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPARTTYPE] = (d) => {\n  return IfcBuildingElementPartType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPROXY] = (d) => {\n  return IfcBuildingElementProxy.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPROXYTYPE] = (d) => {\n  return IfcBuildingElementProxyType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTTYPE] = (d) => {\n  return IfcBuildingElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGSTOREY] = (d) => {\n  return IfcBuildingStorey.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGSYSTEM] = (d) => {\n  return IfcBuildingSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBURNER] = (d) => {\n  return IfcBurner.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBURNERTYPE] = (d) => {\n  return IfcBurnerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCSHAPEPROFILEDEF] = (d) => {\n  return IfcCShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERFITTING] = (d) => {\n  return IfcCableCarrierFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERFITTINGTYPE] = (d) => {\n  return IfcCableCarrierFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERSEGMENT] = (d) => {\n  return IfcCableCarrierSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERSEGMENTTYPE] = (d) => {\n  return IfcCableCarrierSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLEFITTING] = (d) => {\n  return IfcCableFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLEFITTINGTYPE] = (d) => {\n  return IfcCableFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLESEGMENT] = (d) => {\n  return IfcCableSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLESEGMENTTYPE] = (d) => {\n  return IfcCableSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCAISSONFOUNDATION] = (d) => {\n  return IfcCaissonFoundation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCAISSONFOUNDATIONTYPE] = (d) => {\n  return IfcCaissonFoundationType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINT] = (d) => {\n  return IfcCartesianPoint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINTLIST] = (d) => {\n  return IfcCartesianPointList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINTLIST2D] = (d) => {\n  return IfcCartesianPointList2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINTLIST3D] = (d) => {\n  return IfcCartesianPointList3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR] = (d) => {\n  return IfcCartesianTransformationOperator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR2D] = (d) => {\n  return IfcCartesianTransformationOperator2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM] = (d) => {\n  return IfcCartesianTransformationOperator2DnonUniform.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR3D] = (d) => {\n  return IfcCartesianTransformationOperator3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM] = (d) => {\n  return IfcCartesianTransformationOperator3DnonUniform.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCENTERLINEPROFILEDEF] = (d) => {\n  return IfcCenterLineProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHILLER] = (d) => {\n  return IfcChiller.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHILLERTYPE] = (d) => {\n  return IfcChillerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHIMNEY] = (d) => {\n  return IfcChimney.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHIMNEYTYPE] = (d) => {\n  return IfcChimneyType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCLE] = (d) => {\n  return IfcCircle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCLEHOLLOWPROFILEDEF] = (d) => {\n  return IfcCircleHollowProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCLEPROFILEDEF] = (d) => {\n  return IfcCircleProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCULARARCSEGMENT2D] = (d) => {\n  return IfcCircularArcSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIVILELEMENT] = (d) => {\n  return IfcCivilElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIVILELEMENTTYPE] = (d) => {\n  return IfcCivilElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCLASSIFICATION] = (d) => {\n  return IfcClassification.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCLASSIFICATIONREFERENCE] = (d) => {\n  return IfcClassificationReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCLOSEDSHELL] = (d) => {\n  return IfcClosedShell.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOIL] = (d) => {\n  return IfcCoil.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOILTYPE] = (d) => {\n  return IfcCoilType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLOURRGB] = (d) => {\n  return IfcColourRgb.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLOURRGBLIST] = (d) => {\n  return IfcColourRgbList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLOURSPECIFICATION] = (d) => {\n  return IfcColourSpecification.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLUMN] = (d) => {\n  return IfcColumn.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLUMNSTANDARDCASE] = (d) => {\n  return IfcColumnStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLUMNTYPE] = (d) => {\n  return IfcColumnType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMMUNICATIONSAPPLIANCE] = (d) => {\n  return IfcCommunicationsAppliance.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMMUNICATIONSAPPLIANCETYPE] = (d) => {\n  return IfcCommunicationsApplianceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPLEXPROPERTY] = (d) => {\n  return IfcComplexProperty.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPLEXPROPERTYTEMPLATE] = (d) => {\n  return IfcComplexPropertyTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITECURVE] = (d) => {\n  return IfcCompositeCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITECURVEONSURFACE] = (d) => {\n  return IfcCompositeCurveOnSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITECURVESEGMENT] = (d) => {\n  return IfcCompositeCurveSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITEPROFILEDEF] = (d) => {\n  return IfcCompositeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPRESSOR] = (d) => {\n  return IfcCompressor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPRESSORTYPE] = (d) => {\n  return IfcCompressorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONDENSER] = (d) => {\n  return IfcCondenser.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONDENSERTYPE] = (d) => {\n  return IfcCondenserType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONIC] = (d) => {\n  return IfcConic.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTEDFACESET] = (d) => {\n  return IfcConnectedFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONCURVEGEOMETRY] = (d) => {\n  return IfcConnectionCurveGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONGEOMETRY] = (d) => {\n  return IfcConnectionGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONPOINTECCENTRICITY] = (d) => {\n  return IfcConnectionPointEccentricity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONPOINTGEOMETRY] = (d) => {\n  return IfcConnectionPointGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONSURFACEGEOMETRY] = (d) => {\n  return IfcConnectionSurfaceGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONVOLUMEGEOMETRY] = (d) => {\n  return IfcConnectionVolumeGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRAINT] = (d) => {\n  return IfcConstraint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONEQUIPMENTRESOURCE] = (d) => {\n  return IfcConstructionEquipmentResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE] = (d) => {\n  return IfcConstructionEquipmentResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONMATERIALRESOURCE] = (d) => {\n  return IfcConstructionMaterialResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONMATERIALRESOURCETYPE] = (d) => {\n  return IfcConstructionMaterialResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONPRODUCTRESOURCE] = (d) => {\n  return IfcConstructionProductResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONPRODUCTRESOURCETYPE] = (d) => {\n  return IfcConstructionProductResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONRESOURCE] = (d) => {\n  return IfcConstructionResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONRESOURCETYPE] = (d) => {\n  return IfcConstructionResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTEXT] = (d) => {\n  return IfcContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTEXTDEPENDENTUNIT] = (d) => {\n  return IfcContextDependentUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTROL] = (d) => {\n  return IfcControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTROLLER] = (d) => {\n  return IfcController.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTROLLERTYPE] = (d) => {\n  return IfcControllerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONVERSIONBASEDUNIT] = (d) => {\n  return IfcConversionBasedUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONVERSIONBASEDUNITWITHOFFSET] = (d) => {\n  return IfcConversionBasedUnitWithOffset.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLEDBEAM] = (d) => {\n  return IfcCooledBeam.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLEDBEAMTYPE] = (d) => {\n  return IfcCooledBeamType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLINGTOWER] = (d) => {\n  return IfcCoolingTower.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLINGTOWERTYPE] = (d) => {\n  return IfcCoolingTowerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOORDINATEOPERATION] = (d) => {\n  return IfcCoordinateOperation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOORDINATEREFERENCESYSTEM] = (d) => {\n  return IfcCoordinateReferenceSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOSTITEM] = (d) => {\n  return IfcCostItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOSTSCHEDULE] = (d) => {\n  return IfcCostSchedule.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOSTVALUE] = (d) => {\n  return IfcCostValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOVERING] = (d) => {\n  return IfcCovering.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOVERINGTYPE] = (d) => {\n  return IfcCoveringType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCREWRESOURCE] = (d) => {\n  return IfcCrewResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCREWRESOURCETYPE] = (d) => {\n  return IfcCrewResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCSGPRIMITIVE3D] = (d) => {\n  return IfcCsgPrimitive3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCSGSOLID] = (d) => {\n  return IfcCsgSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURRENCYRELATIONSHIP] = (d) => {\n  return IfcCurrencyRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURTAINWALL] = (d) => {\n  return IfcCurtainWall.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURTAINWALLTYPE] = (d) => {\n  return IfcCurtainWallType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVE] = (d) => {\n  return IfcCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVEBOUNDEDPLANE] = (d) => {\n  return IfcCurveBoundedPlane.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVEBOUNDEDSURFACE] = (d) => {\n  return IfcCurveBoundedSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESEGMENT2D] = (d) => {\n  return IfcCurveSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLE] = (d) => {\n  return IfcCurveStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLEFONT] = (d) => {\n  return IfcCurveStyleFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLEFONTANDSCALING] = (d) => {\n  return IfcCurveStyleFontAndScaling.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLEFONTPATTERN] = (d) => {\n  return IfcCurveStyleFontPattern.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCYLINDRICALSURFACE] = (d) => {\n  return IfcCylindricalSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDAMPER] = (d) => {\n  return IfcDamper.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDAMPERTYPE] = (d) => {\n  return IfcDamperType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDEEPFOUNDATION] = (d) => {\n  return IfcDeepFoundation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDEEPFOUNDATIONTYPE] = (d) => {\n  return IfcDeepFoundationType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDERIVEDPROFILEDEF] = (d) => {\n  return IfcDerivedProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDERIVEDUNIT] = (d) => {\n  return IfcDerivedUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDERIVEDUNITELEMENT] = (d) => {\n  return IfcDerivedUnitElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDIMENSIONALEXPONENTS] = (d) => {\n  return IfcDimensionalExponents.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDIRECTION] = (d) => {\n  return IfcDirection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISCRETEACCESSORY] = (d) => {\n  return IfcDiscreteAccessory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISCRETEACCESSORYTYPE] = (d) => {\n  return IfcDiscreteAccessoryType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTANCEEXPRESSION] = (d) => {\n  return IfcDistanceExpression.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCHAMBERELEMENT] = (d) => {\n  return IfcDistributionChamberElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCHAMBERELEMENTTYPE] = (d) => {\n  return IfcDistributionChamberElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCIRCUIT] = (d) => {\n  return IfcDistributionCircuit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCONTROLELEMENT] = (d) => {\n  return IfcDistributionControlElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCONTROLELEMENTTYPE] = (d) => {\n  return IfcDistributionControlElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONELEMENT] = (d) => {\n  return IfcDistributionElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONELEMENTTYPE] = (d) => {\n  return IfcDistributionElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONFLOWELEMENT] = (d) => {\n  return IfcDistributionFlowElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONFLOWELEMENTTYPE] = (d) => {\n  return IfcDistributionFlowElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONPORT] = (d) => {\n  return IfcDistributionPort.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONSYSTEM] = (d) => {\n  return IfcDistributionSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOCUMENTINFORMATION] = (d) => {\n  return IfcDocumentInformation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOCUMENTINFORMATIONRELATIONSHIP] = (d) => {\n  return IfcDocumentInformationRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOCUMENTREFERENCE] = (d) => {\n  return IfcDocumentReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOOR] = (d) => {\n  return IfcDoor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORLININGPROPERTIES] = (d) => {\n  return IfcDoorLiningProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORPANELPROPERTIES] = (d) => {\n  return IfcDoorPanelProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORSTANDARDCASE] = (d) => {\n  return IfcDoorStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORSTYLE] = (d) => {\n  return IfcDoorStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORTYPE] = (d) => {\n  return IfcDoorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDRAUGHTINGPREDEFINEDCOLOUR] = (d) => {\n  return IfcDraughtingPreDefinedColour.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDRAUGHTINGPREDEFINEDCURVEFONT] = (d) => {\n  return IfcDraughtingPreDefinedCurveFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTFITTING] = (d) => {\n  return IfcDuctFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTFITTINGTYPE] = (d) => {\n  return IfcDuctFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSEGMENT] = (d) => {\n  return IfcDuctSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSEGMENTTYPE] = (d) => {\n  return IfcDuctSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSILENCER] = (d) => {\n  return IfcDuctSilencer.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSILENCERTYPE] = (d) => {\n  return IfcDuctSilencerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEDGE] = (d) => {\n  return IfcEdge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEDGECURVE] = (d) => {\n  return IfcEdgeCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEDGELOOP] = (d) => {\n  return IfcEdgeLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICAPPLIANCE] = (d) => {\n  return IfcElectricAppliance.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICAPPLIANCETYPE] = (d) => {\n  return IfcElectricApplianceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICDISTRIBUTIONBOARD] = (d) => {\n  return IfcElectricDistributionBoard.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICDISTRIBUTIONBOARDTYPE] = (d) => {\n  return IfcElectricDistributionBoardType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICFLOWSTORAGEDEVICE] = (d) => {\n  return IfcElectricFlowStorageDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICFLOWSTORAGEDEVICETYPE] = (d) => {\n  return IfcElectricFlowStorageDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICGENERATOR] = (d) => {\n  return IfcElectricGenerator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICGENERATORTYPE] = (d) => {\n  return IfcElectricGeneratorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICMOTOR] = (d) => {\n  return IfcElectricMotor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICMOTORTYPE] = (d) => {\n  return IfcElectricMotorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICTIMECONTROL] = (d) => {\n  return IfcElectricTimeControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICTIMECONTROLTYPE] = (d) => {\n  return IfcElectricTimeControlType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENT] = (d) => {\n  return IfcElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTASSEMBLY] = (d) => {\n  return IfcElementAssembly.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTASSEMBLYTYPE] = (d) => {\n  return IfcElementAssemblyType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTCOMPONENT] = (d) => {\n  return IfcElementComponent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTCOMPONENTTYPE] = (d) => {\n  return IfcElementComponentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTQUANTITY] = (d) => {\n  return IfcElementQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTTYPE] = (d) => {\n  return IfcElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTARYSURFACE] = (d) => {\n  return IfcElementarySurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELLIPSE] = (d) => {\n  return IfcEllipse.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELLIPSEPROFILEDEF] = (d) => {\n  return IfcEllipseProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENERGYCONVERSIONDEVICE] = (d) => {\n  return IfcEnergyConversionDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENERGYCONVERSIONDEVICETYPE] = (d) => {\n  return IfcEnergyConversionDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENGINE] = (d) => {\n  return IfcEngine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENGINETYPE] = (d) => {\n  return IfcEngineType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATIVECOOLER] = (d) => {\n  return IfcEvaporativeCooler.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATIVECOOLERTYPE] = (d) => {\n  return IfcEvaporativeCoolerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATOR] = (d) => {\n  return IfcEvaporator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATORTYPE] = (d) => {\n  return IfcEvaporatorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVENT] = (d) => {\n  return IfcEvent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVENTTIME] = (d) => {\n  return IfcEventTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVENTTYPE] = (d) => {\n  return IfcEventType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTENDEDPROPERTIES] = (d) => {\n  return IfcExtendedProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALINFORMATION] = (d) => {\n  return IfcExternalInformation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALREFERENCE] = (d) => {\n  return IfcExternalReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALREFERENCERELATIONSHIP] = (d) => {\n  return IfcExternalReferenceRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALSPATIALELEMENT] = (d) => {\n  return IfcExternalSpatialElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALSPATIALSTRUCTUREELEMENT] = (d) => {\n  return IfcExternalSpatialStructureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALLYDEFINEDHATCHSTYLE] = (d) => {\n  return IfcExternallyDefinedHatchStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALLYDEFINEDSURFACESTYLE] = (d) => {\n  return IfcExternallyDefinedSurfaceStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALLYDEFINEDTEXTFONT] = (d) => {\n  return IfcExternallyDefinedTextFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTRUDEDAREASOLID] = (d) => {\n  return IfcExtrudedAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTRUDEDAREASOLIDTAPERED] = (d) => {\n  return IfcExtrudedAreaSolidTapered.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACE] = (d) => {\n  return IfcFace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACEBASEDSURFACEMODEL] = (d) => {\n  return IfcFaceBasedSurfaceModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACEBOUND] = (d) => {\n  return IfcFaceBound.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACEOUTERBOUND] = (d) => {\n  return IfcFaceOuterBound.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACESURFACE] = (d) => {\n  return IfcFaceSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACETEDBREP] = (d) => {\n  return IfcFacetedBrep.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACETEDBREPWITHVOIDS] = (d) => {\n  return IfcFacetedBrepWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACILITY] = (d) => {\n  return IfcFacility.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACILITYPART] = (d) => {\n  return IfcFacilityPart.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFAILURECONNECTIONCONDITION] = (d) => {\n  return IfcFailureConnectionCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFAN] = (d) => {\n  return IfcFan.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFANTYPE] = (d) => {\n  return IfcFanType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFASTENER] = (d) => {\n  return IfcFastener.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFASTENERTYPE] = (d) => {\n  return IfcFastenerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFEATUREELEMENT] = (d) => {\n  return IfcFeatureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFEATUREELEMENTADDITION] = (d) => {\n  return IfcFeatureElementAddition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFEATUREELEMENTSUBTRACTION] = (d) => {\n  return IfcFeatureElementSubtraction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILLAREASTYLE] = (d) => {\n  return IfcFillAreaStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILLAREASTYLEHATCHING] = (d) => {\n  return IfcFillAreaStyleHatching.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILLAREASTYLETILES] = (d) => {\n  return IfcFillAreaStyleTiles.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILTER] = (d) => {\n  return IfcFilter.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILTERTYPE] = (d) => {\n  return IfcFilterType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFIRESUPPRESSIONTERMINAL] = (d) => {\n  return IfcFireSuppressionTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFIRESUPPRESSIONTERMINALTYPE] = (d) => {\n  return IfcFireSuppressionTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFIXEDREFERENCESWEPTAREASOLID] = (d) => {\n  return IfcFixedReferenceSweptAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWCONTROLLER] = (d) => {\n  return IfcFlowController.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWCONTROLLERTYPE] = (d) => {\n  return IfcFlowControllerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWFITTING] = (d) => {\n  return IfcFlowFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWFITTINGTYPE] = (d) => {\n  return IfcFlowFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWINSTRUMENT] = (d) => {\n  return IfcFlowInstrument.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWINSTRUMENTTYPE] = (d) => {\n  return IfcFlowInstrumentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMETER] = (d) => {\n  return IfcFlowMeter.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMETERTYPE] = (d) => {\n  return IfcFlowMeterType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMOVINGDEVICE] = (d) => {\n  return IfcFlowMovingDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMOVINGDEVICETYPE] = (d) => {\n  return IfcFlowMovingDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSEGMENT] = (d) => {\n  return IfcFlowSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSEGMENTTYPE] = (d) => {\n  return IfcFlowSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSTORAGEDEVICE] = (d) => {\n  return IfcFlowStorageDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSTORAGEDEVICETYPE] = (d) => {\n  return IfcFlowStorageDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTERMINAL] = (d) => {\n  return IfcFlowTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTERMINALTYPE] = (d) => {\n  return IfcFlowTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTREATMENTDEVICE] = (d) => {\n  return IfcFlowTreatmentDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTREATMENTDEVICETYPE] = (d) => {\n  return IfcFlowTreatmentDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFOOTING] = (d) => {\n  return IfcFooting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFOOTINGTYPE] = (d) => {\n  return IfcFootingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNISHINGELEMENT] = (d) => {\n  return IfcFurnishingElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNISHINGELEMENTTYPE] = (d) => {\n  return IfcFurnishingElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNITURE] = (d) => {\n  return IfcFurniture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNITURETYPE] = (d) => {\n  return IfcFurnitureType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOGRAPHICELEMENT] = (d) => {\n  return IfcGeographicElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOGRAPHICELEMENTTYPE] = (d) => {\n  return IfcGeographicElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICCURVESET] = (d) => {\n  return IfcGeometricCurveSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICREPRESENTATIONCONTEXT] = (d) => {\n  return IfcGeometricRepresentationContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICREPRESENTATIONITEM] = (d) => {\n  return IfcGeometricRepresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICREPRESENTATIONSUBCONTEXT] = (d) => {\n  return IfcGeometricRepresentationSubContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICSET] = (d) => {\n  return IfcGeometricSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGRID] = (d) => {\n  return IfcGrid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGRIDAXIS] = (d) => {\n  return IfcGridAxis.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGRIDPLACEMENT] = (d) => {\n  return IfcGridPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGROUP] = (d) => {\n  return IfcGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHALFSPACESOLID] = (d) => {\n  return IfcHalfSpaceSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHEATEXCHANGER] = (d) => {\n  return IfcHeatExchanger.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHEATEXCHANGERTYPE] = (d) => {\n  return IfcHeatExchangerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHUMIDIFIER] = (d) => {\n  return IfcHumidifier.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHUMIDIFIERTYPE] = (d) => {\n  return IfcHumidifierType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCISHAPEPROFILEDEF] = (d) => {\n  return IfcIShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCIMAGETEXTURE] = (d) => {\n  return IfcImageTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDCOLOURMAP] = (d) => {\n  return IfcIndexedColourMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDPOLYCURVE] = (d) => {\n  return IfcIndexedPolyCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDPOLYGONALFACE] = (d) => {\n  return IfcIndexedPolygonalFace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDPOLYGONALFACEWITHVOIDS] = (d) => {\n  return IfcIndexedPolygonalFaceWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDTEXTUREMAP] = (d) => {\n  return IfcIndexedTextureMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDTRIANGLETEXTUREMAP] = (d) => {\n  return IfcIndexedTriangleTextureMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINTERCEPTOR] = (d) => {\n  return IfcInterceptor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINTERCEPTORTYPE] = (d) => {\n  return IfcInterceptorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINTERSECTIONCURVE] = (d) => {\n  return IfcIntersectionCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINVENTORY] = (d) => {\n  return IfcInventory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCIRREGULARTIMESERIES] = (d) => {\n  return IfcIrregularTimeSeries.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCIRREGULARTIMESERIESVALUE] = (d) => {\n  return IfcIrregularTimeSeriesValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCJUNCTIONBOX] = (d) => {\n  return IfcJunctionBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCJUNCTIONBOXTYPE] = (d) => {\n  return IfcJunctionBoxType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLSHAPEPROFILEDEF] = (d) => {\n  return IfcLShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLABORRESOURCE] = (d) => {\n  return IfcLaborResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLABORRESOURCETYPE] = (d) => {\n  return IfcLaborResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLAGTIME] = (d) => {\n  return IfcLagTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLAMP] = (d) => {\n  return IfcLamp.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLAMPTYPE] = (d) => {\n  return IfcLampType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIBRARYINFORMATION] = (d) => {\n  return IfcLibraryInformation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIBRARYREFERENCE] = (d) => {\n  return IfcLibraryReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTDISTRIBUTIONDATA] = (d) => {\n  return IfcLightDistributionData.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTFIXTURE] = (d) => {\n  return IfcLightFixture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTFIXTURETYPE] = (d) => {\n  return IfcLightFixtureType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTINTENSITYDISTRIBUTION] = (d) => {\n  return IfcLightIntensityDistribution.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCE] = (d) => {\n  return IfcLightSource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEAMBIENT] = (d) => {\n  return IfcLightSourceAmbient.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEDIRECTIONAL] = (d) => {\n  return IfcLightSourceDirectional.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEGONIOMETRIC] = (d) => {\n  return IfcLightSourceGoniometric.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEPOSITIONAL] = (d) => {\n  return IfcLightSourcePositional.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCESPOT] = (d) => {\n  return IfcLightSourceSpot.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINE] = (d) => {\n  return IfcLine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINESEGMENT2D] = (d) => {\n  return IfcLineSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINEARPLACEMENT] = (d) => {\n  return IfcLinearPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINEARPOSITIONINGELEMENT] = (d) => {\n  return IfcLinearPositioningElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLOCALPLACEMENT] = (d) => {\n  return IfcLocalPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLOOP] = (d) => {\n  return IfcLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMANIFOLDSOLIDBREP] = (d) => {\n  return IfcManifoldSolidBrep.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMAPCONVERSION] = (d) => {\n  return IfcMapConversion.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMAPPEDITEM] = (d) => {\n  return IfcMappedItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIAL] = (d) => {\n  return IfcMaterial.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALCLASSIFICATIONRELATIONSHIP] = (d) => {\n  return IfcMaterialClassificationRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALCONSTITUENT] = (d) => {\n  return IfcMaterialConstituent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALCONSTITUENTSET] = (d) => {\n  return IfcMaterialConstituentSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALDEFINITION] = (d) => {\n  return IfcMaterialDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALDEFINITIONREPRESENTATION] = (d) => {\n  return IfcMaterialDefinitionRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYER] = (d) => {\n  return IfcMaterialLayer.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYERSET] = (d) => {\n  return IfcMaterialLayerSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYERSETUSAGE] = (d) => {\n  return IfcMaterialLayerSetUsage.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYERWITHOFFSETS] = (d) => {\n  return IfcMaterialLayerWithOffsets.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLIST] = (d) => {\n  return IfcMaterialList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILE] = (d) => {\n  return IfcMaterialProfile.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILESET] = (d) => {\n  return IfcMaterialProfileSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILESETUSAGE] = (d) => {\n  return IfcMaterialProfileSetUsage.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILESETUSAGETAPERING] = (d) => {\n  return IfcMaterialProfileSetUsageTapering.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILEWITHOFFSETS] = (d) => {\n  return IfcMaterialProfileWithOffsets.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROPERTIES] = (d) => {\n  return IfcMaterialProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALRELATIONSHIP] = (d) => {\n  return IfcMaterialRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALUSAGEDEFINITION] = (d) => {\n  return IfcMaterialUsageDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEASUREWITHUNIT] = (d) => {\n  return IfcMeasureWithUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMECHANICALFASTENER] = (d) => {\n  return IfcMechanicalFastener.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMECHANICALFASTENERTYPE] = (d) => {\n  return IfcMechanicalFastenerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEDICALDEVICE] = (d) => {\n  return IfcMedicalDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEDICALDEVICETYPE] = (d) => {\n  return IfcMedicalDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEMBER] = (d) => {\n  return IfcMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEMBERSTANDARDCASE] = (d) => {\n  return IfcMemberStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEMBERTYPE] = (d) => {\n  return IfcMemberType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMETRIC] = (d) => {\n  return IfcMetric.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMIRROREDPROFILEDEF] = (d) => {\n  return IfcMirroredProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMONETARYUNIT] = (d) => {\n  return IfcMonetaryUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMOTORCONNECTION] = (d) => {\n  return IfcMotorConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMOTORCONNECTIONTYPE] = (d) => {\n  return IfcMotorConnectionType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCNAMEDUNIT] = (d) => {\n  return IfcNamedUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECT] = (d) => {\n  return IfcObject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECTDEFINITION] = (d) => {\n  return IfcObjectDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECTPLACEMENT] = (d) => {\n  return IfcObjectPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECTIVE] = (d) => {\n  return IfcObjective.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOCCUPANT] = (d) => {\n  return IfcOccupant.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVE] = (d) => {\n  return IfcOffsetCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVE2D] = (d) => {\n  return IfcOffsetCurve2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVE3D] = (d) => {\n  return IfcOffsetCurve3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVEBYDISTANCES] = (d) => {\n  return IfcOffsetCurveByDistances.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOPENSHELL] = (d) => {\n  return IfcOpenShell.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOPENINGELEMENT] = (d) => {\n  return IfcOpeningElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOPENINGSTANDARDCASE] = (d) => {\n  return IfcOpeningStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORGANIZATION] = (d) => {\n  return IfcOrganization.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORGANIZATIONRELATIONSHIP] = (d) => {\n  return IfcOrganizationRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORIENTATIONEXPRESSION] = (d) => {\n  return IfcOrientationExpression.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORIENTEDEDGE] = (d) => {\n  return IfcOrientedEdge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOUTERBOUNDARYCURVE] = (d) => {\n  return IfcOuterBoundaryCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOUTLET] = (d) => {\n  return IfcOutlet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOUTLETTYPE] = (d) => {\n  return IfcOutletType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOWNERHISTORY] = (d) => {\n  return IfcOwnerHistory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPARAMETERIZEDPROFILEDEF] = (d) => {\n  return IfcParameterizedProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPATH] = (d) => {\n  return IfcPath.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPCURVE] = (d) => {\n  return IfcPcurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERFORMANCEHISTORY] = (d) => {\n  return IfcPerformanceHistory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERMEABLECOVERINGPROPERTIES] = (d) => {\n  return IfcPermeableCoveringProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERMIT] = (d) => {\n  return IfcPermit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERSON] = (d) => {\n  return IfcPerson.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERSONANDORGANIZATION] = (d) => {\n  return IfcPersonAndOrganization.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPHYSICALCOMPLEXQUANTITY] = (d) => {\n  return IfcPhysicalComplexQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPHYSICALQUANTITY] = (d) => {\n  return IfcPhysicalQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPHYSICALSIMPLEQUANTITY] = (d) => {\n  return IfcPhysicalSimpleQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPILE] = (d) => {\n  return IfcPile.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPILETYPE] = (d) => {\n  return IfcPileType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPEFITTING] = (d) => {\n  return IfcPipeFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPEFITTINGTYPE] = (d) => {\n  return IfcPipeFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPESEGMENT] = (d) => {\n  return IfcPipeSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPESEGMENTTYPE] = (d) => {\n  return IfcPipeSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIXELTEXTURE] = (d) => {\n  return IfcPixelTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLACEMENT] = (d) => {\n  return IfcPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLANARBOX] = (d) => {\n  return IfcPlanarBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLANAREXTENT] = (d) => {\n  return IfcPlanarExtent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLANE] = (d) => {\n  return IfcPlane.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLATE] = (d) => {\n  return IfcPlate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLATESTANDARDCASE] = (d) => {\n  return IfcPlateStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLATETYPE] = (d) => {\n  return IfcPlateType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOINT] = (d) => {\n  return IfcPoint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOINTONCURVE] = (d) => {\n  return IfcPointOnCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOINTONSURFACE] = (d) => {\n  return IfcPointOnSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYLOOP] = (d) => {\n  return IfcPolyLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYGONALBOUNDEDHALFSPACE] = (d) => {\n  return IfcPolygonalBoundedHalfSpace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYGONALFACESET] = (d) => {\n  return IfcPolygonalFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYLINE] = (d) => {\n  return IfcPolyline.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPORT] = (d) => {\n  return IfcPort.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOSITIONINGELEMENT] = (d) => {\n  return IfcPositioningElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOSTALADDRESS] = (d) => {\n  return IfcPostalAddress.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDCOLOUR] = (d) => {\n  return IfcPreDefinedColour.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDCURVEFONT] = (d) => {\n  return IfcPreDefinedCurveFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDITEM] = (d) => {\n  return IfcPreDefinedItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDPROPERTIES] = (d) => {\n  return IfcPreDefinedProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDPROPERTYSET] = (d) => {\n  return IfcPreDefinedPropertySet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDTEXTFONT] = (d) => {\n  return IfcPreDefinedTextFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONITEM] = (d) => {\n  return IfcPresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONLAYERASSIGNMENT] = (d) => {\n  return IfcPresentationLayerAssignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONLAYERWITHSTYLE] = (d) => {\n  return IfcPresentationLayerWithStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONSTYLE] = (d) => {\n  return IfcPresentationStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONSTYLEASSIGNMENT] = (d) => {\n  return IfcPresentationStyleAssignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROCEDURE] = (d) => {\n  return IfcProcedure.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROCEDURETYPE] = (d) => {\n  return IfcProcedureType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROCESS] = (d) => {\n  return IfcProcess.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRODUCT] = (d) => {\n  return IfcProduct.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRODUCTDEFINITIONSHAPE] = (d) => {\n  return IfcProductDefinitionShape.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRODUCTREPRESENTATION] = (d) => {\n  return IfcProductRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROFILEDEF] = (d) => {\n  return IfcProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROFILEPROPERTIES] = (d) => {\n  return IfcProfileProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECT] = (d) => {\n  return IfcProject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTLIBRARY] = (d) => {\n  return IfcProjectLibrary.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTORDER] = (d) => {\n  return IfcProjectOrder.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTEDCRS] = (d) => {\n  return IfcProjectedCRS.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTIONELEMENT] = (d) => {\n  return IfcProjectionElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTY] = (d) => {\n  return IfcProperty.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYABSTRACTION] = (d) => {\n  return IfcPropertyAbstraction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYBOUNDEDVALUE] = (d) => {\n  return IfcPropertyBoundedValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYDEFINITION] = (d) => {\n  return IfcPropertyDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYDEPENDENCYRELATIONSHIP] = (d) => {\n  return IfcPropertyDependencyRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYENUMERATEDVALUE] = (d) => {\n  return IfcPropertyEnumeratedValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYENUMERATION] = (d) => {\n  return IfcPropertyEnumeration.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYLISTVALUE] = (d) => {\n  return IfcPropertyListValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYREFERENCEVALUE] = (d) => {\n  return IfcPropertyReferenceValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSET] = (d) => {\n  return IfcPropertySet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSETDEFINITION] = (d) => {\n  return IfcPropertySetDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSETTEMPLATE] = (d) => {\n  return IfcPropertySetTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSINGLEVALUE] = (d) => {\n  return IfcPropertySingleValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYTABLEVALUE] = (d) => {\n  return IfcPropertyTableValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYTEMPLATE] = (d) => {\n  return IfcPropertyTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYTEMPLATEDEFINITION] = (d) => {\n  return IfcPropertyTemplateDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICE] = (d) => {\n  return IfcProtectiveDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICETRIPPINGUNIT] = (d) => {\n  return IfcProtectiveDeviceTrippingUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICETRIPPINGUNITTYPE] = (d) => {\n  return IfcProtectiveDeviceTrippingUnitType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICETYPE] = (d) => {\n  return IfcProtectiveDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROXY] = (d) => {\n  return IfcProxy.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPUMP] = (d) => {\n  return IfcPump.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPUMPTYPE] = (d) => {\n  return IfcPumpType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYAREA] = (d) => {\n  return IfcQuantityArea.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYCOUNT] = (d) => {\n  return IfcQuantityCount.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYLENGTH] = (d) => {\n  return IfcQuantityLength.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYSET] = (d) => {\n  return IfcQuantitySet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYTIME] = (d) => {\n  return IfcQuantityTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYVOLUME] = (d) => {\n  return IfcQuantityVolume.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYWEIGHT] = (d) => {\n  return IfcQuantityWeight.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAILING] = (d) => {\n  return IfcRailing.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAILINGTYPE] = (d) => {\n  return IfcRailingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMP] = (d) => {\n  return IfcRamp.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMPFLIGHT] = (d) => {\n  return IfcRampFlight.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMPFLIGHTTYPE] = (d) => {\n  return IfcRampFlightType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMPTYPE] = (d) => {\n  return IfcRampType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRATIONALBSPLINECURVEWITHKNOTS] = (d) => {\n  return IfcRationalBSplineCurveWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRATIONALBSPLINESURFACEWITHKNOTS] = (d) => {\n  return IfcRationalBSplineSurfaceWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGLEHOLLOWPROFILEDEF] = (d) => {\n  return IfcRectangleHollowProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGLEPROFILEDEF] = (d) => {\n  return IfcRectangleProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGULARPYRAMID] = (d) => {\n  return IfcRectangularPyramid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGULARTRIMMEDSURFACE] = (d) => {\n  return IfcRectangularTrimmedSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECURRENCEPATTERN] = (d) => {\n  return IfcRecurrencePattern.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREFERENCE] = (d) => {\n  return IfcReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREFERENT] = (d) => {\n  return IfcReferent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREGULARTIMESERIES] = (d) => {\n  return IfcRegularTimeSeries.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCEMENTBARPROPERTIES] = (d) => {\n  return IfcReinforcementBarProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCEMENTDEFINITIONPROPERTIES] = (d) => {\n  return IfcReinforcementDefinitionProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGBAR] = (d) => {\n  return IfcReinforcingBar.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGBARTYPE] = (d) => {\n  return IfcReinforcingBarType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGELEMENT] = (d) => {\n  return IfcReinforcingElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGELEMENTTYPE] = (d) => {\n  return IfcReinforcingElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGMESH] = (d) => {\n  return IfcReinforcingMesh.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGMESHTYPE] = (d) => {\n  return IfcReinforcingMeshType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELAGGREGATES] = (d) => {\n  return IfcRelAggregates.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNS] = (d) => {\n  return IfcRelAssigns.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOACTOR] = (d) => {\n  return IfcRelAssignsToActor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOCONTROL] = (d) => {\n  return IfcRelAssignsToControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOGROUP] = (d) => {\n  return IfcRelAssignsToGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOGROUPBYFACTOR] = (d) => {\n  return IfcRelAssignsToGroupByFactor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOPROCESS] = (d) => {\n  return IfcRelAssignsToProcess.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOPRODUCT] = (d) => {\n  return IfcRelAssignsToProduct.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTORESOURCE] = (d) => {\n  return IfcRelAssignsToResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATES] = (d) => {\n  return IfcRelAssociates.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESAPPROVAL] = (d) => {\n  return IfcRelAssociatesApproval.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESCLASSIFICATION] = (d) => {\n  return IfcRelAssociatesClassification.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESCONSTRAINT] = (d) => {\n  return IfcRelAssociatesConstraint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESDOCUMENT] = (d) => {\n  return IfcRelAssociatesDocument.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESLIBRARY] = (d) => {\n  return IfcRelAssociatesLibrary.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESMATERIAL] = (d) => {\n  return IfcRelAssociatesMaterial.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTS] = (d) => {\n  return IfcRelConnects.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSELEMENTS] = (d) => {\n  return IfcRelConnectsElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSPATHELEMENTS] = (d) => {\n  return IfcRelConnectsPathElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSPORTTOELEMENT] = (d) => {\n  return IfcRelConnectsPortToElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSPORTS] = (d) => {\n  return IfcRelConnectsPorts.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSSTRUCTURALACTIVITY] = (d) => {\n  return IfcRelConnectsStructuralActivity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSSTRUCTURALMEMBER] = (d) => {\n  return IfcRelConnectsStructuralMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSWITHECCENTRICITY] = (d) => {\n  return IfcRelConnectsWithEccentricity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSWITHREALIZINGELEMENTS] = (d) => {\n  return IfcRelConnectsWithRealizingElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONTAINEDINSPATIALSTRUCTURE] = (d) => {\n  return IfcRelContainedInSpatialStructure.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCOVERSBLDGELEMENTS] = (d) => {\n  return IfcRelCoversBldgElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCOVERSSPACES] = (d) => {\n  return IfcRelCoversSpaces.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDECLARES] = (d) => {\n  return IfcRelDeclares.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDECOMPOSES] = (d) => {\n  return IfcRelDecomposes.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINES] = (d) => {\n  return IfcRelDefines.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYOBJECT] = (d) => {\n  return IfcRelDefinesByObject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYPROPERTIES] = (d) => {\n  return IfcRelDefinesByProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYTEMPLATE] = (d) => {\n  return IfcRelDefinesByTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYTYPE] = (d) => {\n  return IfcRelDefinesByType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELFILLSELEMENT] = (d) => {\n  return IfcRelFillsElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELFLOWCONTROLELEMENTS] = (d) => {\n  return IfcRelFlowControlElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELINTERFERESELEMENTS] = (d) => {\n  return IfcRelInterferesElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELNESTS] = (d) => {\n  return IfcRelNests.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELPOSITIONS] = (d) => {\n  return IfcRelPositions.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELPROJECTSELEMENT] = (d) => {\n  return IfcRelProjectsElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELREFERENCEDINSPATIALSTRUCTURE] = (d) => {\n  return IfcRelReferencedInSpatialStructure.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSEQUENCE] = (d) => {\n  return IfcRelSequence.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSERVICESBUILDINGS] = (d) => {\n  return IfcRelServicesBuildings.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSPACEBOUNDARY] = (d) => {\n  return IfcRelSpaceBoundary.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSPACEBOUNDARY1STLEVEL] = (d) => {\n  return IfcRelSpaceBoundary1stLevel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSPACEBOUNDARY2NDLEVEL] = (d) => {\n  return IfcRelSpaceBoundary2ndLevel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELVOIDSELEMENT] = (d) => {\n  return IfcRelVoidsElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELATIONSHIP] = (d) => {\n  return IfcRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPARAMETRISEDCOMPOSITECURVESEGMENT] = (d) => {\n  return IfcReparametrisedCompositeCurveSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATION] = (d) => {\n  return IfcRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATIONCONTEXT] = (d) => {\n  return IfcRepresentationContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATIONITEM] = (d) => {\n  return IfcRepresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATIONMAP] = (d) => {\n  return IfcRepresentationMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCE] = (d) => {\n  return IfcResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCEAPPROVALRELATIONSHIP] = (d) => {\n  return IfcResourceApprovalRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCECONSTRAINTRELATIONSHIP] = (d) => {\n  return IfcResourceConstraintRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCELEVELRELATIONSHIP] = (d) => {\n  return IfcResourceLevelRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCETIME] = (d) => {\n  return IfcResourceTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREVOLVEDAREASOLID] = (d) => {\n  return IfcRevolvedAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREVOLVEDAREASOLIDTAPERED] = (d) => {\n  return IfcRevolvedAreaSolidTapered.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRIGHTCIRCULARCONE] = (d) => {\n  return IfcRightCircularCone.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRIGHTCIRCULARCYLINDER] = (d) => {\n  return IfcRightCircularCylinder.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROOF] = (d) => {\n  return IfcRoof.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROOFTYPE] = (d) => {\n  return IfcRoofType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROOT] = (d) => {\n  return IfcRoot.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROUNDEDRECTANGLEPROFILEDEF] = (d) => {\n  return IfcRoundedRectangleProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSIUNIT] = (d) => {\n  return IfcSIUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSANITARYTERMINAL] = (d) => {\n  return IfcSanitaryTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSANITARYTERMINALTYPE] = (d) => {\n  return IfcSanitaryTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSCHEDULINGTIME] = (d) => {\n  return IfcSchedulingTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSEAMCURVE] = (d) => {\n  return IfcSeamCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONPROPERTIES] = (d) => {\n  return IfcSectionProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONREINFORCEMENTPROPERTIES] = (d) => {\n  return IfcSectionReinforcementProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONEDSOLID] = (d) => {\n  return IfcSectionedSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONEDSOLIDHORIZONTAL] = (d) => {\n  return IfcSectionedSolidHorizontal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONEDSPINE] = (d) => {\n  return IfcSectionedSpine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSENSOR] = (d) => {\n  return IfcSensor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSENSORTYPE] = (d) => {\n  return IfcSensorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHADINGDEVICE] = (d) => {\n  return IfcShadingDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHADINGDEVICETYPE] = (d) => {\n  return IfcShadingDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHAPEASPECT] = (d) => {\n  return IfcShapeAspect.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHAPEMODEL] = (d) => {\n  return IfcShapeModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHAPEREPRESENTATION] = (d) => {\n  return IfcShapeRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHELLBASEDSURFACEMODEL] = (d) => {\n  return IfcShellBasedSurfaceModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSIMPLEPROPERTY] = (d) => {\n  return IfcSimpleProperty.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSIMPLEPROPERTYTEMPLATE] = (d) => {\n  return IfcSimplePropertyTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSITE] = (d) => {\n  return IfcSite.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLAB] = (d) => {\n  return IfcSlab.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLABELEMENTEDCASE] = (d) => {\n  return IfcSlabElementedCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLABSTANDARDCASE] = (d) => {\n  return IfcSlabStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLABTYPE] = (d) => {\n  return IfcSlabType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLIPPAGECONNECTIONCONDITION] = (d) => {\n  return IfcSlippageConnectionCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSOLARDEVICE] = (d) => {\n  return IfcSolarDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSOLARDEVICETYPE] = (d) => {\n  return IfcSolarDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSOLIDMODEL] = (d) => {\n  return IfcSolidModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACE] = (d) => {\n  return IfcSpace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACEHEATER] = (d) => {\n  return IfcSpaceHeater.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACEHEATERTYPE] = (d) => {\n  return IfcSpaceHeaterType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACETYPE] = (d) => {\n  return IfcSpaceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALELEMENT] = (d) => {\n  return IfcSpatialElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALELEMENTTYPE] = (d) => {\n  return IfcSpatialElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALSTRUCTUREELEMENT] = (d) => {\n  return IfcSpatialStructureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALSTRUCTUREELEMENTTYPE] = (d) => {\n  return IfcSpatialStructureElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALZONE] = (d) => {\n  return IfcSpatialZone.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALZONETYPE] = (d) => {\n  return IfcSpatialZoneType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPHERE] = (d) => {\n  return IfcSphere.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPHERICALSURFACE] = (d) => {\n  return IfcSphericalSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTACKTERMINAL] = (d) => {\n  return IfcStackTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTACKTERMINALTYPE] = (d) => {\n  return IfcStackTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIR] = (d) => {\n  return IfcStair.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIRFLIGHT] = (d) => {\n  return IfcStairFlight.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIRFLIGHTTYPE] = (d) => {\n  return IfcStairFlightType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIRTYPE] = (d) => {\n  return IfcStairType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALACTION] = (d) => {\n  return IfcStructuralAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALACTIVITY] = (d) => {\n  return IfcStructuralActivity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALANALYSISMODEL] = (d) => {\n  return IfcStructuralAnalysisModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCONNECTION] = (d) => {\n  return IfcStructuralConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCONNECTIONCONDITION] = (d) => {\n  return IfcStructuralConnectionCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEACTION] = (d) => {\n  return IfcStructuralCurveAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVECONNECTION] = (d) => {\n  return IfcStructuralCurveConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEMEMBER] = (d) => {\n  return IfcStructuralCurveMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEMEMBERVARYING] = (d) => {\n  return IfcStructuralCurveMemberVarying.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEREACTION] = (d) => {\n  return IfcStructuralCurveReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALITEM] = (d) => {\n  return IfcStructuralItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLINEARACTION] = (d) => {\n  return IfcStructuralLinearAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOAD] = (d) => {\n  return IfcStructuralLoad.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADCASE] = (d) => {\n  return IfcStructuralLoadCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADCONFIGURATION] = (d) => {\n  return IfcStructuralLoadConfiguration.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADGROUP] = (d) => {\n  return IfcStructuralLoadGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADLINEARFORCE] = (d) => {\n  return IfcStructuralLoadLinearForce.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADORRESULT] = (d) => {\n  return IfcStructuralLoadOrResult.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADPLANARFORCE] = (d) => {\n  return IfcStructuralLoadPlanarForce.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEDISPLACEMENT] = (d) => {\n  return IfcStructuralLoadSingleDisplacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION] = (d) => {\n  return IfcStructuralLoadSingleDisplacementDistortion.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEFORCE] = (d) => {\n  return IfcStructuralLoadSingleForce.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEFORCEWARPING] = (d) => {\n  return IfcStructuralLoadSingleForceWarping.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSTATIC] = (d) => {\n  return IfcStructuralLoadStatic.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADTEMPERATURE] = (d) => {\n  return IfcStructuralLoadTemperature.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALMEMBER] = (d) => {\n  return IfcStructuralMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPLANARACTION] = (d) => {\n  return IfcStructuralPlanarAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPOINTACTION] = (d) => {\n  return IfcStructuralPointAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPOINTCONNECTION] = (d) => {\n  return IfcStructuralPointConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPOINTREACTION] = (d) => {\n  return IfcStructuralPointReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALREACTION] = (d) => {\n  return IfcStructuralReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALRESULTGROUP] = (d) => {\n  return IfcStructuralResultGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEACTION] = (d) => {\n  return IfcStructuralSurfaceAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACECONNECTION] = (d) => {\n  return IfcStructuralSurfaceConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEMEMBER] = (d) => {\n  return IfcStructuralSurfaceMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEMEMBERVARYING] = (d) => {\n  return IfcStructuralSurfaceMemberVarying.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEREACTION] = (d) => {\n  return IfcStructuralSurfaceReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTYLEMODEL] = (d) => {\n  return IfcStyleModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTYLEDITEM] = (d) => {\n  return IfcStyledItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTYLEDREPRESENTATION] = (d) => {\n  return IfcStyledRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSUBCONTRACTRESOURCE] = (d) => {\n  return IfcSubContractResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSUBCONTRACTRESOURCETYPE] = (d) => {\n  return IfcSubContractResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSUBEDGE] = (d) => {\n  return IfcSubedge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACE] = (d) => {\n  return IfcSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACECURVE] = (d) => {\n  return IfcSurfaceCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACECURVESWEPTAREASOLID] = (d) => {\n  return IfcSurfaceCurveSweptAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEFEATURE] = (d) => {\n  return IfcSurfaceFeature.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEOFLINEAREXTRUSION] = (d) => {\n  return IfcSurfaceOfLinearExtrusion.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEOFREVOLUTION] = (d) => {\n  return IfcSurfaceOfRevolution.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEREINFORCEMENTAREA] = (d) => {\n  return IfcSurfaceReinforcementArea.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLE] = (d) => {\n  return IfcSurfaceStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLELIGHTING] = (d) => {\n  return IfcSurfaceStyleLighting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLEREFRACTION] = (d) => {\n  return IfcSurfaceStyleRefraction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLERENDERING] = (d) => {\n  return IfcSurfaceStyleRendering.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLESHADING] = (d) => {\n  return IfcSurfaceStyleShading.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLEWITHTEXTURES] = (d) => {\n  return IfcSurfaceStyleWithTextures.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACETEXTURE] = (d) => {\n  return IfcSurfaceTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTAREASOLID] = (d) => {\n  return IfcSweptAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTDISKSOLID] = (d) => {\n  return IfcSweptDiskSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTDISKSOLIDPOLYGONAL] = (d) => {\n  return IfcSweptDiskSolidPolygonal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTSURFACE] = (d) => {\n  return IfcSweptSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWITCHINGDEVICE] = (d) => {\n  return IfcSwitchingDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWITCHINGDEVICETYPE] = (d) => {\n  return IfcSwitchingDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSYSTEM] = (d) => {\n  return IfcSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSYSTEMFURNITUREELEMENT] = (d) => {\n  return IfcSystemFurnitureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSYSTEMFURNITUREELEMENTTYPE] = (d) => {\n  return IfcSystemFurnitureElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTSHAPEPROFILEDEF] = (d) => {\n  return IfcTShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTABLE] = (d) => {\n  return IfcTable.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTABLECOLUMN] = (d) => {\n  return IfcTableColumn.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTABLEROW] = (d) => {\n  return IfcTableRow.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTANK] = (d) => {\n  return IfcTank.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTANKTYPE] = (d) => {\n  return IfcTankType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASK] = (d) => {\n  return IfcTask.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASKTIME] = (d) => {\n  return IfcTaskTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASKTIMERECURRING] = (d) => {\n  return IfcTaskTimeRecurring.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASKTYPE] = (d) => {\n  return IfcTaskType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTELECOMADDRESS] = (d) => {\n  return IfcTelecomAddress.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDON] = (d) => {\n  return IfcTendon.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONANCHOR] = (d) => {\n  return IfcTendonAnchor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONANCHORTYPE] = (d) => {\n  return IfcTendonAnchorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONCONDUIT] = (d) => {\n  return IfcTendonConduit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONCONDUITTYPE] = (d) => {\n  return IfcTendonConduitType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONTYPE] = (d) => {\n  return IfcTendonType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTESSELLATEDFACESET] = (d) => {\n  return IfcTessellatedFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTESSELLATEDITEM] = (d) => {\n  return IfcTessellatedItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTLITERAL] = (d) => {\n  return IfcTextLiteral.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTLITERALWITHEXTENT] = (d) => {\n  return IfcTextLiteralWithExtent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLE] = (d) => {\n  return IfcTextStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLEFONTMODEL] = (d) => {\n  return IfcTextStyleFontModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLEFORDEFINEDFONT] = (d) => {\n  return IfcTextStyleForDefinedFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLETEXTMODEL] = (d) => {\n  return IfcTextStyleTextModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTURECOORDINATE] = (d) => {\n  return IfcTextureCoordinate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTURECOORDINATEGENERATOR] = (d) => {\n  return IfcTextureCoordinateGenerator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTUREMAP] = (d) => {\n  return IfcTextureMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTUREVERTEX] = (d) => {\n  return IfcTextureVertex.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTUREVERTEXLIST] = (d) => {\n  return IfcTextureVertexList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTIMEPERIOD] = (d) => {\n  return IfcTimePeriod.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTIMESERIES] = (d) => {\n  return IfcTimeSeries.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTIMESERIESVALUE] = (d) => {\n  return IfcTimeSeriesValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTOPOLOGICALREPRESENTATIONITEM] = (d) => {\n  return IfcTopologicalRepresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTOPOLOGYREPRESENTATION] = (d) => {\n  return IfcTopologyRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTOROIDALSURFACE] = (d) => {\n  return IfcToroidalSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSFORMER] = (d) => {\n  return IfcTransformer.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSFORMERTYPE] = (d) => {\n  return IfcTransformerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSITIONCURVESEGMENT2D] = (d) => {\n  return IfcTransitionCurveSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSPORTELEMENT] = (d) => {\n  return IfcTransportElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSPORTELEMENTTYPE] = (d) => {\n  return IfcTransportElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRAPEZIUMPROFILEDEF] = (d) => {\n  return IfcTrapeziumProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRIANGULATEDFACESET] = (d) => {\n  return IfcTriangulatedFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRIANGULATEDIRREGULARNETWORK] = (d) => {\n  return IfcTriangulatedIrregularNetwork.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRIMMEDCURVE] = (d) => {\n  return IfcTrimmedCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTUBEBUNDLE] = (d) => {\n  return IfcTubeBundle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTUBEBUNDLETYPE] = (d) => {\n  return IfcTubeBundleType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPEOBJECT] = (d) => {\n  return IfcTypeObject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPEPROCESS] = (d) => {\n  return IfcTypeProcess.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPEPRODUCT] = (d) => {\n  return IfcTypeProduct.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPERESOURCE] = (d) => {\n  return IfcTypeResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUSHAPEPROFILEDEF] = (d) => {\n  return IfcUShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITASSIGNMENT] = (d) => {\n  return IfcUnitAssignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYCONTROLELEMENT] = (d) => {\n  return IfcUnitaryControlElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYCONTROLELEMENTTYPE] = (d) => {\n  return IfcUnitaryControlElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYEQUIPMENT] = (d) => {\n  return IfcUnitaryEquipment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYEQUIPMENTTYPE] = (d) => {\n  return IfcUnitaryEquipmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVALVE] = (d) => {\n  return IfcValve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVALVETYPE] = (d) => {\n  return IfcValveType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVECTOR] = (d) => {\n  return IfcVector.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVERTEX] = (d) => {\n  return IfcVertex.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVERTEXLOOP] = (d) => {\n  return IfcVertexLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVERTEXPOINT] = (d) => {\n  return IfcVertexPoint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONDAMPER] = (d) => {\n  return IfcVibrationDamper.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONDAMPERTYPE] = (d) => {\n  return IfcVibrationDamperType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONISOLATOR] = (d) => {\n  return IfcVibrationIsolator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONISOLATORTYPE] = (d) => {\n  return IfcVibrationIsolatorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIRTUALELEMENT] = (d) => {\n  return IfcVirtualElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIRTUALGRIDINTERSECTION] = (d) => {\n  return IfcVirtualGridIntersection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVOIDINGFEATURE] = (d) => {\n  return IfcVoidingFeature.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALL] = (d) => {\n  return IfcWall.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALLELEMENTEDCASE] = (d) => {\n  return IfcWallElementedCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALLSTANDARDCASE] = (d) => {\n  return IfcWallStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALLTYPE] = (d) => {\n  return IfcWallType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWASTETERMINAL] = (d) => {\n  return IfcWasteTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWASTETERMINALTYPE] = (d) => {\n  return IfcWasteTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOW] = (d) => {\n  return IfcWindow.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWLININGPROPERTIES] = (d) => {\n  return IfcWindowLiningProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWPANELPROPERTIES] = (d) => {\n  return IfcWindowPanelProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWSTANDARDCASE] = (d) => {\n  return IfcWindowStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWSTYLE] = (d) => {\n  return IfcWindowStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWTYPE] = (d) => {\n  return IfcWindowType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKCALENDAR] = (d) => {\n  return IfcWorkCalendar.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKCONTROL] = (d) => {\n  return IfcWorkControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKPLAN] = (d) => {\n  return IfcWorkPlan.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKSCHEDULE] = (d) => {\n  return IfcWorkSchedule.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKTIME] = (d) => {\n  return IfcWorkTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCZSHAPEPROFILEDEF] = (d) => {\n  return IfcZShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCZONE] = (d) => {\n  return IfcZone.FromTape(d.ID, d.type, d.arguments);\n};\nvar Handle = class {\n  constructor(id) {\n    this.value = id;\n  }\n  toTape(args) {\n    args.push({ type: 5, value: this.value });\n  }\n};\nfunction Value(type, value) {\n  return { t: type, v: value };\n}\nvar IfcAbsorbedDoseMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAccelerationMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAmountOfSubstanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAngularVelocityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAreaDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAreaMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcBinary = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcBoolean = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcBoxAlignment = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcCardinalPointReference = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcContextDependentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcCountMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcCurvatureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDate = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDateTime = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDayInMonthNumber = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDayInWeekNumber = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDescriptiveMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDimensionCount = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDoseEquivalentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDuration = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDynamicViscosityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricCapacitanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricChargeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricConductanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricCurrentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricResistanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricVoltageMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcEnergyMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFontStyle = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFontVariant = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFontWeight = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcForceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFrequencyMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcGloballyUniqueId = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcHeatFluxDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcHeatingValueMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIdentifier = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIlluminanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcInductanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcInteger = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIntegerCountRateMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIonConcentrationMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIsothermalMoistureCapacityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcKinematicViscosityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLabel = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLanguageId = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearForceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearMomentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearStiffnessMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearVelocityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLogical = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLuminousFluxMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLuminousIntensityDistributionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLuminousIntensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMagneticFluxDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMagneticFluxMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassFlowRateMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassPerLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfElasticityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfLinearSubgradeReactionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfRotationalSubgradeReactionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfSubgradeReactionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMoistureDiffusivityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMolecularWeightMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMomentOfInertiaMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMonetaryMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMonthInYearNumber = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcNonNegativeLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcNormalisedRatioMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcNumericMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPHMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcParameterValue = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPlanarForceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPlaneAngleMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositiveInteger = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositiveLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositivePlaneAngleMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositiveRatioMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPowerMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPresentableText = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPressureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRadioActivityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRatioMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcReal = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRotationalFrequencyMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRotationalMassMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRotationalStiffnessMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSectionModulusMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSectionalAreaIntegralMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcShearModulusMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSolidAngleMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPowerLevelMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPowerMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPressureLevelMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPressureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSpecificHeatCapacityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSpecularExponent = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSpecularRoughness = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTemperatureGradientMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTemperatureRateOfChangeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcText = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextAlignment = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextDecoration = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextFontName = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextTransformation = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalAdmittanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalConductivityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalExpansionCoefficientMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalResistanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalTransmittanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermodynamicTemperatureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTime = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTimeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTimeStamp = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTorqueMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcURIReference = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcVaporPermeabilityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcVolumeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcVolumetricFlowRateMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcWarpingConstantMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcWarpingMomentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcActionRequestTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActionRequestTypeEnum.EMAIL = \"EMAIL\";\nIfcActionRequestTypeEnum.FAX = \"FAX\";\nIfcActionRequestTypeEnum.PHONE = \"PHONE\";\nIfcActionRequestTypeEnum.POST = \"POST\";\nIfcActionRequestTypeEnum.VERBAL = \"VERBAL\";\nIfcActionRequestTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActionRequestTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActionSourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActionSourceTypeEnum.DEAD_LOAD_G = \"DEAD_LOAD_G\";\nIfcActionSourceTypeEnum.COMPLETION_G1 = \"COMPLETION_G1\";\nIfcActionSourceTypeEnum.LIVE_LOAD_Q = \"LIVE_LOAD_Q\";\nIfcActionSourceTypeEnum.SNOW_S = \"SNOW_S\";\nIfcActionSourceTypeEnum.WIND_W = \"WIND_W\";\nIfcActionSourceTypeEnum.PRESTRESSING_P = \"PRESTRESSING_P\";\nIfcActionSourceTypeEnum.SETTLEMENT_U = \"SETTLEMENT_U\";\nIfcActionSourceTypeEnum.TEMPERATURE_T = \"TEMPERATURE_T\";\nIfcActionSourceTypeEnum.EARTHQUAKE_E = \"EARTHQUAKE_E\";\nIfcActionSourceTypeEnum.FIRE = \"FIRE\";\nIfcActionSourceTypeEnum.IMPULSE = \"IMPULSE\";\nIfcActionSourceTypeEnum.IMPACT = \"IMPACT\";\nIfcActionSourceTypeEnum.TRANSPORT = \"TRANSPORT\";\nIfcActionSourceTypeEnum.ERECTION = \"ERECTION\";\nIfcActionSourceTypeEnum.PROPPING = \"PROPPING\";\nIfcActionSourceTypeEnum.SYSTEM_IMPERFECTION = \"SYSTEM_IMPERFECTION\";\nIfcActionSourceTypeEnum.SHRINKAGE = \"SHRINKAGE\";\nIfcActionSourceTypeEnum.CREEP = \"CREEP\";\nIfcActionSourceTypeEnum.LACK_OF_FIT = \"LACK_OF_FIT\";\nIfcActionSourceTypeEnum.BUOYANCY = \"BUOYANCY\";\nIfcActionSourceTypeEnum.ICE = \"ICE\";\nIfcActionSourceTypeEnum.CURRENT = \"CURRENT\";\nIfcActionSourceTypeEnum.WAVE = \"WAVE\";\nIfcActionSourceTypeEnum.RAIN = \"RAIN\";\nIfcActionSourceTypeEnum.BRAKES = \"BRAKES\";\nIfcActionSourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActionSourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActionTypeEnum.PERMANENT_G = \"PERMANENT_G\";\nIfcActionTypeEnum.VARIABLE_Q = \"VARIABLE_Q\";\nIfcActionTypeEnum.EXTRAORDINARY_A = \"EXTRAORDINARY_A\";\nIfcActionTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActionTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActuatorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActuatorTypeEnum.ELECTRICACTUATOR = \"ELECTRICACTUATOR\";\nIfcActuatorTypeEnum.HANDOPERATEDACTUATOR = \"HANDOPERATEDACTUATOR\";\nIfcActuatorTypeEnum.HYDRAULICACTUATOR = \"HYDRAULICACTUATOR\";\nIfcActuatorTypeEnum.PNEUMATICACTUATOR = \"PNEUMATICACTUATOR\";\nIfcActuatorTypeEnum.THERMOSTATICACTUATOR = \"THERMOSTATICACTUATOR\";\nIfcActuatorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActuatorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAddressTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAddressTypeEnum.OFFICE = \"OFFICE\";\nIfcAddressTypeEnum.SITE = \"SITE\";\nIfcAddressTypeEnum.HOME = \"HOME\";\nIfcAddressTypeEnum.DISTRIBUTIONPOINT = \"DISTRIBUTIONPOINT\";\nIfcAddressTypeEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcAirTerminalBoxTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAirTerminalBoxTypeEnum.CONSTANTFLOW = \"CONSTANTFLOW\";\nIfcAirTerminalBoxTypeEnum.VARIABLEFLOWPRESSUREDEPENDANT = \"VARIABLEFLOWPRESSUREDEPENDANT\";\nIfcAirTerminalBoxTypeEnum.VARIABLEFLOWPRESSUREINDEPENDANT = \"VARIABLEFLOWPRESSUREINDEPENDANT\";\nIfcAirTerminalBoxTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAirTerminalBoxTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAirTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAirTerminalTypeEnum.DIFFUSER = \"DIFFUSER\";\nIfcAirTerminalTypeEnum.GRILLE = \"GRILLE\";\nIfcAirTerminalTypeEnum.LOUVRE = \"LOUVRE\";\nIfcAirTerminalTypeEnum.REGISTER = \"REGISTER\";\nIfcAirTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAirTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAirToAirHeatRecoveryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAirToAirHeatRecoveryTypeEnum.FIXEDPLATECOUNTERFLOWEXCHANGER = \"FIXEDPLATECOUNTERFLOWEXCHANGER\";\nIfcAirToAirHeatRecoveryTypeEnum.FIXEDPLATECROSSFLOWEXCHANGER = \"FIXEDPLATECROSSFLOWEXCHANGER\";\nIfcAirToAirHeatRecoveryTypeEnum.FIXEDPLATEPARALLELFLOWEXCHANGER = \"FIXEDPLATEPARALLELFLOWEXCHANGER\";\nIfcAirToAirHeatRecoveryTypeEnum.ROTARYWHEEL = \"ROTARYWHEEL\";\nIfcAirToAirHeatRecoveryTypeEnum.RUNAROUNDCOILLOOP = \"RUNAROUNDCOILLOOP\";\nIfcAirToAirHeatRecoveryTypeEnum.HEATPIPE = \"HEATPIPE\";\nIfcAirToAirHeatRecoveryTypeEnum.TWINTOWERENTHALPYRECOVERYLOOPS = \"TWINTOWERENTHALPYRECOVERYLOOPS\";\nIfcAirToAirHeatRecoveryTypeEnum.THERMOSIPHONSEALEDTUBEHEATEXCHANGERS = \"THERMOSIPHONSEALEDTUBEHEATEXCHANGERS\";\nIfcAirToAirHeatRecoveryTypeEnum.THERMOSIPHONCOILTYPEHEATEXCHANGERS = \"THERMOSIPHONCOILTYPEHEATEXCHANGERS\";\nIfcAirToAirHeatRecoveryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAirToAirHeatRecoveryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAlarmTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAlarmTypeEnum.BELL = \"BELL\";\nIfcAlarmTypeEnum.BREAKGLASSBUTTON = \"BREAKGLASSBUTTON\";\nIfcAlarmTypeEnum.LIGHT = \"LIGHT\";\nIfcAlarmTypeEnum.MANUALPULLBOX = \"MANUALPULLBOX\";\nIfcAlarmTypeEnum.SIREN = \"SIREN\";\nIfcAlarmTypeEnum.WHISTLE = \"WHISTLE\";\nIfcAlarmTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAlarmTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAlignmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAlignmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAlignmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAnalysisModelTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAnalysisModelTypeEnum.IN_PLANE_LOADING_2D = \"IN_PLANE_LOADING_2D\";\nIfcAnalysisModelTypeEnum.OUT_PLANE_LOADING_2D = \"OUT_PLANE_LOADING_2D\";\nIfcAnalysisModelTypeEnum.LOADING_3D = \"LOADING_3D\";\nIfcAnalysisModelTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAnalysisModelTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAnalysisTheoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAnalysisTheoryTypeEnum.FIRST_ORDER_THEORY = \"FIRST_ORDER_THEORY\";\nIfcAnalysisTheoryTypeEnum.SECOND_ORDER_THEORY = \"SECOND_ORDER_THEORY\";\nIfcAnalysisTheoryTypeEnum.THIRD_ORDER_THEORY = \"THIRD_ORDER_THEORY\";\nIfcAnalysisTheoryTypeEnum.FULL_NONLINEAR_THEORY = \"FULL_NONLINEAR_THEORY\";\nIfcAnalysisTheoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAnalysisTheoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcArithmeticOperatorEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcArithmeticOperatorEnum.ADD = \"ADD\";\nIfcArithmeticOperatorEnum.DIVIDE = \"DIVIDE\";\nIfcArithmeticOperatorEnum.MULTIPLY = \"MULTIPLY\";\nIfcArithmeticOperatorEnum.SUBTRACT = \"SUBTRACT\";\nvar IfcAssemblyPlaceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAssemblyPlaceEnum.SITE = \"SITE\";\nIfcAssemblyPlaceEnum.FACTORY = \"FACTORY\";\nIfcAssemblyPlaceEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAudioVisualApplianceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAudioVisualApplianceTypeEnum.AMPLIFIER = \"AMPLIFIER\";\nIfcAudioVisualApplianceTypeEnum.CAMERA = \"CAMERA\";\nIfcAudioVisualApplianceTypeEnum.DISPLAY = \"DISPLAY\";\nIfcAudioVisualApplianceTypeEnum.MICROPHONE = \"MICROPHONE\";\nIfcAudioVisualApplianceTypeEnum.PLAYER = \"PLAYER\";\nIfcAudioVisualApplianceTypeEnum.PROJECTOR = \"PROJECTOR\";\nIfcAudioVisualApplianceTypeEnum.RECEIVER = \"RECEIVER\";\nIfcAudioVisualApplianceTypeEnum.SPEAKER = \"SPEAKER\";\nIfcAudioVisualApplianceTypeEnum.SWITCHER = \"SWITCHER\";\nIfcAudioVisualApplianceTypeEnum.TELEPHONE = \"TELEPHONE\";\nIfcAudioVisualApplianceTypeEnum.TUNER = \"TUNER\";\nIfcAudioVisualApplianceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAudioVisualApplianceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBSplineCurveForm = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBSplineCurveForm.POLYLINE_FORM = \"POLYLINE_FORM\";\nIfcBSplineCurveForm.CIRCULAR_ARC = \"CIRCULAR_ARC\";\nIfcBSplineCurveForm.ELLIPTIC_ARC = \"ELLIPTIC_ARC\";\nIfcBSplineCurveForm.PARABOLIC_ARC = \"PARABOLIC_ARC\";\nIfcBSplineCurveForm.HYPERBOLIC_ARC = \"HYPERBOLIC_ARC\";\nIfcBSplineCurveForm.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcBSplineSurfaceForm = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBSplineSurfaceForm.PLANE_SURF = \"PLANE_SURF\";\nIfcBSplineSurfaceForm.CYLINDRICAL_SURF = \"CYLINDRICAL_SURF\";\nIfcBSplineSurfaceForm.CONICAL_SURF = \"CONICAL_SURF\";\nIfcBSplineSurfaceForm.SPHERICAL_SURF = \"SPHERICAL_SURF\";\nIfcBSplineSurfaceForm.TOROIDAL_SURF = \"TOROIDAL_SURF\";\nIfcBSplineSurfaceForm.SURF_OF_REVOLUTION = \"SURF_OF_REVOLUTION\";\nIfcBSplineSurfaceForm.RULED_SURF = \"RULED_SURF\";\nIfcBSplineSurfaceForm.GENERALISED_CONE = \"GENERALISED_CONE\";\nIfcBSplineSurfaceForm.QUADRIC_SURF = \"QUADRIC_SURF\";\nIfcBSplineSurfaceForm.SURF_OF_LINEAR_EXTRUSION = \"SURF_OF_LINEAR_EXTRUSION\";\nIfcBSplineSurfaceForm.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcBeamTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBeamTypeEnum.BEAM = \"BEAM\";\nIfcBeamTypeEnum.JOIST = \"JOIST\";\nIfcBeamTypeEnum.HOLLOWCORE = \"HOLLOWCORE\";\nIfcBeamTypeEnum.LINTEL = \"LINTEL\";\nIfcBeamTypeEnum.SPANDREL = \"SPANDREL\";\nIfcBeamTypeEnum.T_BEAM = \"T_BEAM\";\nIfcBeamTypeEnum.GIRDER_SEGMENT = \"GIRDER_SEGMENT\";\nIfcBeamTypeEnum.DIAPHRAGM = \"DIAPHRAGM\";\nIfcBeamTypeEnum.PIERCAP = \"PIERCAP\";\nIfcBeamTypeEnum.HATSTONE = \"HATSTONE\";\nIfcBeamTypeEnum.CORNICE = \"CORNICE\";\nIfcBeamTypeEnum.EDGEBEAM = \"EDGEBEAM\";\nIfcBeamTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBeamTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBearingTypeDisplacementEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBearingTypeDisplacementEnum.FIXED_MOVEMENT = \"FIXED_MOVEMENT\";\nIfcBearingTypeDisplacementEnum.GUIDED_LONGITUDINAL = \"GUIDED_LONGITUDINAL\";\nIfcBearingTypeDisplacementEnum.GUIDED_TRANSVERSAL = \"GUIDED_TRANSVERSAL\";\nIfcBearingTypeDisplacementEnum.FREE_MOVEMENT = \"FREE_MOVEMENT\";\nIfcBearingTypeDisplacementEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBearingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBearingTypeEnum.CYLINDRICAL = \"CYLINDRICAL\";\nIfcBearingTypeEnum.SPHERICAL = \"SPHERICAL\";\nIfcBearingTypeEnum.ELASTOMERIC = \"ELASTOMERIC\";\nIfcBearingTypeEnum.POT = \"POT\";\nIfcBearingTypeEnum.GUIDE = \"GUIDE\";\nIfcBearingTypeEnum.ROCKER = \"ROCKER\";\nIfcBearingTypeEnum.ROLLER = \"ROLLER\";\nIfcBearingTypeEnum.DISK = \"DISK\";\nIfcBearingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBearingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBenchmarkEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBenchmarkEnum.GREATERTHAN = \"GREATERTHAN\";\nIfcBenchmarkEnum.GREATERTHANOREQUALTO = \"GREATERTHANOREQUALTO\";\nIfcBenchmarkEnum.LESSTHAN = \"LESSTHAN\";\nIfcBenchmarkEnum.LESSTHANOREQUALTO = \"LESSTHANOREQUALTO\";\nIfcBenchmarkEnum.EQUALTO = \"EQUALTO\";\nIfcBenchmarkEnum.NOTEQUALTO = \"NOTEQUALTO\";\nIfcBenchmarkEnum.INCLUDES = \"INCLUDES\";\nIfcBenchmarkEnum.NOTINCLUDES = \"NOTINCLUDES\";\nIfcBenchmarkEnum.INCLUDEDIN = \"INCLUDEDIN\";\nIfcBenchmarkEnum.NOTINCLUDEDIN = \"NOTINCLUDEDIN\";\nvar IfcBoilerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBoilerTypeEnum.WATER = \"WATER\";\nIfcBoilerTypeEnum.STEAM = \"STEAM\";\nIfcBoilerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBoilerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBooleanOperator = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBooleanOperator.UNION = \"UNION\";\nIfcBooleanOperator.INTERSECTION = \"INTERSECTION\";\nIfcBooleanOperator.DIFFERENCE = \"DIFFERENCE\";\nvar IfcBridgePartTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBridgePartTypeEnum.ABUTMENT = \"ABUTMENT\";\nIfcBridgePartTypeEnum.DECK = \"DECK\";\nIfcBridgePartTypeEnum.DECK_SEGMENT = \"DECK_SEGMENT\";\nIfcBridgePartTypeEnum.FOUNDATION = \"FOUNDATION\";\nIfcBridgePartTypeEnum.PIER = \"PIER\";\nIfcBridgePartTypeEnum.PIER_SEGMENT = \"PIER_SEGMENT\";\nIfcBridgePartTypeEnum.PYLON = \"PYLON\";\nIfcBridgePartTypeEnum.SUBSTRUCTURE = \"SUBSTRUCTURE\";\nIfcBridgePartTypeEnum.SUPERSTRUCTURE = \"SUPERSTRUCTURE\";\nIfcBridgePartTypeEnum.SURFACESTRUCTURE = \"SURFACESTRUCTURE\";\nIfcBridgePartTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBridgePartTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBridgeTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBridgeTypeEnum.ARCHED = \"ARCHED\";\nIfcBridgeTypeEnum.CABLE_STAYED = \"CABLE_STAYED\";\nIfcBridgeTypeEnum.CANTILEVER = \"CANTILEVER\";\nIfcBridgeTypeEnum.CULVERT = \"CULVERT\";\nIfcBridgeTypeEnum.FRAMEWORK = \"FRAMEWORK\";\nIfcBridgeTypeEnum.GIRDER = \"GIRDER\";\nIfcBridgeTypeEnum.SUSPENSION = \"SUSPENSION\";\nIfcBridgeTypeEnum.TRUSS = \"TRUSS\";\nIfcBridgeTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBridgeTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBuildingElementPartTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBuildingElementPartTypeEnum.INSULATION = \"INSULATION\";\nIfcBuildingElementPartTypeEnum.PRECASTPANEL = \"PRECASTPANEL\";\nIfcBuildingElementPartTypeEnum.APRON = \"APRON\";\nIfcBuildingElementPartTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBuildingElementPartTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBuildingElementProxyTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBuildingElementProxyTypeEnum.COMPLEX = \"COMPLEX\";\nIfcBuildingElementProxyTypeEnum.ELEMENT = \"ELEMENT\";\nIfcBuildingElementProxyTypeEnum.PARTIAL = \"PARTIAL\";\nIfcBuildingElementProxyTypeEnum.PROVISIONFORVOID = \"PROVISIONFORVOID\";\nIfcBuildingElementProxyTypeEnum.PROVISIONFORSPACE = \"PROVISIONFORSPACE\";\nIfcBuildingElementProxyTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBuildingElementProxyTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBuildingSystemTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBuildingSystemTypeEnum.FENESTRATION = \"FENESTRATION\";\nIfcBuildingSystemTypeEnum.FOUNDATION = \"FOUNDATION\";\nIfcBuildingSystemTypeEnum.LOADBEARING = \"LOADBEARING\";\nIfcBuildingSystemTypeEnum.OUTERSHELL = \"OUTERSHELL\";\nIfcBuildingSystemTypeEnum.SHADING = \"SHADING\";\nIfcBuildingSystemTypeEnum.TRANSPORT = \"TRANSPORT\";\nIfcBuildingSystemTypeEnum.REINFORCING = \"REINFORCING\";\nIfcBuildingSystemTypeEnum.PRESTRESSING = \"PRESTRESSING\";\nIfcBuildingSystemTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBuildingSystemTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBurnerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBurnerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBurnerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableCarrierFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableCarrierFittingTypeEnum.BEND = \"BEND\";\nIfcCableCarrierFittingTypeEnum.CROSS = \"CROSS\";\nIfcCableCarrierFittingTypeEnum.REDUCER = \"REDUCER\";\nIfcCableCarrierFittingTypeEnum.TEE = \"TEE\";\nIfcCableCarrierFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableCarrierFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableCarrierSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableCarrierSegmentTypeEnum.CABLELADDERSEGMENT = \"CABLELADDERSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.CABLETRAYSEGMENT = \"CABLETRAYSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.CABLETRUNKINGSEGMENT = \"CABLETRUNKINGSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.CONDUITSEGMENT = \"CONDUITSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableCarrierSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableFittingTypeEnum.CONNECTOR = \"CONNECTOR\";\nIfcCableFittingTypeEnum.ENTRY = \"ENTRY\";\nIfcCableFittingTypeEnum.EXIT = \"EXIT\";\nIfcCableFittingTypeEnum.JUNCTION = \"JUNCTION\";\nIfcCableFittingTypeEnum.TRANSITION = \"TRANSITION\";\nIfcCableFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableSegmentTypeEnum.BUSBARSEGMENT = \"BUSBARSEGMENT\";\nIfcCableSegmentTypeEnum.CABLESEGMENT = \"CABLESEGMENT\";\nIfcCableSegmentTypeEnum.CONDUCTORSEGMENT = \"CONDUCTORSEGMENT\";\nIfcCableSegmentTypeEnum.CORESEGMENT = \"CORESEGMENT\";\nIfcCableSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCaissonFoundationTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCaissonFoundationTypeEnum.WELL = \"WELL\";\nIfcCaissonFoundationTypeEnum.CAISSON = \"CAISSON\";\nIfcCaissonFoundationTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCaissonFoundationTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcChangeActionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcChangeActionEnum.NOCHANGE = \"NOCHANGE\";\nIfcChangeActionEnum.MODIFIED = \"MODIFIED\";\nIfcChangeActionEnum.ADDED = \"ADDED\";\nIfcChangeActionEnum.DELETED = \"DELETED\";\nIfcChangeActionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcChillerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcChillerTypeEnum.AIRCOOLED = \"AIRCOOLED\";\nIfcChillerTypeEnum.WATERCOOLED = \"WATERCOOLED\";\nIfcChillerTypeEnum.HEATRECOVERY = \"HEATRECOVERY\";\nIfcChillerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcChillerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcChimneyTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcChimneyTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcChimneyTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCoilTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCoilTypeEnum.DXCOOLINGCOIL = \"DXCOOLINGCOIL\";\nIfcCoilTypeEnum.ELECTRICHEATINGCOIL = \"ELECTRICHEATINGCOIL\";\nIfcCoilTypeEnum.GASHEATINGCOIL = \"GASHEATINGCOIL\";\nIfcCoilTypeEnum.HYDRONICCOIL = \"HYDRONICCOIL\";\nIfcCoilTypeEnum.STEAMHEATINGCOIL = \"STEAMHEATINGCOIL\";\nIfcCoilTypeEnum.WATERCOOLINGCOIL = \"WATERCOOLINGCOIL\";\nIfcCoilTypeEnum.WATERHEATINGCOIL = \"WATERHEATINGCOIL\";\nIfcCoilTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCoilTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcColumnTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcColumnTypeEnum.COLUMN = \"COLUMN\";\nIfcColumnTypeEnum.PILASTER = \"PILASTER\";\nIfcColumnTypeEnum.PIERSTEM = \"PIERSTEM\";\nIfcColumnTypeEnum.PIERSTEM_SEGMENT = \"PIERSTEM_SEGMENT\";\nIfcColumnTypeEnum.STANDCOLUMN = \"STANDCOLUMN\";\nIfcColumnTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcColumnTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCommunicationsApplianceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCommunicationsApplianceTypeEnum.ANTENNA = \"ANTENNA\";\nIfcCommunicationsApplianceTypeEnum.COMPUTER = \"COMPUTER\";\nIfcCommunicationsApplianceTypeEnum.FAX = \"FAX\";\nIfcCommunicationsApplianceTypeEnum.GATEWAY = \"GATEWAY\";\nIfcCommunicationsApplianceTypeEnum.MODEM = \"MODEM\";\nIfcCommunicationsApplianceTypeEnum.NETWORKAPPLIANCE = \"NETWORKAPPLIANCE\";\nIfcCommunicationsApplianceTypeEnum.NETWORKBRIDGE = \"NETWORKBRIDGE\";\nIfcCommunicationsApplianceTypeEnum.NETWORKHUB = \"NETWORKHUB\";\nIfcCommunicationsApplianceTypeEnum.PRINTER = \"PRINTER\";\nIfcCommunicationsApplianceTypeEnum.REPEATER = \"REPEATER\";\nIfcCommunicationsApplianceTypeEnum.ROUTER = \"ROUTER\";\nIfcCommunicationsApplianceTypeEnum.SCANNER = \"SCANNER\";\nIfcCommunicationsApplianceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCommunicationsApplianceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcComplexPropertyTemplateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcComplexPropertyTemplateTypeEnum.P_COMPLEX = \"P_COMPLEX\";\nIfcComplexPropertyTemplateTypeEnum.Q_COMPLEX = \"Q_COMPLEX\";\nvar IfcCompressorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCompressorTypeEnum.DYNAMIC = \"DYNAMIC\";\nIfcCompressorTypeEnum.RECIPROCATING = \"RECIPROCATING\";\nIfcCompressorTypeEnum.ROTARY = \"ROTARY\";\nIfcCompressorTypeEnum.SCROLL = \"SCROLL\";\nIfcCompressorTypeEnum.TROCHOIDAL = \"TROCHOIDAL\";\nIfcCompressorTypeEnum.SINGLESTAGE = \"SINGLESTAGE\";\nIfcCompressorTypeEnum.BOOSTER = \"BOOSTER\";\nIfcCompressorTypeEnum.OPENTYPE = \"OPENTYPE\";\nIfcCompressorTypeEnum.HERMETIC = \"HERMETIC\";\nIfcCompressorTypeEnum.SEMIHERMETIC = \"SEMIHERMETIC\";\nIfcCompressorTypeEnum.WELDEDSHELLHERMETIC = \"WELDEDSHELLHERMETIC\";\nIfcCompressorTypeEnum.ROLLINGPISTON = \"ROLLINGPISTON\";\nIfcCompressorTypeEnum.ROTARYVANE = \"ROTARYVANE\";\nIfcCompressorTypeEnum.SINGLESCREW = \"SINGLESCREW\";\nIfcCompressorTypeEnum.TWINSCREW = \"TWINSCREW\";\nIfcCompressorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCompressorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCondenserTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCondenserTypeEnum.AIRCOOLED = \"AIRCOOLED\";\nIfcCondenserTypeEnum.EVAPORATIVECOOLED = \"EVAPORATIVECOOLED\";\nIfcCondenserTypeEnum.WATERCOOLED = \"WATERCOOLED\";\nIfcCondenserTypeEnum.WATERCOOLEDBRAZEDPLATE = \"WATERCOOLEDBRAZEDPLATE\";\nIfcCondenserTypeEnum.WATERCOOLEDSHELLCOIL = \"WATERCOOLEDSHELLCOIL\";\nIfcCondenserTypeEnum.WATERCOOLEDSHELLTUBE = \"WATERCOOLEDSHELLTUBE\";\nIfcCondenserTypeEnum.WATERCOOLEDTUBEINTUBE = \"WATERCOOLEDTUBEINTUBE\";\nIfcCondenserTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCondenserTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConnectionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConnectionTypeEnum.ATPATH = \"ATPATH\";\nIfcConnectionTypeEnum.ATSTART = \"ATSTART\";\nIfcConnectionTypeEnum.ATEND = \"ATEND\";\nIfcConnectionTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConstraintEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstraintEnum.HARD = \"HARD\";\nIfcConstraintEnum.SOFT = \"SOFT\";\nIfcConstraintEnum.ADVISORY = \"ADVISORY\";\nIfcConstraintEnum.USERDEFINED = \"USERDEFINED\";\nIfcConstraintEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConstructionEquipmentResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstructionEquipmentResourceTypeEnum.DEMOLISHING = \"DEMOLISHING\";\nIfcConstructionEquipmentResourceTypeEnum.EARTHMOVING = \"EARTHMOVING\";\nIfcConstructionEquipmentResourceTypeEnum.ERECTING = \"ERECTING\";\nIfcConstructionEquipmentResourceTypeEnum.HEATING = \"HEATING\";\nIfcConstructionEquipmentResourceTypeEnum.LIGHTING = \"LIGHTING\";\nIfcConstructionEquipmentResourceTypeEnum.PAVING = \"PAVING\";\nIfcConstructionEquipmentResourceTypeEnum.PUMPING = \"PUMPING\";\nIfcConstructionEquipmentResourceTypeEnum.TRANSPORTING = \"TRANSPORTING\";\nIfcConstructionEquipmentResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcConstructionEquipmentResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConstructionMaterialResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstructionMaterialResourceTypeEnum.AGGREGATES = \"AGGREGATES\";\nIfcConstructionMaterialResourceTypeEnum.CONCRETE = \"CONCRETE\";\nIfcConstructionMaterialResourceTypeEnum.DRYWALL = \"DRYWALL\";\nIfcConstructionMaterialResourceTypeEnum.FUEL = \"FUEL\";\nIfcConstructionMaterialResourceTypeEnum.GYPSUM = \"GYPSUM\";\nIfcConstructionMaterialResourceTypeEnum.MASONRY = \"MASONRY\";\nIfcConstructionMaterialResourceTypeEnum.METAL = \"METAL\";\nIfcConstructionMaterialResourceTypeEnum.PLASTIC = \"PLASTIC\";\nIfcConstructionMaterialResourceTypeEnum.WOOD = \"WOOD\";\nIfcConstructionMaterialResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nIfcConstructionMaterialResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcConstructionProductResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstructionProductResourceTypeEnum.ASSEMBLY = \"ASSEMBLY\";\nIfcConstructionProductResourceTypeEnum.FORMWORK = \"FORMWORK\";\nIfcConstructionProductResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcConstructionProductResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcControllerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcControllerTypeEnum.FLOATING = \"FLOATING\";\nIfcControllerTypeEnum.PROGRAMMABLE = \"PROGRAMMABLE\";\nIfcControllerTypeEnum.PROPORTIONAL = \"PROPORTIONAL\";\nIfcControllerTypeEnum.MULTIPOSITION = \"MULTIPOSITION\";\nIfcControllerTypeEnum.TWOPOSITION = \"TWOPOSITION\";\nIfcControllerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcControllerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCooledBeamTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCooledBeamTypeEnum.ACTIVE = \"ACTIVE\";\nIfcCooledBeamTypeEnum.PASSIVE = \"PASSIVE\";\nIfcCooledBeamTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCooledBeamTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCoolingTowerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCoolingTowerTypeEnum.NATURALDRAFT = \"NATURALDRAFT\";\nIfcCoolingTowerTypeEnum.MECHANICALINDUCEDDRAFT = \"MECHANICALINDUCEDDRAFT\";\nIfcCoolingTowerTypeEnum.MECHANICALFORCEDDRAFT = \"MECHANICALFORCEDDRAFT\";\nIfcCoolingTowerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCoolingTowerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCostItemTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCostItemTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCostItemTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCostScheduleTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCostScheduleTypeEnum.BUDGET = \"BUDGET\";\nIfcCostScheduleTypeEnum.COSTPLAN = \"COSTPLAN\";\nIfcCostScheduleTypeEnum.ESTIMATE = \"ESTIMATE\";\nIfcCostScheduleTypeEnum.TENDER = \"TENDER\";\nIfcCostScheduleTypeEnum.PRICEDBILLOFQUANTITIES = \"PRICEDBILLOFQUANTITIES\";\nIfcCostScheduleTypeEnum.UNPRICEDBILLOFQUANTITIES = \"UNPRICEDBILLOFQUANTITIES\";\nIfcCostScheduleTypeEnum.SCHEDULEOFRATES = \"SCHEDULEOFRATES\";\nIfcCostScheduleTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCostScheduleTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCoveringTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCoveringTypeEnum.CEILING = \"CEILING\";\nIfcCoveringTypeEnum.FLOORING = \"FLOORING\";\nIfcCoveringTypeEnum.CLADDING = \"CLADDING\";\nIfcCoveringTypeEnum.ROOFING = \"ROOFING\";\nIfcCoveringTypeEnum.MOLDING = \"MOLDING\";\nIfcCoveringTypeEnum.SKIRTINGBOARD = \"SKIRTINGBOARD\";\nIfcCoveringTypeEnum.INSULATION = \"INSULATION\";\nIfcCoveringTypeEnum.MEMBRANE = \"MEMBRANE\";\nIfcCoveringTypeEnum.SLEEVING = \"SLEEVING\";\nIfcCoveringTypeEnum.WRAPPING = \"WRAPPING\";\nIfcCoveringTypeEnum.COPING = \"COPING\";\nIfcCoveringTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCoveringTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCrewResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCrewResourceTypeEnum.OFFICE = \"OFFICE\";\nIfcCrewResourceTypeEnum.SITE = \"SITE\";\nIfcCrewResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCrewResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCurtainWallTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCurtainWallTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCurtainWallTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCurveInterpolationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCurveInterpolationEnum.LINEAR = \"LINEAR\";\nIfcCurveInterpolationEnum.LOG_LINEAR = \"LOG_LINEAR\";\nIfcCurveInterpolationEnum.LOG_LOG = \"LOG_LOG\";\nIfcCurveInterpolationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDamperTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDamperTypeEnum.BACKDRAFTDAMPER = \"BACKDRAFTDAMPER\";\nIfcDamperTypeEnum.BALANCINGDAMPER = \"BALANCINGDAMPER\";\nIfcDamperTypeEnum.BLASTDAMPER = \"BLASTDAMPER\";\nIfcDamperTypeEnum.CONTROLDAMPER = \"CONTROLDAMPER\";\nIfcDamperTypeEnum.FIREDAMPER = \"FIREDAMPER\";\nIfcDamperTypeEnum.FIRESMOKEDAMPER = \"FIRESMOKEDAMPER\";\nIfcDamperTypeEnum.FUMEHOODEXHAUST = \"FUMEHOODEXHAUST\";\nIfcDamperTypeEnum.GRAVITYDAMPER = \"GRAVITYDAMPER\";\nIfcDamperTypeEnum.GRAVITYRELIEFDAMPER = \"GRAVITYRELIEFDAMPER\";\nIfcDamperTypeEnum.RELIEFDAMPER = \"RELIEFDAMPER\";\nIfcDamperTypeEnum.SMOKEDAMPER = \"SMOKEDAMPER\";\nIfcDamperTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDamperTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDataOriginEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDataOriginEnum.MEASURED = \"MEASURED\";\nIfcDataOriginEnum.PREDICTED = \"PREDICTED\";\nIfcDataOriginEnum.SIMULATED = \"SIMULATED\";\nIfcDataOriginEnum.USERDEFINED = \"USERDEFINED\";\nIfcDataOriginEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDerivedUnitEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDerivedUnitEnum.ANGULARVELOCITYUNIT = \"ANGULARVELOCITYUNIT\";\nIfcDerivedUnitEnum.AREADENSITYUNIT = \"AREADENSITYUNIT\";\nIfcDerivedUnitEnum.COMPOUNDPLANEANGLEUNIT = \"COMPOUNDPLANEANGLEUNIT\";\nIfcDerivedUnitEnum.DYNAMICVISCOSITYUNIT = \"DYNAMICVISCOSITYUNIT\";\nIfcDerivedUnitEnum.HEATFLUXDENSITYUNIT = \"HEATFLUXDENSITYUNIT\";\nIfcDerivedUnitEnum.INTEGERCOUNTRATEUNIT = \"INTEGERCOUNTRATEUNIT\";\nIfcDerivedUnitEnum.ISOTHERMALMOISTURECAPACITYUNIT = \"ISOTHERMALMOISTURECAPACITYUNIT\";\nIfcDerivedUnitEnum.KINEMATICVISCOSITYUNIT = \"KINEMATICVISCOSITYUNIT\";\nIfcDerivedUnitEnum.LINEARVELOCITYUNIT = \"LINEARVELOCITYUNIT\";\nIfcDerivedUnitEnum.MASSDENSITYUNIT = \"MASSDENSITYUNIT\";\nIfcDerivedUnitEnum.MASSFLOWRATEUNIT = \"MASSFLOWRATEUNIT\";\nIfcDerivedUnitEnum.MOISTUREDIFFUSIVITYUNIT = \"MOISTUREDIFFUSIVITYUNIT\";\nIfcDerivedUnitEnum.MOLECULARWEIGHTUNIT = \"MOLECULARWEIGHTUNIT\";\nIfcDerivedUnitEnum.SPECIFICHEATCAPACITYUNIT = \"SPECIFICHEATCAPACITYUNIT\";\nIfcDerivedUnitEnum.THERMALADMITTANCEUNIT = \"THERMALADMITTANCEUNIT\";\nIfcDerivedUnitEnum.THERMALCONDUCTANCEUNIT = \"THERMALCONDUCTANCEUNIT\";\nIfcDerivedUnitEnum.THERMALRESISTANCEUNIT = \"THERMALRESISTANCEUNIT\";\nIfcDerivedUnitEnum.THERMALTRANSMITTANCEUNIT = \"THERMALTRANSMITTANCEUNIT\";\nIfcDerivedUnitEnum.VAPORPERMEABILITYUNIT = \"VAPORPERMEABILITYUNIT\";\nIfcDerivedUnitEnum.VOLUMETRICFLOWRATEUNIT = \"VOLUMETRICFLOWRATEUNIT\";\nIfcDerivedUnitEnum.ROTATIONALFREQUENCYUNIT = \"ROTATIONALFREQUENCYUNIT\";\nIfcDerivedUnitEnum.TORQUEUNIT = \"TORQUEUNIT\";\nIfcDerivedUnitEnum.MOMENTOFINERTIAUNIT = \"MOMENTOFINERTIAUNIT\";\nIfcDerivedUnitEnum.LINEARMOMENTUNIT = \"LINEARMOMENTUNIT\";\nIfcDerivedUnitEnum.LINEARFORCEUNIT = \"LINEARFORCEUNIT\";\nIfcDerivedUnitEnum.PLANARFORCEUNIT = \"PLANARFORCEUNIT\";\nIfcDerivedUnitEnum.MODULUSOFELASTICITYUNIT = \"MODULUSOFELASTICITYUNIT\";\nIfcDerivedUnitEnum.SHEARMODULUSUNIT = \"SHEARMODULUSUNIT\";\nIfcDerivedUnitEnum.LINEARSTIFFNESSUNIT = \"LINEARSTIFFNESSUNIT\";\nIfcDerivedUnitEnum.ROTATIONALSTIFFNESSUNIT = \"ROTATIONALSTIFFNESSUNIT\";\nIfcDerivedUnitEnum.MODULUSOFSUBGRADEREACTIONUNIT = \"MODULUSOFSUBGRADEREACTIONUNIT\";\nIfcDerivedUnitEnum.ACCELERATIONUNIT = \"ACCELERATIONUNIT\";\nIfcDerivedUnitEnum.CURVATUREUNIT = \"CURVATUREUNIT\";\nIfcDerivedUnitEnum.HEATINGVALUEUNIT = \"HEATINGVALUEUNIT\";\nIfcDerivedUnitEnum.IONCONCENTRATIONUNIT = \"IONCONCENTRATIONUNIT\";\nIfcDerivedUnitEnum.LUMINOUSINTENSITYDISTRIBUTIONUNIT = \"LUMINOUSINTENSITYDISTRIBUTIONUNIT\";\nIfcDerivedUnitEnum.MASSPERLENGTHUNIT = \"MASSPERLENGTHUNIT\";\nIfcDerivedUnitEnum.MODULUSOFLINEARSUBGRADEREACTIONUNIT = \"MODULUSOFLINEARSUBGRADEREACTIONUNIT\";\nIfcDerivedUnitEnum.MODULUSOFROTATIONALSUBGRADEREACTIONUNIT = \"MODULUSOFROTATIONALSUBGRADEREACTIONUNIT\";\nIfcDerivedUnitEnum.PHUNIT = \"PHUNIT\";\nIfcDerivedUnitEnum.ROTATIONALMASSUNIT = \"ROTATIONALMASSUNIT\";\nIfcDerivedUnitEnum.SECTIONAREAINTEGRALUNIT = \"SECTIONAREAINTEGRALUNIT\";\nIfcDerivedUnitEnum.SECTIONMODULUSUNIT = \"SECTIONMODULUSUNIT\";\nIfcDerivedUnitEnum.SOUNDPOWERLEVELUNIT = \"SOUNDPOWERLEVELUNIT\";\nIfcDerivedUnitEnum.SOUNDPOWERUNIT = \"SOUNDPOWERUNIT\";\nIfcDerivedUnitEnum.SOUNDPRESSURELEVELUNIT = \"SOUNDPRESSURELEVELUNIT\";\nIfcDerivedUnitEnum.SOUNDPRESSUREUNIT = \"SOUNDPRESSUREUNIT\";\nIfcDerivedUnitEnum.TEMPERATUREGRADIENTUNIT = \"TEMPERATUREGRADIENTUNIT\";\nIfcDerivedUnitEnum.TEMPERATURERATEOFCHANGEUNIT = \"TEMPERATURERATEOFCHANGEUNIT\";\nIfcDerivedUnitEnum.THERMALEXPANSIONCOEFFICIENTUNIT = \"THERMALEXPANSIONCOEFFICIENTUNIT\";\nIfcDerivedUnitEnum.WARPINGCONSTANTUNIT = \"WARPINGCONSTANTUNIT\";\nIfcDerivedUnitEnum.WARPINGMOMENTUNIT = \"WARPINGMOMENTUNIT\";\nIfcDerivedUnitEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcDirectionSenseEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDirectionSenseEnum.POSITIVE = \"POSITIVE\";\nIfcDirectionSenseEnum.NEGATIVE = \"NEGATIVE\";\nvar IfcDiscreteAccessoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDiscreteAccessoryTypeEnum.ANCHORPLATE = \"ANCHORPLATE\";\nIfcDiscreteAccessoryTypeEnum.BRACKET = \"BRACKET\";\nIfcDiscreteAccessoryTypeEnum.SHOE = \"SHOE\";\nIfcDiscreteAccessoryTypeEnum.EXPANSION_JOINT_DEVICE = \"EXPANSION_JOINT_DEVICE\";\nIfcDiscreteAccessoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDiscreteAccessoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDistributionChamberElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDistributionChamberElementTypeEnum.FORMEDDUCT = \"FORMEDDUCT\";\nIfcDistributionChamberElementTypeEnum.INSPECTIONCHAMBER = \"INSPECTIONCHAMBER\";\nIfcDistributionChamberElementTypeEnum.INSPECTIONPIT = \"INSPECTIONPIT\";\nIfcDistributionChamberElementTypeEnum.MANHOLE = \"MANHOLE\";\nIfcDistributionChamberElementTypeEnum.METERCHAMBER = \"METERCHAMBER\";\nIfcDistributionChamberElementTypeEnum.SUMP = \"SUMP\";\nIfcDistributionChamberElementTypeEnum.TRENCH = \"TRENCH\";\nIfcDistributionChamberElementTypeEnum.VALVECHAMBER = \"VALVECHAMBER\";\nIfcDistributionChamberElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDistributionChamberElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDistributionPortTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDistributionPortTypeEnum.CABLE = \"CABLE\";\nIfcDistributionPortTypeEnum.CABLECARRIER = \"CABLECARRIER\";\nIfcDistributionPortTypeEnum.DUCT = \"DUCT\";\nIfcDistributionPortTypeEnum.PIPE = \"PIPE\";\nIfcDistributionPortTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDistributionPortTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDistributionSystemEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDistributionSystemEnum.AIRCONDITIONING = \"AIRCONDITIONING\";\nIfcDistributionSystemEnum.AUDIOVISUAL = \"AUDIOVISUAL\";\nIfcDistributionSystemEnum.CHEMICAL = \"CHEMICAL\";\nIfcDistributionSystemEnum.CHILLEDWATER = \"CHILLEDWATER\";\nIfcDistributionSystemEnum.COMMUNICATION = \"COMMUNICATION\";\nIfcDistributionSystemEnum.COMPRESSEDAIR = \"COMPRESSEDAIR\";\nIfcDistributionSystemEnum.CONDENSERWATER = \"CONDENSERWATER\";\nIfcDistributionSystemEnum.CONTROL = \"CONTROL\";\nIfcDistributionSystemEnum.CONVEYING = \"CONVEYING\";\nIfcDistributionSystemEnum.DATA = \"DATA\";\nIfcDistributionSystemEnum.DISPOSAL = \"DISPOSAL\";\nIfcDistributionSystemEnum.DOMESTICCOLDWATER = \"DOMESTICCOLDWATER\";\nIfcDistributionSystemEnum.DOMESTICHOTWATER = \"DOMESTICHOTWATER\";\nIfcDistributionSystemEnum.DRAINAGE = \"DRAINAGE\";\nIfcDistributionSystemEnum.EARTHING = \"EARTHING\";\nIfcDistributionSystemEnum.ELECTRICAL = \"ELECTRICAL\";\nIfcDistributionSystemEnum.ELECTROACOUSTIC = \"ELECTROACOUSTIC\";\nIfcDistributionSystemEnum.EXHAUST = \"EXHAUST\";\nIfcDistributionSystemEnum.FIREPROTECTION = \"FIREPROTECTION\";\nIfcDistributionSystemEnum.FUEL = \"FUEL\";\nIfcDistributionSystemEnum.GAS = \"GAS\";\nIfcDistributionSystemEnum.HAZARDOUS = \"HAZARDOUS\";\nIfcDistributionSystemEnum.HEATING = \"HEATING\";\nIfcDistributionSystemEnum.LIGHTING = \"LIGHTING\";\nIfcDistributionSystemEnum.LIGHTNINGPROTECTION = \"LIGHTNINGPROTECTION\";\nIfcDistributionSystemEnum.MUNICIPALSOLIDWASTE = \"MUNICIPALSOLIDWASTE\";\nIfcDistributionSystemEnum.OIL = \"OIL\";\nIfcDistributionSystemEnum.OPERATIONAL = \"OPERATIONAL\";\nIfcDistributionSystemEnum.POWERGENERATION = \"POWERGENERATION\";\nIfcDistributionSystemEnum.RAINWATER = \"RAINWATER\";\nIfcDistributionSystemEnum.REFRIGERATION = \"REFRIGERATION\";\nIfcDistributionSystemEnum.SECURITY = \"SECURITY\";\nIfcDistributionSystemEnum.SEWAGE = \"SEWAGE\";\nIfcDistributionSystemEnum.SIGNAL = \"SIGNAL\";\nIfcDistributionSystemEnum.STORMWATER = \"STORMWATER\";\nIfcDistributionSystemEnum.TELEPHONE = \"TELEPHONE\";\nIfcDistributionSystemEnum.TV = \"TV\";\nIfcDistributionSystemEnum.VACUUM = \"VACUUM\";\nIfcDistributionSystemEnum.VENT = \"VENT\";\nIfcDistributionSystemEnum.VENTILATION = \"VENTILATION\";\nIfcDistributionSystemEnum.WASTEWATER = \"WASTEWATER\";\nIfcDistributionSystemEnum.WATERSUPPLY = \"WATERSUPPLY\";\nIfcDistributionSystemEnum.USERDEFINED = \"USERDEFINED\";\nIfcDistributionSystemEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDocumentConfidentialityEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDocumentConfidentialityEnum.PUBLIC = \"PUBLIC\";\nIfcDocumentConfidentialityEnum.RESTRICTED = \"RESTRICTED\";\nIfcDocumentConfidentialityEnum.CONFIDENTIAL = \"CONFIDENTIAL\";\nIfcDocumentConfidentialityEnum.PERSONAL = \"PERSONAL\";\nIfcDocumentConfidentialityEnum.USERDEFINED = \"USERDEFINED\";\nIfcDocumentConfidentialityEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDocumentStatusEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDocumentStatusEnum.DRAFT = \"DRAFT\";\nIfcDocumentStatusEnum.FINALDRAFT = \"FINALDRAFT\";\nIfcDocumentStatusEnum.FINAL = \"FINAL\";\nIfcDocumentStatusEnum.REVISION = \"REVISION\";\nIfcDocumentStatusEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorPanelOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorPanelOperationEnum.SWINGING = \"SWINGING\";\nIfcDoorPanelOperationEnum.DOUBLE_ACTING = \"DOUBLE_ACTING\";\nIfcDoorPanelOperationEnum.SLIDING = \"SLIDING\";\nIfcDoorPanelOperationEnum.FOLDING = \"FOLDING\";\nIfcDoorPanelOperationEnum.REVOLVING = \"REVOLVING\";\nIfcDoorPanelOperationEnum.ROLLINGUP = \"ROLLINGUP\";\nIfcDoorPanelOperationEnum.FIXEDPANEL = \"FIXEDPANEL\";\nIfcDoorPanelOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorPanelOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorPanelPositionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorPanelPositionEnum.LEFT = \"LEFT\";\nIfcDoorPanelPositionEnum.MIDDLE = \"MIDDLE\";\nIfcDoorPanelPositionEnum.RIGHT = \"RIGHT\";\nIfcDoorPanelPositionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorStyleConstructionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorStyleConstructionEnum.ALUMINIUM = \"ALUMINIUM\";\nIfcDoorStyleConstructionEnum.HIGH_GRADE_STEEL = \"HIGH_GRADE_STEEL\";\nIfcDoorStyleConstructionEnum.STEEL = \"STEEL\";\nIfcDoorStyleConstructionEnum.WOOD = \"WOOD\";\nIfcDoorStyleConstructionEnum.ALUMINIUM_WOOD = \"ALUMINIUM_WOOD\";\nIfcDoorStyleConstructionEnum.ALUMINIUM_PLASTIC = \"ALUMINIUM_PLASTIC\";\nIfcDoorStyleConstructionEnum.PLASTIC = \"PLASTIC\";\nIfcDoorStyleConstructionEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorStyleConstructionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorStyleOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorStyleOperationEnum.SINGLE_SWING_LEFT = \"SINGLE_SWING_LEFT\";\nIfcDoorStyleOperationEnum.SINGLE_SWING_RIGHT = \"SINGLE_SWING_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SINGLE_SWING = \"DOUBLE_DOOR_SINGLE_SWING\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_SWING_LEFT = \"DOUBLE_SWING_LEFT\";\nIfcDoorStyleOperationEnum.DOUBLE_SWING_RIGHT = \"DOUBLE_SWING_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_DOUBLE_SWING = \"DOUBLE_DOOR_DOUBLE_SWING\";\nIfcDoorStyleOperationEnum.SLIDING_TO_LEFT = \"SLIDING_TO_LEFT\";\nIfcDoorStyleOperationEnum.SLIDING_TO_RIGHT = \"SLIDING_TO_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SLIDING = \"DOUBLE_DOOR_SLIDING\";\nIfcDoorStyleOperationEnum.FOLDING_TO_LEFT = \"FOLDING_TO_LEFT\";\nIfcDoorStyleOperationEnum.FOLDING_TO_RIGHT = \"FOLDING_TO_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_FOLDING = \"DOUBLE_DOOR_FOLDING\";\nIfcDoorStyleOperationEnum.REVOLVING = \"REVOLVING\";\nIfcDoorStyleOperationEnum.ROLLINGUP = \"ROLLINGUP\";\nIfcDoorStyleOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorStyleOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorTypeEnum.DOOR = \"DOOR\";\nIfcDoorTypeEnum.GATE = \"GATE\";\nIfcDoorTypeEnum.TRAPDOOR = \"TRAPDOOR\";\nIfcDoorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorTypeOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorTypeOperationEnum.SINGLE_SWING_LEFT = \"SINGLE_SWING_LEFT\";\nIfcDoorTypeOperationEnum.SINGLE_SWING_RIGHT = \"SINGLE_SWING_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING = \"DOUBLE_DOOR_SINGLE_SWING\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_SWING_LEFT = \"DOUBLE_SWING_LEFT\";\nIfcDoorTypeOperationEnum.DOUBLE_SWING_RIGHT = \"DOUBLE_SWING_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_DOUBLE_SWING = \"DOUBLE_DOOR_DOUBLE_SWING\";\nIfcDoorTypeOperationEnum.SLIDING_TO_LEFT = \"SLIDING_TO_LEFT\";\nIfcDoorTypeOperationEnum.SLIDING_TO_RIGHT = \"SLIDING_TO_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SLIDING = \"DOUBLE_DOOR_SLIDING\";\nIfcDoorTypeOperationEnum.FOLDING_TO_LEFT = \"FOLDING_TO_LEFT\";\nIfcDoorTypeOperationEnum.FOLDING_TO_RIGHT = \"FOLDING_TO_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_FOLDING = \"DOUBLE_DOOR_FOLDING\";\nIfcDoorTypeOperationEnum.REVOLVING = \"REVOLVING\";\nIfcDoorTypeOperationEnum.ROLLINGUP = \"ROLLINGUP\";\nIfcDoorTypeOperationEnum.SWING_FIXED_LEFT = \"SWING_FIXED_LEFT\";\nIfcDoorTypeOperationEnum.SWING_FIXED_RIGHT = \"SWING_FIXED_RIGHT\";\nIfcDoorTypeOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorTypeOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDuctFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDuctFittingTypeEnum.BEND = \"BEND\";\nIfcDuctFittingTypeEnum.CONNECTOR = \"CONNECTOR\";\nIfcDuctFittingTypeEnum.ENTRY = \"ENTRY\";\nIfcDuctFittingTypeEnum.EXIT = \"EXIT\";\nIfcDuctFittingTypeEnum.JUNCTION = \"JUNCTION\";\nIfcDuctFittingTypeEnum.OBSTRUCTION = \"OBSTRUCTION\";\nIfcDuctFittingTypeEnum.TRANSITION = \"TRANSITION\";\nIfcDuctFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDuctFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDuctSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDuctSegmentTypeEnum.RIGIDSEGMENT = \"RIGIDSEGMENT\";\nIfcDuctSegmentTypeEnum.FLEXIBLESEGMENT = \"FLEXIBLESEGMENT\";\nIfcDuctSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDuctSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDuctSilencerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDuctSilencerTypeEnum.FLATOVAL = \"FLATOVAL\";\nIfcDuctSilencerTypeEnum.RECTANGULAR = \"RECTANGULAR\";\nIfcDuctSilencerTypeEnum.ROUND = \"ROUND\";\nIfcDuctSilencerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDuctSilencerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricApplianceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricApplianceTypeEnum.DISHWASHER = \"DISHWASHER\";\nIfcElectricApplianceTypeEnum.ELECTRICCOOKER = \"ELECTRICCOOKER\";\nIfcElectricApplianceTypeEnum.FREESTANDINGELECTRICHEATER = \"FREESTANDINGELECTRICHEATER\";\nIfcElectricApplianceTypeEnum.FREESTANDINGFAN = \"FREESTANDINGFAN\";\nIfcElectricApplianceTypeEnum.FREESTANDINGWATERHEATER = \"FREESTANDINGWATERHEATER\";\nIfcElectricApplianceTypeEnum.FREESTANDINGWATERCOOLER = \"FREESTANDINGWATERCOOLER\";\nIfcElectricApplianceTypeEnum.FREEZER = \"FREEZER\";\nIfcElectricApplianceTypeEnum.FRIDGE_FREEZER = \"FRIDGE_FREEZER\";\nIfcElectricApplianceTypeEnum.HANDDRYER = \"HANDDRYER\";\nIfcElectricApplianceTypeEnum.KITCHENMACHINE = \"KITCHENMACHINE\";\nIfcElectricApplianceTypeEnum.MICROWAVE = \"MICROWAVE\";\nIfcElectricApplianceTypeEnum.PHOTOCOPIER = \"PHOTOCOPIER\";\nIfcElectricApplianceTypeEnum.REFRIGERATOR = \"REFRIGERATOR\";\nIfcElectricApplianceTypeEnum.TUMBLEDRYER = \"TUMBLEDRYER\";\nIfcElectricApplianceTypeEnum.VENDINGMACHINE = \"VENDINGMACHINE\";\nIfcElectricApplianceTypeEnum.WASHINGMACHINE = \"WASHINGMACHINE\";\nIfcElectricApplianceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricApplianceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricDistributionBoardTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricDistributionBoardTypeEnum.CONSUMERUNIT = \"CONSUMERUNIT\";\nIfcElectricDistributionBoardTypeEnum.DISTRIBUTIONBOARD = \"DISTRIBUTIONBOARD\";\nIfcElectricDistributionBoardTypeEnum.MOTORCONTROLCENTRE = \"MOTORCONTROLCENTRE\";\nIfcElectricDistributionBoardTypeEnum.SWITCHBOARD = \"SWITCHBOARD\";\nIfcElectricDistributionBoardTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricDistributionBoardTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricFlowStorageDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricFlowStorageDeviceTypeEnum.BATTERY = \"BATTERY\";\nIfcElectricFlowStorageDeviceTypeEnum.CAPACITORBANK = \"CAPACITORBANK\";\nIfcElectricFlowStorageDeviceTypeEnum.HARMONICFILTER = \"HARMONICFILTER\";\nIfcElectricFlowStorageDeviceTypeEnum.INDUCTORBANK = \"INDUCTORBANK\";\nIfcElectricFlowStorageDeviceTypeEnum.UPS = \"UPS\";\nIfcElectricFlowStorageDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricFlowStorageDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricGeneratorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricGeneratorTypeEnum.CHP = \"CHP\";\nIfcElectricGeneratorTypeEnum.ENGINEGENERATOR = \"ENGINEGENERATOR\";\nIfcElectricGeneratorTypeEnum.STANDALONE = \"STANDALONE\";\nIfcElectricGeneratorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricGeneratorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricMotorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricMotorTypeEnum.DC = \"DC\";\nIfcElectricMotorTypeEnum.INDUCTION = \"INDUCTION\";\nIfcElectricMotorTypeEnum.POLYPHASE = \"POLYPHASE\";\nIfcElectricMotorTypeEnum.RELUCTANCESYNCHRONOUS = \"RELUCTANCESYNCHRONOUS\";\nIfcElectricMotorTypeEnum.SYNCHRONOUS = \"SYNCHRONOUS\";\nIfcElectricMotorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricMotorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricTimeControlTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricTimeControlTypeEnum.TIMECLOCK = \"TIMECLOCK\";\nIfcElectricTimeControlTypeEnum.TIMEDELAY = \"TIMEDELAY\";\nIfcElectricTimeControlTypeEnum.RELAY = \"RELAY\";\nIfcElectricTimeControlTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricTimeControlTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElementAssemblyTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElementAssemblyTypeEnum.ACCESSORY_ASSEMBLY = \"ACCESSORY_ASSEMBLY\";\nIfcElementAssemblyTypeEnum.ARCH = \"ARCH\";\nIfcElementAssemblyTypeEnum.BEAM_GRID = \"BEAM_GRID\";\nIfcElementAssemblyTypeEnum.BRACED_FRAME = \"BRACED_FRAME\";\nIfcElementAssemblyTypeEnum.GIRDER = \"GIRDER\";\nIfcElementAssemblyTypeEnum.REINFORCEMENT_UNIT = \"REINFORCEMENT_UNIT\";\nIfcElementAssemblyTypeEnum.RIGID_FRAME = \"RIGID_FRAME\";\nIfcElementAssemblyTypeEnum.SLAB_FIELD = \"SLAB_FIELD\";\nIfcElementAssemblyTypeEnum.TRUSS = \"TRUSS\";\nIfcElementAssemblyTypeEnum.ABUTMENT = \"ABUTMENT\";\nIfcElementAssemblyTypeEnum.PIER = \"PIER\";\nIfcElementAssemblyTypeEnum.PYLON = \"PYLON\";\nIfcElementAssemblyTypeEnum.CROSS_BRACING = \"CROSS_BRACING\";\nIfcElementAssemblyTypeEnum.DECK = \"DECK\";\nIfcElementAssemblyTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElementAssemblyTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElementCompositionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElementCompositionEnum.COMPLEX = \"COMPLEX\";\nIfcElementCompositionEnum.ELEMENT = \"ELEMENT\";\nIfcElementCompositionEnum.PARTIAL = \"PARTIAL\";\nvar IfcEngineTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEngineTypeEnum.EXTERNALCOMBUSTION = \"EXTERNALCOMBUSTION\";\nIfcEngineTypeEnum.INTERNALCOMBUSTION = \"INTERNALCOMBUSTION\";\nIfcEngineTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEngineTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEvaporativeCoolerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER = \"DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER = \"DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER = \"DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER = \"DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVEAIRWASHER = \"DIRECTEVAPORATIVEAIRWASHER\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTEVAPORATIVEPACKAGEAIRCOOLER = \"INDIRECTEVAPORATIVEPACKAGEAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTEVAPORATIVEWETCOIL = \"INDIRECTEVAPORATIVEWETCOIL\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER = \"INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTDIRECTCOMBINATION = \"INDIRECTDIRECTCOMBINATION\";\nIfcEvaporativeCoolerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEvaporativeCoolerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEvaporatorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEvaporatorTypeEnum.DIRECTEXPANSION = \"DIRECTEXPANSION\";\nIfcEvaporatorTypeEnum.DIRECTEXPANSIONSHELLANDTUBE = \"DIRECTEXPANSIONSHELLANDTUBE\";\nIfcEvaporatorTypeEnum.DIRECTEXPANSIONTUBEINTUBE = \"DIRECTEXPANSIONTUBEINTUBE\";\nIfcEvaporatorTypeEnum.DIRECTEXPANSIONBRAZEDPLATE = \"DIRECTEXPANSIONBRAZEDPLATE\";\nIfcEvaporatorTypeEnum.FLOODEDSHELLANDTUBE = \"FLOODEDSHELLANDTUBE\";\nIfcEvaporatorTypeEnum.SHELLANDCOIL = \"SHELLANDCOIL\";\nIfcEvaporatorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEvaporatorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEventTriggerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEventTriggerTypeEnum.EVENTRULE = \"EVENTRULE\";\nIfcEventTriggerTypeEnum.EVENTMESSAGE = \"EVENTMESSAGE\";\nIfcEventTriggerTypeEnum.EVENTTIME = \"EVENTTIME\";\nIfcEventTriggerTypeEnum.EVENTCOMPLEX = \"EVENTCOMPLEX\";\nIfcEventTriggerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEventTriggerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEventTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEventTypeEnum.STARTEVENT = \"STARTEVENT\";\nIfcEventTypeEnum.ENDEVENT = \"ENDEVENT\";\nIfcEventTypeEnum.INTERMEDIATEEVENT = \"INTERMEDIATEEVENT\";\nIfcEventTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEventTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcExternalSpatialElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcExternalSpatialElementTypeEnum.EXTERNAL = \"EXTERNAL\";\nIfcExternalSpatialElementTypeEnum.EXTERNAL_EARTH = \"EXTERNAL_EARTH\";\nIfcExternalSpatialElementTypeEnum.EXTERNAL_WATER = \"EXTERNAL_WATER\";\nIfcExternalSpatialElementTypeEnum.EXTERNAL_FIRE = \"EXTERNAL_FIRE\";\nIfcExternalSpatialElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcExternalSpatialElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFanTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFanTypeEnum.CENTRIFUGALFORWARDCURVED = \"CENTRIFUGALFORWARDCURVED\";\nIfcFanTypeEnum.CENTRIFUGALRADIAL = \"CENTRIFUGALRADIAL\";\nIfcFanTypeEnum.CENTRIFUGALBACKWARDINCLINEDCURVED = \"CENTRIFUGALBACKWARDINCLINEDCURVED\";\nIfcFanTypeEnum.CENTRIFUGALAIRFOIL = \"CENTRIFUGALAIRFOIL\";\nIfcFanTypeEnum.TUBEAXIAL = \"TUBEAXIAL\";\nIfcFanTypeEnum.VANEAXIAL = \"VANEAXIAL\";\nIfcFanTypeEnum.PROPELLORAXIAL = \"PROPELLORAXIAL\";\nIfcFanTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFanTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFastenerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFastenerTypeEnum.GLUE = \"GLUE\";\nIfcFastenerTypeEnum.MORTAR = \"MORTAR\";\nIfcFastenerTypeEnum.WELD = \"WELD\";\nIfcFastenerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFastenerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFilterTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFilterTypeEnum.AIRPARTICLEFILTER = \"AIRPARTICLEFILTER\";\nIfcFilterTypeEnum.COMPRESSEDAIRFILTER = \"COMPRESSEDAIRFILTER\";\nIfcFilterTypeEnum.ODORFILTER = \"ODORFILTER\";\nIfcFilterTypeEnum.OILFILTER = \"OILFILTER\";\nIfcFilterTypeEnum.STRAINER = \"STRAINER\";\nIfcFilterTypeEnum.WATERFILTER = \"WATERFILTER\";\nIfcFilterTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFilterTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFireSuppressionTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFireSuppressionTerminalTypeEnum.BREECHINGINLET = \"BREECHINGINLET\";\nIfcFireSuppressionTerminalTypeEnum.FIREHYDRANT = \"FIREHYDRANT\";\nIfcFireSuppressionTerminalTypeEnum.HOSEREEL = \"HOSEREEL\";\nIfcFireSuppressionTerminalTypeEnum.SPRINKLER = \"SPRINKLER\";\nIfcFireSuppressionTerminalTypeEnum.SPRINKLERDEFLECTOR = \"SPRINKLERDEFLECTOR\";\nIfcFireSuppressionTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFireSuppressionTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFlowDirectionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFlowDirectionEnum.SOURCE = \"SOURCE\";\nIfcFlowDirectionEnum.SINK = \"SINK\";\nIfcFlowDirectionEnum.SOURCEANDSINK = \"SOURCEANDSINK\";\nIfcFlowDirectionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFlowInstrumentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFlowInstrumentTypeEnum.PRESSUREGAUGE = \"PRESSUREGAUGE\";\nIfcFlowInstrumentTypeEnum.THERMOMETER = \"THERMOMETER\";\nIfcFlowInstrumentTypeEnum.AMMETER = \"AMMETER\";\nIfcFlowInstrumentTypeEnum.FREQUENCYMETER = \"FREQUENCYMETER\";\nIfcFlowInstrumentTypeEnum.POWERFACTORMETER = \"POWERFACTORMETER\";\nIfcFlowInstrumentTypeEnum.PHASEANGLEMETER = \"PHASEANGLEMETER\";\nIfcFlowInstrumentTypeEnum.VOLTMETER_PEAK = \"VOLTMETER_PEAK\";\nIfcFlowInstrumentTypeEnum.VOLTMETER_RMS = \"VOLTMETER_RMS\";\nIfcFlowInstrumentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFlowInstrumentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFlowMeterTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFlowMeterTypeEnum.ENERGYMETER = \"ENERGYMETER\";\nIfcFlowMeterTypeEnum.GASMETER = \"GASMETER\";\nIfcFlowMeterTypeEnum.OILMETER = \"OILMETER\";\nIfcFlowMeterTypeEnum.WATERMETER = \"WATERMETER\";\nIfcFlowMeterTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFlowMeterTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFootingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFootingTypeEnum.CAISSON_FOUNDATION = \"CAISSON_FOUNDATION\";\nIfcFootingTypeEnum.FOOTING_BEAM = \"FOOTING_BEAM\";\nIfcFootingTypeEnum.PAD_FOOTING = \"PAD_FOOTING\";\nIfcFootingTypeEnum.PILE_CAP = \"PILE_CAP\";\nIfcFootingTypeEnum.STRIP_FOOTING = \"STRIP_FOOTING\";\nIfcFootingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFootingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFurnitureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFurnitureTypeEnum.CHAIR = \"CHAIR\";\nIfcFurnitureTypeEnum.TABLE = \"TABLE\";\nIfcFurnitureTypeEnum.DESK = \"DESK\";\nIfcFurnitureTypeEnum.BED = \"BED\";\nIfcFurnitureTypeEnum.FILECABINET = \"FILECABINET\";\nIfcFurnitureTypeEnum.SHELF = \"SHELF\";\nIfcFurnitureTypeEnum.SOFA = \"SOFA\";\nIfcFurnitureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFurnitureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcGeographicElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGeographicElementTypeEnum.TERRAIN = \"TERRAIN\";\nIfcGeographicElementTypeEnum.SOIL_BORING_POINT = \"SOIL_BORING_POINT\";\nIfcGeographicElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcGeographicElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcGeometricProjectionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGeometricProjectionEnum.GRAPH_VIEW = \"GRAPH_VIEW\";\nIfcGeometricProjectionEnum.SKETCH_VIEW = \"SKETCH_VIEW\";\nIfcGeometricProjectionEnum.MODEL_VIEW = \"MODEL_VIEW\";\nIfcGeometricProjectionEnum.PLAN_VIEW = \"PLAN_VIEW\";\nIfcGeometricProjectionEnum.REFLECTED_PLAN_VIEW = \"REFLECTED_PLAN_VIEW\";\nIfcGeometricProjectionEnum.SECTION_VIEW = \"SECTION_VIEW\";\nIfcGeometricProjectionEnum.ELEVATION_VIEW = \"ELEVATION_VIEW\";\nIfcGeometricProjectionEnum.USERDEFINED = \"USERDEFINED\";\nIfcGeometricProjectionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcGlobalOrLocalEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGlobalOrLocalEnum.GLOBAL_COORDS = \"GLOBAL_COORDS\";\nIfcGlobalOrLocalEnum.LOCAL_COORDS = \"LOCAL_COORDS\";\nvar IfcGridTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGridTypeEnum.RECTANGULAR = \"RECTANGULAR\";\nIfcGridTypeEnum.RADIAL = \"RADIAL\";\nIfcGridTypeEnum.TRIANGULAR = \"TRIANGULAR\";\nIfcGridTypeEnum.IRREGULAR = \"IRREGULAR\";\nIfcGridTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcGridTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcHeatExchangerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcHeatExchangerTypeEnum.PLATE = \"PLATE\";\nIfcHeatExchangerTypeEnum.SHELLANDTUBE = \"SHELLANDTUBE\";\nIfcHeatExchangerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcHeatExchangerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcHumidifierTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcHumidifierTypeEnum.STEAMINJECTION = \"STEAMINJECTION\";\nIfcHumidifierTypeEnum.ADIABATICAIRWASHER = \"ADIABATICAIRWASHER\";\nIfcHumidifierTypeEnum.ADIABATICPAN = \"ADIABATICPAN\";\nIfcHumidifierTypeEnum.ADIABATICWETTEDELEMENT = \"ADIABATICWETTEDELEMENT\";\nIfcHumidifierTypeEnum.ADIABATICATOMIZING = \"ADIABATICATOMIZING\";\nIfcHumidifierTypeEnum.ADIABATICULTRASONIC = \"ADIABATICULTRASONIC\";\nIfcHumidifierTypeEnum.ADIABATICRIGIDMEDIA = \"ADIABATICRIGIDMEDIA\";\nIfcHumidifierTypeEnum.ADIABATICCOMPRESSEDAIRNOZZLE = \"ADIABATICCOMPRESSEDAIRNOZZLE\";\nIfcHumidifierTypeEnum.ASSISTEDELECTRIC = \"ASSISTEDELECTRIC\";\nIfcHumidifierTypeEnum.ASSISTEDNATURALGAS = \"ASSISTEDNATURALGAS\";\nIfcHumidifierTypeEnum.ASSISTEDPROPANE = \"ASSISTEDPROPANE\";\nIfcHumidifierTypeEnum.ASSISTEDBUTANE = \"ASSISTEDBUTANE\";\nIfcHumidifierTypeEnum.ASSISTEDSTEAM = \"ASSISTEDSTEAM\";\nIfcHumidifierTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcHumidifierTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcInterceptorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcInterceptorTypeEnum.CYCLONIC = \"CYCLONIC\";\nIfcInterceptorTypeEnum.GREASE = \"GREASE\";\nIfcInterceptorTypeEnum.OIL = \"OIL\";\nIfcInterceptorTypeEnum.PETROL = \"PETROL\";\nIfcInterceptorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcInterceptorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcInternalOrExternalEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcInternalOrExternalEnum.INTERNAL = \"INTERNAL\";\nIfcInternalOrExternalEnum.EXTERNAL = \"EXTERNAL\";\nIfcInternalOrExternalEnum.EXTERNAL_EARTH = \"EXTERNAL_EARTH\";\nIfcInternalOrExternalEnum.EXTERNAL_WATER = \"EXTERNAL_WATER\";\nIfcInternalOrExternalEnum.EXTERNAL_FIRE = \"EXTERNAL_FIRE\";\nIfcInternalOrExternalEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcInventoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcInventoryTypeEnum.ASSETINVENTORY = \"ASSETINVENTORY\";\nIfcInventoryTypeEnum.SPACEINVENTORY = \"SPACEINVENTORY\";\nIfcInventoryTypeEnum.FURNITUREINVENTORY = \"FURNITUREINVENTORY\";\nIfcInventoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcInventoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcJunctionBoxTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcJunctionBoxTypeEnum.DATA = \"DATA\";\nIfcJunctionBoxTypeEnum.POWER = \"POWER\";\nIfcJunctionBoxTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcJunctionBoxTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcKnotType = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcKnotType.UNIFORM_KNOTS = \"UNIFORM_KNOTS\";\nIfcKnotType.QUASI_UNIFORM_KNOTS = \"QUASI_UNIFORM_KNOTS\";\nIfcKnotType.PIECEWISE_BEZIER_KNOTS = \"PIECEWISE_BEZIER_KNOTS\";\nIfcKnotType.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcLaborResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLaborResourceTypeEnum.ADMINISTRATION = \"ADMINISTRATION\";\nIfcLaborResourceTypeEnum.CARPENTRY = \"CARPENTRY\";\nIfcLaborResourceTypeEnum.CLEANING = \"CLEANING\";\nIfcLaborResourceTypeEnum.CONCRETE = \"CONCRETE\";\nIfcLaborResourceTypeEnum.DRYWALL = \"DRYWALL\";\nIfcLaborResourceTypeEnum.ELECTRIC = \"ELECTRIC\";\nIfcLaborResourceTypeEnum.FINISHING = \"FINISHING\";\nIfcLaborResourceTypeEnum.FLOORING = \"FLOORING\";\nIfcLaborResourceTypeEnum.GENERAL = \"GENERAL\";\nIfcLaborResourceTypeEnum.HVAC = \"HVAC\";\nIfcLaborResourceTypeEnum.LANDSCAPING = \"LANDSCAPING\";\nIfcLaborResourceTypeEnum.MASONRY = \"MASONRY\";\nIfcLaborResourceTypeEnum.PAINTING = \"PAINTING\";\nIfcLaborResourceTypeEnum.PAVING = \"PAVING\";\nIfcLaborResourceTypeEnum.PLUMBING = \"PLUMBING\";\nIfcLaborResourceTypeEnum.ROOFING = \"ROOFING\";\nIfcLaborResourceTypeEnum.SITEGRADING = \"SITEGRADING\";\nIfcLaborResourceTypeEnum.STEELWORK = \"STEELWORK\";\nIfcLaborResourceTypeEnum.SURVEYING = \"SURVEYING\";\nIfcLaborResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLaborResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLampTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLampTypeEnum.COMPACTFLUORESCENT = \"COMPACTFLUORESCENT\";\nIfcLampTypeEnum.FLUORESCENT = \"FLUORESCENT\";\nIfcLampTypeEnum.HALOGEN = \"HALOGEN\";\nIfcLampTypeEnum.HIGHPRESSUREMERCURY = \"HIGHPRESSUREMERCURY\";\nIfcLampTypeEnum.HIGHPRESSURESODIUM = \"HIGHPRESSURESODIUM\";\nIfcLampTypeEnum.LED = \"LED\";\nIfcLampTypeEnum.METALHALIDE = \"METALHALIDE\";\nIfcLampTypeEnum.OLED = \"OLED\";\nIfcLampTypeEnum.TUNGSTENFILAMENT = \"TUNGSTENFILAMENT\";\nIfcLampTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLampTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLayerSetDirectionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLayerSetDirectionEnum.AXIS1 = \"AXIS1\";\nIfcLayerSetDirectionEnum.AXIS2 = \"AXIS2\";\nIfcLayerSetDirectionEnum.AXIS3 = \"AXIS3\";\nvar IfcLightDistributionCurveEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLightDistributionCurveEnum.TYPE_A = \"TYPE_A\";\nIfcLightDistributionCurveEnum.TYPE_B = \"TYPE_B\";\nIfcLightDistributionCurveEnum.TYPE_C = \"TYPE_C\";\nIfcLightDistributionCurveEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLightEmissionSourceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLightEmissionSourceEnum.COMPACTFLUORESCENT = \"COMPACTFLUORESCENT\";\nIfcLightEmissionSourceEnum.FLUORESCENT = \"FLUORESCENT\";\nIfcLightEmissionSourceEnum.HIGHPRESSUREMERCURY = \"HIGHPRESSUREMERCURY\";\nIfcLightEmissionSourceEnum.HIGHPRESSURESODIUM = \"HIGHPRESSURESODIUM\";\nIfcLightEmissionSourceEnum.LIGHTEMITTINGDIODE = \"LIGHTEMITTINGDIODE\";\nIfcLightEmissionSourceEnum.LOWPRESSURESODIUM = \"LOWPRESSURESODIUM\";\nIfcLightEmissionSourceEnum.LOWVOLTAGEHALOGEN = \"LOWVOLTAGEHALOGEN\";\nIfcLightEmissionSourceEnum.MAINVOLTAGEHALOGEN = \"MAINVOLTAGEHALOGEN\";\nIfcLightEmissionSourceEnum.METALHALIDE = \"METALHALIDE\";\nIfcLightEmissionSourceEnum.TUNGSTENFILAMENT = \"TUNGSTENFILAMENT\";\nIfcLightEmissionSourceEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLightFixtureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLightFixtureTypeEnum.POINTSOURCE = \"POINTSOURCE\";\nIfcLightFixtureTypeEnum.DIRECTIONSOURCE = \"DIRECTIONSOURCE\";\nIfcLightFixtureTypeEnum.SECURITYLIGHTING = \"SECURITYLIGHTING\";\nIfcLightFixtureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLightFixtureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLoadGroupTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLoadGroupTypeEnum.LOAD_GROUP = \"LOAD_GROUP\";\nIfcLoadGroupTypeEnum.LOAD_CASE = \"LOAD_CASE\";\nIfcLoadGroupTypeEnum.LOAD_COMBINATION = \"LOAD_COMBINATION\";\nIfcLoadGroupTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLoadGroupTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLogicalOperatorEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLogicalOperatorEnum.LOGICALAND = \"LOGICALAND\";\nIfcLogicalOperatorEnum.LOGICALOR = \"LOGICALOR\";\nIfcLogicalOperatorEnum.LOGICALXOR = \"LOGICALXOR\";\nIfcLogicalOperatorEnum.LOGICALNOTAND = \"LOGICALNOTAND\";\nIfcLogicalOperatorEnum.LOGICALNOTOR = \"LOGICALNOTOR\";\nvar IfcMechanicalFastenerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMechanicalFastenerTypeEnum.ANCHORBOLT = \"ANCHORBOLT\";\nIfcMechanicalFastenerTypeEnum.BOLT = \"BOLT\";\nIfcMechanicalFastenerTypeEnum.DOWEL = \"DOWEL\";\nIfcMechanicalFastenerTypeEnum.NAIL = \"NAIL\";\nIfcMechanicalFastenerTypeEnum.NAILPLATE = \"NAILPLATE\";\nIfcMechanicalFastenerTypeEnum.RIVET = \"RIVET\";\nIfcMechanicalFastenerTypeEnum.SCREW = \"SCREW\";\nIfcMechanicalFastenerTypeEnum.SHEARCONNECTOR = \"SHEARCONNECTOR\";\nIfcMechanicalFastenerTypeEnum.STAPLE = \"STAPLE\";\nIfcMechanicalFastenerTypeEnum.STUDSHEARCONNECTOR = \"STUDSHEARCONNECTOR\";\nIfcMechanicalFastenerTypeEnum.COUPLER = \"COUPLER\";\nIfcMechanicalFastenerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMechanicalFastenerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcMedicalDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMedicalDeviceTypeEnum.AIRSTATION = \"AIRSTATION\";\nIfcMedicalDeviceTypeEnum.FEEDAIRUNIT = \"FEEDAIRUNIT\";\nIfcMedicalDeviceTypeEnum.OXYGENGENERATOR = \"OXYGENGENERATOR\";\nIfcMedicalDeviceTypeEnum.OXYGENPLANT = \"OXYGENPLANT\";\nIfcMedicalDeviceTypeEnum.VACUUMSTATION = \"VACUUMSTATION\";\nIfcMedicalDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMedicalDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcMemberTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMemberTypeEnum.BRACE = \"BRACE\";\nIfcMemberTypeEnum.CHORD = \"CHORD\";\nIfcMemberTypeEnum.COLLAR = \"COLLAR\";\nIfcMemberTypeEnum.MEMBER = \"MEMBER\";\nIfcMemberTypeEnum.MULLION = \"MULLION\";\nIfcMemberTypeEnum.PLATE = \"PLATE\";\nIfcMemberTypeEnum.POST = \"POST\";\nIfcMemberTypeEnum.PURLIN = \"PURLIN\";\nIfcMemberTypeEnum.RAFTER = \"RAFTER\";\nIfcMemberTypeEnum.STRINGER = \"STRINGER\";\nIfcMemberTypeEnum.STRUT = \"STRUT\";\nIfcMemberTypeEnum.STUD = \"STUD\";\nIfcMemberTypeEnum.STIFFENING_RIB = \"STIFFENING_RIB\";\nIfcMemberTypeEnum.ARCH_SEGMENT = \"ARCH_SEGMENT\";\nIfcMemberTypeEnum.SUSPENSION_CABLE = \"SUSPENSION_CABLE\";\nIfcMemberTypeEnum.SUSPENDER = \"SUSPENDER\";\nIfcMemberTypeEnum.STAY_CABLE = \"STAY_CABLE\";\nIfcMemberTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMemberTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcMotorConnectionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMotorConnectionTypeEnum.BELTDRIVE = \"BELTDRIVE\";\nIfcMotorConnectionTypeEnum.COUPLING = \"COUPLING\";\nIfcMotorConnectionTypeEnum.DIRECTDRIVE = \"DIRECTDRIVE\";\nIfcMotorConnectionTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMotorConnectionTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcNullStyle = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcNullStyle.NULL = \"NULL\";\nvar IfcObjectTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcObjectTypeEnum.PRODUCT = \"PRODUCT\";\nIfcObjectTypeEnum.PROCESS = \"PROCESS\";\nIfcObjectTypeEnum.CONTROL = \"CONTROL\";\nIfcObjectTypeEnum.RESOURCE = \"RESOURCE\";\nIfcObjectTypeEnum.ACTOR = \"ACTOR\";\nIfcObjectTypeEnum.GROUP = \"GROUP\";\nIfcObjectTypeEnum.PROJECT = \"PROJECT\";\nIfcObjectTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcObjectiveEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcObjectiveEnum.CODECOMPLIANCE = \"CODECOMPLIANCE\";\nIfcObjectiveEnum.CODEWAIVER = \"CODEWAIVER\";\nIfcObjectiveEnum.DESIGNINTENT = \"DESIGNINTENT\";\nIfcObjectiveEnum.EXTERNAL = \"EXTERNAL\";\nIfcObjectiveEnum.HEALTHANDSAFETY = \"HEALTHANDSAFETY\";\nIfcObjectiveEnum.MERGECONFLICT = \"MERGECONFLICT\";\nIfcObjectiveEnum.MODELVIEW = \"MODELVIEW\";\nIfcObjectiveEnum.PARAMETER = \"PARAMETER\";\nIfcObjectiveEnum.REQUIREMENT = \"REQUIREMENT\";\nIfcObjectiveEnum.SPECIFICATION = \"SPECIFICATION\";\nIfcObjectiveEnum.TRIGGERCONDITION = \"TRIGGERCONDITION\";\nIfcObjectiveEnum.USERDEFINED = \"USERDEFINED\";\nIfcObjectiveEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcOccupantTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcOccupantTypeEnum.ASSIGNEE = \"ASSIGNEE\";\nIfcOccupantTypeEnum.ASSIGNOR = \"ASSIGNOR\";\nIfcOccupantTypeEnum.LESSEE = \"LESSEE\";\nIfcOccupantTypeEnum.LESSOR = \"LESSOR\";\nIfcOccupantTypeEnum.LETTINGAGENT = \"LETTINGAGENT\";\nIfcOccupantTypeEnum.OWNER = \"OWNER\";\nIfcOccupantTypeEnum.TENANT = \"TENANT\";\nIfcOccupantTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcOccupantTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcOpeningElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcOpeningElementTypeEnum.OPENING = \"OPENING\";\nIfcOpeningElementTypeEnum.RECESS = \"RECESS\";\nIfcOpeningElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcOpeningElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcOutletTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcOutletTypeEnum.AUDIOVISUALOUTLET = \"AUDIOVISUALOUTLET\";\nIfcOutletTypeEnum.COMMUNICATIONSOUTLET = \"COMMUNICATIONSOUTLET\";\nIfcOutletTypeEnum.POWEROUTLET = \"POWEROUTLET\";\nIfcOutletTypeEnum.DATAOUTLET = \"DATAOUTLET\";\nIfcOutletTypeEnum.TELEPHONEOUTLET = \"TELEPHONEOUTLET\";\nIfcOutletTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcOutletTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPerformanceHistoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPerformanceHistoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPerformanceHistoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPermeableCoveringOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPermeableCoveringOperationEnum.GRILL = \"GRILL\";\nIfcPermeableCoveringOperationEnum.LOUVER = \"LOUVER\";\nIfcPermeableCoveringOperationEnum.SCREEN = \"SCREEN\";\nIfcPermeableCoveringOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcPermeableCoveringOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPermitTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPermitTypeEnum.ACCESS = \"ACCESS\";\nIfcPermitTypeEnum.BUILDING = \"BUILDING\";\nIfcPermitTypeEnum.WORK = \"WORK\";\nIfcPermitTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPermitTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPhysicalOrVirtualEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPhysicalOrVirtualEnum.PHYSICAL = \"PHYSICAL\";\nIfcPhysicalOrVirtualEnum.VIRTUAL = \"VIRTUAL\";\nIfcPhysicalOrVirtualEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPileConstructionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPileConstructionEnum.CAST_IN_PLACE = \"CAST_IN_PLACE\";\nIfcPileConstructionEnum.COMPOSITE = \"COMPOSITE\";\nIfcPileConstructionEnum.PRECAST_CONCRETE = \"PRECAST_CONCRETE\";\nIfcPileConstructionEnum.PREFAB_STEEL = \"PREFAB_STEEL\";\nIfcPileConstructionEnum.USERDEFINED = \"USERDEFINED\";\nIfcPileConstructionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPileTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPileTypeEnum.BORED = \"BORED\";\nIfcPileTypeEnum.DRIVEN = \"DRIVEN\";\nIfcPileTypeEnum.JETGROUTING = \"JETGROUTING\";\nIfcPileTypeEnum.COHESION = \"COHESION\";\nIfcPileTypeEnum.FRICTION = \"FRICTION\";\nIfcPileTypeEnum.SUPPORT = \"SUPPORT\";\nIfcPileTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPileTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPipeFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPipeFittingTypeEnum.BEND = \"BEND\";\nIfcPipeFittingTypeEnum.CONNECTOR = \"CONNECTOR\";\nIfcPipeFittingTypeEnum.ENTRY = \"ENTRY\";\nIfcPipeFittingTypeEnum.EXIT = \"EXIT\";\nIfcPipeFittingTypeEnum.JUNCTION = \"JUNCTION\";\nIfcPipeFittingTypeEnum.OBSTRUCTION = \"OBSTRUCTION\";\nIfcPipeFittingTypeEnum.TRANSITION = \"TRANSITION\";\nIfcPipeFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPipeFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPipeSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPipeSegmentTypeEnum.CULVERT = \"CULVERT\";\nIfcPipeSegmentTypeEnum.FLEXIBLESEGMENT = \"FLEXIBLESEGMENT\";\nIfcPipeSegmentTypeEnum.RIGIDSEGMENT = \"RIGIDSEGMENT\";\nIfcPipeSegmentTypeEnum.GUTTER = \"GUTTER\";\nIfcPipeSegmentTypeEnum.SPOOL = \"SPOOL\";\nIfcPipeSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPipeSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPlateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPlateTypeEnum.CURTAIN_PANEL = \"CURTAIN_PANEL\";\nIfcPlateTypeEnum.SHEET = \"SHEET\";\nIfcPlateTypeEnum.FLANGE_PLATE = \"FLANGE_PLATE\";\nIfcPlateTypeEnum.WEB_PLATE = \"WEB_PLATE\";\nIfcPlateTypeEnum.STIFFENER_PLATE = \"STIFFENER_PLATE\";\nIfcPlateTypeEnum.GUSSET_PLATE = \"GUSSET_PLATE\";\nIfcPlateTypeEnum.COVER_PLATE = \"COVER_PLATE\";\nIfcPlateTypeEnum.SPLICE_PLATE = \"SPLICE_PLATE\";\nIfcPlateTypeEnum.BASE_PLATE = \"BASE_PLATE\";\nIfcPlateTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPlateTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPreferredSurfaceCurveRepresentation = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPreferredSurfaceCurveRepresentation.CURVE3D = \"CURVE3D\";\nIfcPreferredSurfaceCurveRepresentation.PCURVE_S1 = \"PCURVE_S1\";\nIfcPreferredSurfaceCurveRepresentation.PCURVE_S2 = \"PCURVE_S2\";\nvar IfcProcedureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProcedureTypeEnum.ADVICE_CAUTION = \"ADVICE_CAUTION\";\nIfcProcedureTypeEnum.ADVICE_NOTE = \"ADVICE_NOTE\";\nIfcProcedureTypeEnum.ADVICE_WARNING = \"ADVICE_WARNING\";\nIfcProcedureTypeEnum.CALIBRATION = \"CALIBRATION\";\nIfcProcedureTypeEnum.DIAGNOSTIC = \"DIAGNOSTIC\";\nIfcProcedureTypeEnum.SHUTDOWN = \"SHUTDOWN\";\nIfcProcedureTypeEnum.STARTUP = \"STARTUP\";\nIfcProcedureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProcedureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProfileTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProfileTypeEnum.CURVE = \"CURVE\";\nIfcProfileTypeEnum.AREA = \"AREA\";\nvar IfcProjectOrderTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProjectOrderTypeEnum.CHANGEORDER = \"CHANGEORDER\";\nIfcProjectOrderTypeEnum.MAINTENANCEWORKORDER = \"MAINTENANCEWORKORDER\";\nIfcProjectOrderTypeEnum.MOVEORDER = \"MOVEORDER\";\nIfcProjectOrderTypeEnum.PURCHASEORDER = \"PURCHASEORDER\";\nIfcProjectOrderTypeEnum.WORKORDER = \"WORKORDER\";\nIfcProjectOrderTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProjectOrderTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProjectedOrTrueLengthEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProjectedOrTrueLengthEnum.PROJECTED_LENGTH = \"PROJECTED_LENGTH\";\nIfcProjectedOrTrueLengthEnum.TRUE_LENGTH = \"TRUE_LENGTH\";\nvar IfcProjectionElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProjectionElementTypeEnum.BLISTER = \"BLISTER\";\nIfcProjectionElementTypeEnum.DEVIATOR = \"DEVIATOR\";\nIfcProjectionElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProjectionElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPropertySetTemplateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPropertySetTemplateTypeEnum.PSET_TYPEDRIVENONLY = \"PSET_TYPEDRIVENONLY\";\nIfcPropertySetTemplateTypeEnum.PSET_TYPEDRIVENOVERRIDE = \"PSET_TYPEDRIVENOVERRIDE\";\nIfcPropertySetTemplateTypeEnum.PSET_OCCURRENCEDRIVEN = \"PSET_OCCURRENCEDRIVEN\";\nIfcPropertySetTemplateTypeEnum.PSET_PERFORMANCEDRIVEN = \"PSET_PERFORMANCEDRIVEN\";\nIfcPropertySetTemplateTypeEnum.QTO_TYPEDRIVENONLY = \"QTO_TYPEDRIVENONLY\";\nIfcPropertySetTemplateTypeEnum.QTO_TYPEDRIVENOVERRIDE = \"QTO_TYPEDRIVENOVERRIDE\";\nIfcPropertySetTemplateTypeEnum.QTO_OCCURRENCEDRIVEN = \"QTO_OCCURRENCEDRIVEN\";\nIfcPropertySetTemplateTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProtectiveDeviceTrippingUnitTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProtectiveDeviceTrippingUnitTypeEnum.ELECTRONIC = \"ELECTRONIC\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.ELECTROMAGNETIC = \"ELECTROMAGNETIC\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.RESIDUALCURRENT = \"RESIDUALCURRENT\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.THERMAL = \"THERMAL\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProtectiveDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProtectiveDeviceTypeEnum.CIRCUITBREAKER = \"CIRCUITBREAKER\";\nIfcProtectiveDeviceTypeEnum.EARTHLEAKAGECIRCUITBREAKER = \"EARTHLEAKAGECIRCUITBREAKER\";\nIfcProtectiveDeviceTypeEnum.EARTHINGSWITCH = \"EARTHINGSWITCH\";\nIfcProtectiveDeviceTypeEnum.FUSEDISCONNECTOR = \"FUSEDISCONNECTOR\";\nIfcProtectiveDeviceTypeEnum.RESIDUALCURRENTCIRCUITBREAKER = \"RESIDUALCURRENTCIRCUITBREAKER\";\nIfcProtectiveDeviceTypeEnum.RESIDUALCURRENTSWITCH = \"RESIDUALCURRENTSWITCH\";\nIfcProtectiveDeviceTypeEnum.VARISTOR = \"VARISTOR\";\nIfcProtectiveDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProtectiveDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPumpTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPumpTypeEnum.CIRCULATOR = \"CIRCULATOR\";\nIfcPumpTypeEnum.ENDSUCTION = \"ENDSUCTION\";\nIfcPumpTypeEnum.SPLITCASE = \"SPLITCASE\";\nIfcPumpTypeEnum.SUBMERSIBLEPUMP = \"SUBMERSIBLEPUMP\";\nIfcPumpTypeEnum.SUMPPUMP = \"SUMPPUMP\";\nIfcPumpTypeEnum.VERTICALINLINE = \"VERTICALINLINE\";\nIfcPumpTypeEnum.VERTICALTURBINE = \"VERTICALTURBINE\";\nIfcPumpTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPumpTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRailingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRailingTypeEnum.HANDRAIL = \"HANDRAIL\";\nIfcRailingTypeEnum.GUARDRAIL = \"GUARDRAIL\";\nIfcRailingTypeEnum.BALUSTRADE = \"BALUSTRADE\";\nIfcRailingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRailingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRampFlightTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRampFlightTypeEnum.STRAIGHT = \"STRAIGHT\";\nIfcRampFlightTypeEnum.SPIRAL = \"SPIRAL\";\nIfcRampFlightTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRampFlightTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRampTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRampTypeEnum.STRAIGHT_RUN_RAMP = \"STRAIGHT_RUN_RAMP\";\nIfcRampTypeEnum.TWO_STRAIGHT_RUN_RAMP = \"TWO_STRAIGHT_RUN_RAMP\";\nIfcRampTypeEnum.QUARTER_TURN_RAMP = \"QUARTER_TURN_RAMP\";\nIfcRampTypeEnum.TWO_QUARTER_TURN_RAMP = \"TWO_QUARTER_TURN_RAMP\";\nIfcRampTypeEnum.HALF_TURN_RAMP = \"HALF_TURN_RAMP\";\nIfcRampTypeEnum.SPIRAL_RAMP = \"SPIRAL_RAMP\";\nIfcRampTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRampTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRecurrenceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRecurrenceTypeEnum.DAILY = \"DAILY\";\nIfcRecurrenceTypeEnum.WEEKLY = \"WEEKLY\";\nIfcRecurrenceTypeEnum.MONTHLY_BY_DAY_OF_MONTH = \"MONTHLY_BY_DAY_OF_MONTH\";\nIfcRecurrenceTypeEnum.MONTHLY_BY_POSITION = \"MONTHLY_BY_POSITION\";\nIfcRecurrenceTypeEnum.BY_DAY_COUNT = \"BY_DAY_COUNT\";\nIfcRecurrenceTypeEnum.BY_WEEKDAY_COUNT = \"BY_WEEKDAY_COUNT\";\nIfcRecurrenceTypeEnum.YEARLY_BY_DAY_OF_MONTH = \"YEARLY_BY_DAY_OF_MONTH\";\nIfcRecurrenceTypeEnum.YEARLY_BY_POSITION = \"YEARLY_BY_POSITION\";\nvar IfcReferentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReferentTypeEnum.KILOPOINT = \"KILOPOINT\";\nIfcReferentTypeEnum.MILEPOINT = \"MILEPOINT\";\nIfcReferentTypeEnum.STATION = \"STATION\";\nIfcReferentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcReferentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReflectanceMethodEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReflectanceMethodEnum.BLINN = \"BLINN\";\nIfcReflectanceMethodEnum.FLAT = \"FLAT\";\nIfcReflectanceMethodEnum.GLASS = \"GLASS\";\nIfcReflectanceMethodEnum.MATT = \"MATT\";\nIfcReflectanceMethodEnum.METAL = \"METAL\";\nIfcReflectanceMethodEnum.MIRROR = \"MIRROR\";\nIfcReflectanceMethodEnum.PHONG = \"PHONG\";\nIfcReflectanceMethodEnum.PLASTIC = \"PLASTIC\";\nIfcReflectanceMethodEnum.STRAUSS = \"STRAUSS\";\nIfcReflectanceMethodEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReinforcingBarRoleEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingBarRoleEnum.MAIN = \"MAIN\";\nIfcReinforcingBarRoleEnum.SHEAR = \"SHEAR\";\nIfcReinforcingBarRoleEnum.LIGATURE = \"LIGATURE\";\nIfcReinforcingBarRoleEnum.STUD = \"STUD\";\nIfcReinforcingBarRoleEnum.PUNCHING = \"PUNCHING\";\nIfcReinforcingBarRoleEnum.EDGE = \"EDGE\";\nIfcReinforcingBarRoleEnum.RING = \"RING\";\nIfcReinforcingBarRoleEnum.ANCHORING = \"ANCHORING\";\nIfcReinforcingBarRoleEnum.USERDEFINED = \"USERDEFINED\";\nIfcReinforcingBarRoleEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReinforcingBarSurfaceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingBarSurfaceEnum.PLAIN = \"PLAIN\";\nIfcReinforcingBarSurfaceEnum.TEXTURED = \"TEXTURED\";\nvar IfcReinforcingBarTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingBarTypeEnum.ANCHORING = \"ANCHORING\";\nIfcReinforcingBarTypeEnum.EDGE = \"EDGE\";\nIfcReinforcingBarTypeEnum.LIGATURE = \"LIGATURE\";\nIfcReinforcingBarTypeEnum.MAIN = \"MAIN\";\nIfcReinforcingBarTypeEnum.PUNCHING = \"PUNCHING\";\nIfcReinforcingBarTypeEnum.RING = \"RING\";\nIfcReinforcingBarTypeEnum.SHEAR = \"SHEAR\";\nIfcReinforcingBarTypeEnum.STUD = \"STUD\";\nIfcReinforcingBarTypeEnum.SPACEBAR = \"SPACEBAR\";\nIfcReinforcingBarTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcReinforcingBarTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReinforcingMeshTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingMeshTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcReinforcingMeshTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRoleEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRoleEnum.SUPPLIER = \"SUPPLIER\";\nIfcRoleEnum.MANUFACTURER = \"MANUFACTURER\";\nIfcRoleEnum.CONTRACTOR = \"CONTRACTOR\";\nIfcRoleEnum.SUBCONTRACTOR = \"SUBCONTRACTOR\";\nIfcRoleEnum.ARCHITECT = \"ARCHITECT\";\nIfcRoleEnum.STRUCTURALENGINEER = \"STRUCTURALENGINEER\";\nIfcRoleEnum.COSTENGINEER = \"COSTENGINEER\";\nIfcRoleEnum.CLIENT = \"CLIENT\";\nIfcRoleEnum.BUILDINGOWNER = \"BUILDINGOWNER\";\nIfcRoleEnum.BUILDINGOPERATOR = \"BUILDINGOPERATOR\";\nIfcRoleEnum.MECHANICALENGINEER = \"MECHANICALENGINEER\";\nIfcRoleEnum.ELECTRICALENGINEER = \"ELECTRICALENGINEER\";\nIfcRoleEnum.PROJECTMANAGER = \"PROJECTMANAGER\";\nIfcRoleEnum.FACILITIESMANAGER = \"FACILITIESMANAGER\";\nIfcRoleEnum.CIVILENGINEER = \"CIVILENGINEER\";\nIfcRoleEnum.COMMISSIONINGENGINEER = \"COMMISSIONINGENGINEER\";\nIfcRoleEnum.ENGINEER = \"ENGINEER\";\nIfcRoleEnum.OWNER = \"OWNER\";\nIfcRoleEnum.CONSULTANT = \"CONSULTANT\";\nIfcRoleEnum.CONSTRUCTIONMANAGER = \"CONSTRUCTIONMANAGER\";\nIfcRoleEnum.FIELDCONSTRUCTIONMANAGER = \"FIELDCONSTRUCTIONMANAGER\";\nIfcRoleEnum.RESELLER = \"RESELLER\";\nIfcRoleEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcRoofTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRoofTypeEnum.FLAT_ROOF = \"FLAT_ROOF\";\nIfcRoofTypeEnum.SHED_ROOF = \"SHED_ROOF\";\nIfcRoofTypeEnum.GABLE_ROOF = \"GABLE_ROOF\";\nIfcRoofTypeEnum.HIP_ROOF = \"HIP_ROOF\";\nIfcRoofTypeEnum.HIPPED_GABLE_ROOF = \"HIPPED_GABLE_ROOF\";\nIfcRoofTypeEnum.GAMBREL_ROOF = \"GAMBREL_ROOF\";\nIfcRoofTypeEnum.MANSARD_ROOF = \"MANSARD_ROOF\";\nIfcRoofTypeEnum.BARREL_ROOF = \"BARREL_ROOF\";\nIfcRoofTypeEnum.RAINBOW_ROOF = \"RAINBOW_ROOF\";\nIfcRoofTypeEnum.BUTTERFLY_ROOF = \"BUTTERFLY_ROOF\";\nIfcRoofTypeEnum.PAVILION_ROOF = \"PAVILION_ROOF\";\nIfcRoofTypeEnum.DOME_ROOF = \"DOME_ROOF\";\nIfcRoofTypeEnum.FREEFORM = \"FREEFORM\";\nIfcRoofTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRoofTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSIPrefix = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSIPrefix.EXA = \"EXA\";\nIfcSIPrefix.PETA = \"PETA\";\nIfcSIPrefix.TERA = \"TERA\";\nIfcSIPrefix.GIGA = \"GIGA\";\nIfcSIPrefix.MEGA = \"MEGA\";\nIfcSIPrefix.KILO = \"KILO\";\nIfcSIPrefix.HECTO = \"HECTO\";\nIfcSIPrefix.DECA = \"DECA\";\nIfcSIPrefix.DECI = \"DECI\";\nIfcSIPrefix.CENTI = \"CENTI\";\nIfcSIPrefix.MILLI = \"MILLI\";\nIfcSIPrefix.MICRO = \"MICRO\";\nIfcSIPrefix.NANO = \"NANO\";\nIfcSIPrefix.PICO = \"PICO\";\nIfcSIPrefix.FEMTO = \"FEMTO\";\nIfcSIPrefix.ATTO = \"ATTO\";\nvar IfcSIUnitName = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSIUnitName.AMPERE = \"AMPERE\";\nIfcSIUnitName.BECQUEREL = \"BECQUEREL\";\nIfcSIUnitName.CANDELA = \"CANDELA\";\nIfcSIUnitName.COULOMB = \"COULOMB\";\nIfcSIUnitName.CUBIC_METRE = \"CUBIC_METRE\";\nIfcSIUnitName.DEGREE_CELSIUS = \"DEGREE_CELSIUS\";\nIfcSIUnitName.FARAD = \"FARAD\";\nIfcSIUnitName.GRAM = \"GRAM\";\nIfcSIUnitName.GRAY = \"GRAY\";\nIfcSIUnitName.HENRY = \"HENRY\";\nIfcSIUnitName.HERTZ = \"HERTZ\";\nIfcSIUnitName.JOULE = \"JOULE\";\nIfcSIUnitName.KELVIN = \"KELVIN\";\nIfcSIUnitName.LUMEN = \"LUMEN\";\nIfcSIUnitName.LUX = \"LUX\";\nIfcSIUnitName.METRE = \"METRE\";\nIfcSIUnitName.MOLE = \"MOLE\";\nIfcSIUnitName.NEWTON = \"NEWTON\";\nIfcSIUnitName.OHM = \"OHM\";\nIfcSIUnitName.PASCAL = \"PASCAL\";\nIfcSIUnitName.RADIAN = \"RADIAN\";\nIfcSIUnitName.SECOND = \"SECOND\";\nIfcSIUnitName.SIEMENS = \"SIEMENS\";\nIfcSIUnitName.SIEVERT = \"SIEVERT\";\nIfcSIUnitName.SQUARE_METRE = \"SQUARE_METRE\";\nIfcSIUnitName.STERADIAN = \"STERADIAN\";\nIfcSIUnitName.TESLA = \"TESLA\";\nIfcSIUnitName.VOLT = \"VOLT\";\nIfcSIUnitName.WATT = \"WATT\";\nIfcSIUnitName.WEBER = \"WEBER\";\nvar IfcSanitaryTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSanitaryTerminalTypeEnum.BATH = \"BATH\";\nIfcSanitaryTerminalTypeEnum.BIDET = \"BIDET\";\nIfcSanitaryTerminalTypeEnum.CISTERN = \"CISTERN\";\nIfcSanitaryTerminalTypeEnum.SHOWER = \"SHOWER\";\nIfcSanitaryTerminalTypeEnum.SINK = \"SINK\";\nIfcSanitaryTerminalTypeEnum.SANITARYFOUNTAIN = \"SANITARYFOUNTAIN\";\nIfcSanitaryTerminalTypeEnum.TOILETPAN = \"TOILETPAN\";\nIfcSanitaryTerminalTypeEnum.URINAL = \"URINAL\";\nIfcSanitaryTerminalTypeEnum.WASHHANDBASIN = \"WASHHANDBASIN\";\nIfcSanitaryTerminalTypeEnum.WCSEAT = \"WCSEAT\";\nIfcSanitaryTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSanitaryTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSectionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSectionTypeEnum.UNIFORM = \"UNIFORM\";\nIfcSectionTypeEnum.TAPERED = \"TAPERED\";\nvar IfcSensorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSensorTypeEnum.COSENSOR = \"COSENSOR\";\nIfcSensorTypeEnum.CO2SENSOR = \"CO2SENSOR\";\nIfcSensorTypeEnum.CONDUCTANCESENSOR = \"CONDUCTANCESENSOR\";\nIfcSensorTypeEnum.CONTACTSENSOR = \"CONTACTSENSOR\";\nIfcSensorTypeEnum.FIRESENSOR = \"FIRESENSOR\";\nIfcSensorTypeEnum.FLOWSENSOR = \"FLOWSENSOR\";\nIfcSensorTypeEnum.FROSTSENSOR = \"FROSTSENSOR\";\nIfcSensorTypeEnum.GASSENSOR = \"GASSENSOR\";\nIfcSensorTypeEnum.HEATSENSOR = \"HEATSENSOR\";\nIfcSensorTypeEnum.HUMIDITYSENSOR = \"HUMIDITYSENSOR\";\nIfcSensorTypeEnum.IDENTIFIERSENSOR = \"IDENTIFIERSENSOR\";\nIfcSensorTypeEnum.IONCONCENTRATIONSENSOR = \"IONCONCENTRATIONSENSOR\";\nIfcSensorTypeEnum.LEVELSENSOR = \"LEVELSENSOR\";\nIfcSensorTypeEnum.LIGHTSENSOR = \"LIGHTSENSOR\";\nIfcSensorTypeEnum.MOISTURESENSOR = \"MOISTURESENSOR\";\nIfcSensorTypeEnum.MOVEMENTSENSOR = \"MOVEMENTSENSOR\";\nIfcSensorTypeEnum.PHSENSOR = \"PHSENSOR\";\nIfcSensorTypeEnum.PRESSURESENSOR = \"PRESSURESENSOR\";\nIfcSensorTypeEnum.RADIATIONSENSOR = \"RADIATIONSENSOR\";\nIfcSensorTypeEnum.RADIOACTIVITYSENSOR = \"RADIOACTIVITYSENSOR\";\nIfcSensorTypeEnum.SMOKESENSOR = \"SMOKESENSOR\";\nIfcSensorTypeEnum.SOUNDSENSOR = \"SOUNDSENSOR\";\nIfcSensorTypeEnum.TEMPERATURESENSOR = \"TEMPERATURESENSOR\";\nIfcSensorTypeEnum.WINDSENSOR = \"WINDSENSOR\";\nIfcSensorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSensorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSequenceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSequenceEnum.START_START = \"START_START\";\nIfcSequenceEnum.START_FINISH = \"START_FINISH\";\nIfcSequenceEnum.FINISH_START = \"FINISH_START\";\nIfcSequenceEnum.FINISH_FINISH = \"FINISH_FINISH\";\nIfcSequenceEnum.USERDEFINED = \"USERDEFINED\";\nIfcSequenceEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcShadingDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcShadingDeviceTypeEnum.JALOUSIE = \"JALOUSIE\";\nIfcShadingDeviceTypeEnum.SHUTTER = \"SHUTTER\";\nIfcShadingDeviceTypeEnum.AWNING = \"AWNING\";\nIfcShadingDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcShadingDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSimplePropertyTemplateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSimplePropertyTemplateTypeEnum.P_SINGLEVALUE = \"P_SINGLEVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_ENUMERATEDVALUE = \"P_ENUMERATEDVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_BOUNDEDVALUE = \"P_BOUNDEDVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_LISTVALUE = \"P_LISTVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_TABLEVALUE = \"P_TABLEVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_REFERENCEVALUE = \"P_REFERENCEVALUE\";\nIfcSimplePropertyTemplateTypeEnum.Q_LENGTH = \"Q_LENGTH\";\nIfcSimplePropertyTemplateTypeEnum.Q_AREA = \"Q_AREA\";\nIfcSimplePropertyTemplateTypeEnum.Q_VOLUME = \"Q_VOLUME\";\nIfcSimplePropertyTemplateTypeEnum.Q_COUNT = \"Q_COUNT\";\nIfcSimplePropertyTemplateTypeEnum.Q_WEIGHT = \"Q_WEIGHT\";\nIfcSimplePropertyTemplateTypeEnum.Q_TIME = \"Q_TIME\";\nvar IfcSlabTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSlabTypeEnum.FLOOR = \"FLOOR\";\nIfcSlabTypeEnum.ROOF = \"ROOF\";\nIfcSlabTypeEnum.LANDING = \"LANDING\";\nIfcSlabTypeEnum.BASESLAB = \"BASESLAB\";\nIfcSlabTypeEnum.APPROACH_SLAB = \"APPROACH_SLAB\";\nIfcSlabTypeEnum.PAVING = \"PAVING\";\nIfcSlabTypeEnum.WEARING = \"WEARING\";\nIfcSlabTypeEnum.SIDEWALK = \"SIDEWALK\";\nIfcSlabTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSlabTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSolarDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSolarDeviceTypeEnum.SOLARCOLLECTOR = \"SOLARCOLLECTOR\";\nIfcSolarDeviceTypeEnum.SOLARPANEL = \"SOLARPANEL\";\nIfcSolarDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSolarDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSpaceHeaterTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSpaceHeaterTypeEnum.CONVECTOR = \"CONVECTOR\";\nIfcSpaceHeaterTypeEnum.RADIATOR = \"RADIATOR\";\nIfcSpaceHeaterTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSpaceHeaterTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSpaceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSpaceTypeEnum.SPACE = \"SPACE\";\nIfcSpaceTypeEnum.PARKING = \"PARKING\";\nIfcSpaceTypeEnum.GFA = \"GFA\";\nIfcSpaceTypeEnum.INTERNAL = \"INTERNAL\";\nIfcSpaceTypeEnum.EXTERNAL = \"EXTERNAL\";\nIfcSpaceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSpaceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSpatialZoneTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSpatialZoneTypeEnum.CONSTRUCTION = \"CONSTRUCTION\";\nIfcSpatialZoneTypeEnum.FIRESAFETY = \"FIRESAFETY\";\nIfcSpatialZoneTypeEnum.LIGHTING = \"LIGHTING\";\nIfcSpatialZoneTypeEnum.OCCUPANCY = \"OCCUPANCY\";\nIfcSpatialZoneTypeEnum.SECURITY = \"SECURITY\";\nIfcSpatialZoneTypeEnum.THERMAL = \"THERMAL\";\nIfcSpatialZoneTypeEnum.TRANSPORT = \"TRANSPORT\";\nIfcSpatialZoneTypeEnum.VENTILATION = \"VENTILATION\";\nIfcSpatialZoneTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSpatialZoneTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStackTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStackTerminalTypeEnum.BIRDCAGE = \"BIRDCAGE\";\nIfcStackTerminalTypeEnum.COWL = \"COWL\";\nIfcStackTerminalTypeEnum.RAINWATERHOPPER = \"RAINWATERHOPPER\";\nIfcStackTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStackTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStairFlightTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStairFlightTypeEnum.STRAIGHT = \"STRAIGHT\";\nIfcStairFlightTypeEnum.WINDER = \"WINDER\";\nIfcStairFlightTypeEnum.SPIRAL = \"SPIRAL\";\nIfcStairFlightTypeEnum.CURVED = \"CURVED\";\nIfcStairFlightTypeEnum.FREEFORM = \"FREEFORM\";\nIfcStairFlightTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStairFlightTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStairTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStairTypeEnum.STRAIGHT_RUN_STAIR = \"STRAIGHT_RUN_STAIR\";\nIfcStairTypeEnum.TWO_STRAIGHT_RUN_STAIR = \"TWO_STRAIGHT_RUN_STAIR\";\nIfcStairTypeEnum.QUARTER_WINDING_STAIR = \"QUARTER_WINDING_STAIR\";\nIfcStairTypeEnum.QUARTER_TURN_STAIR = \"QUARTER_TURN_STAIR\";\nIfcStairTypeEnum.HALF_WINDING_STAIR = \"HALF_WINDING_STAIR\";\nIfcStairTypeEnum.HALF_TURN_STAIR = \"HALF_TURN_STAIR\";\nIfcStairTypeEnum.TWO_QUARTER_WINDING_STAIR = \"TWO_QUARTER_WINDING_STAIR\";\nIfcStairTypeEnum.TWO_QUARTER_TURN_STAIR = \"TWO_QUARTER_TURN_STAIR\";\nIfcStairTypeEnum.THREE_QUARTER_WINDING_STAIR = \"THREE_QUARTER_WINDING_STAIR\";\nIfcStairTypeEnum.THREE_QUARTER_TURN_STAIR = \"THREE_QUARTER_TURN_STAIR\";\nIfcStairTypeEnum.SPIRAL_STAIR = \"SPIRAL_STAIR\";\nIfcStairTypeEnum.DOUBLE_RETURN_STAIR = \"DOUBLE_RETURN_STAIR\";\nIfcStairTypeEnum.CURVED_RUN_STAIR = \"CURVED_RUN_STAIR\";\nIfcStairTypeEnum.TWO_CURVED_RUN_STAIR = \"TWO_CURVED_RUN_STAIR\";\nIfcStairTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStairTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStateEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStateEnum.READWRITE = \"READWRITE\";\nIfcStateEnum.READONLY = \"READONLY\";\nIfcStateEnum.LOCKED = \"LOCKED\";\nIfcStateEnum.READWRITELOCKED = \"READWRITELOCKED\";\nIfcStateEnum.READONLYLOCKED = \"READONLYLOCKED\";\nvar IfcStructuralCurveActivityTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralCurveActivityTypeEnum.CONST = \"CONST\";\nIfcStructuralCurveActivityTypeEnum.LINEAR = \"LINEAR\";\nIfcStructuralCurveActivityTypeEnum.POLYGONAL = \"POLYGONAL\";\nIfcStructuralCurveActivityTypeEnum.EQUIDISTANT = \"EQUIDISTANT\";\nIfcStructuralCurveActivityTypeEnum.SINUS = \"SINUS\";\nIfcStructuralCurveActivityTypeEnum.PARABOLA = \"PARABOLA\";\nIfcStructuralCurveActivityTypeEnum.DISCRETE = \"DISCRETE\";\nIfcStructuralCurveActivityTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralCurveActivityTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStructuralCurveMemberTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralCurveMemberTypeEnum.RIGID_JOINED_MEMBER = \"RIGID_JOINED_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.PIN_JOINED_MEMBER = \"PIN_JOINED_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.CABLE = \"CABLE\";\nIfcStructuralCurveMemberTypeEnum.TENSION_MEMBER = \"TENSION_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.COMPRESSION_MEMBER = \"COMPRESSION_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralCurveMemberTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStructuralSurfaceActivityTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralSurfaceActivityTypeEnum.CONST = \"CONST\";\nIfcStructuralSurfaceActivityTypeEnum.BILINEAR = \"BILINEAR\";\nIfcStructuralSurfaceActivityTypeEnum.DISCRETE = \"DISCRETE\";\nIfcStructuralSurfaceActivityTypeEnum.ISOCONTOUR = \"ISOCONTOUR\";\nIfcStructuralSurfaceActivityTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralSurfaceActivityTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStructuralSurfaceMemberTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralSurfaceMemberTypeEnum.BENDING_ELEMENT = \"BENDING_ELEMENT\";\nIfcStructuralSurfaceMemberTypeEnum.MEMBRANE_ELEMENT = \"MEMBRANE_ELEMENT\";\nIfcStructuralSurfaceMemberTypeEnum.SHELL = \"SHELL\";\nIfcStructuralSurfaceMemberTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralSurfaceMemberTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSubContractResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSubContractResourceTypeEnum.PURCHASE = \"PURCHASE\";\nIfcSubContractResourceTypeEnum.WORK = \"WORK\";\nIfcSubContractResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSubContractResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSurfaceFeatureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSurfaceFeatureTypeEnum.MARK = \"MARK\";\nIfcSurfaceFeatureTypeEnum.TAG = \"TAG\";\nIfcSurfaceFeatureTypeEnum.TREATMENT = \"TREATMENT\";\nIfcSurfaceFeatureTypeEnum.DEFECT = \"DEFECT\";\nIfcSurfaceFeatureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSurfaceFeatureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSurfaceSide = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSurfaceSide.POSITIVE = \"POSITIVE\";\nIfcSurfaceSide.NEGATIVE = \"NEGATIVE\";\nIfcSurfaceSide.BOTH = \"BOTH\";\nvar IfcSwitchingDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSwitchingDeviceTypeEnum.CONTACTOR = \"CONTACTOR\";\nIfcSwitchingDeviceTypeEnum.DIMMERSWITCH = \"DIMMERSWITCH\";\nIfcSwitchingDeviceTypeEnum.EMERGENCYSTOP = \"EMERGENCYSTOP\";\nIfcSwitchingDeviceTypeEnum.KEYPAD = \"KEYPAD\";\nIfcSwitchingDeviceTypeEnum.MOMENTARYSWITCH = \"MOMENTARYSWITCH\";\nIfcSwitchingDeviceTypeEnum.SELECTORSWITCH = \"SELECTORSWITCH\";\nIfcSwitchingDeviceTypeEnum.STARTER = \"STARTER\";\nIfcSwitchingDeviceTypeEnum.SWITCHDISCONNECTOR = \"SWITCHDISCONNECTOR\";\nIfcSwitchingDeviceTypeEnum.TOGGLESWITCH = \"TOGGLESWITCH\";\nIfcSwitchingDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSwitchingDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSystemFurnitureElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSystemFurnitureElementTypeEnum.PANEL = \"PANEL\";\nIfcSystemFurnitureElementTypeEnum.WORKSURFACE = \"WORKSURFACE\";\nIfcSystemFurnitureElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSystemFurnitureElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTankTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTankTypeEnum.BASIN = \"BASIN\";\nIfcTankTypeEnum.BREAKPRESSURE = \"BREAKPRESSURE\";\nIfcTankTypeEnum.EXPANSION = \"EXPANSION\";\nIfcTankTypeEnum.FEEDANDEXPANSION = \"FEEDANDEXPANSION\";\nIfcTankTypeEnum.PRESSUREVESSEL = \"PRESSUREVESSEL\";\nIfcTankTypeEnum.STORAGE = \"STORAGE\";\nIfcTankTypeEnum.VESSEL = \"VESSEL\";\nIfcTankTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTankTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTaskDurationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTaskDurationEnum.ELAPSEDTIME = \"ELAPSEDTIME\";\nIfcTaskDurationEnum.WORKTIME = \"WORKTIME\";\nIfcTaskDurationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTaskTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTaskTypeEnum.ATTENDANCE = \"ATTENDANCE\";\nIfcTaskTypeEnum.CONSTRUCTION = \"CONSTRUCTION\";\nIfcTaskTypeEnum.DEMOLITION = \"DEMOLITION\";\nIfcTaskTypeEnum.DISMANTLE = \"DISMANTLE\";\nIfcTaskTypeEnum.DISPOSAL = \"DISPOSAL\";\nIfcTaskTypeEnum.INSTALLATION = \"INSTALLATION\";\nIfcTaskTypeEnum.LOGISTIC = \"LOGISTIC\";\nIfcTaskTypeEnum.MAINTENANCE = \"MAINTENANCE\";\nIfcTaskTypeEnum.MOVE = \"MOVE\";\nIfcTaskTypeEnum.OPERATION = \"OPERATION\";\nIfcTaskTypeEnum.REMOVAL = \"REMOVAL\";\nIfcTaskTypeEnum.RENOVATION = \"RENOVATION\";\nIfcTaskTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTaskTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTendonAnchorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTendonAnchorTypeEnum.COUPLER = \"COUPLER\";\nIfcTendonAnchorTypeEnum.FIXED_END = \"FIXED_END\";\nIfcTendonAnchorTypeEnum.TENSIONING_END = \"TENSIONING_END\";\nIfcTendonAnchorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTendonAnchorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTendonConduitTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTendonConduitTypeEnum.DUCT = \"DUCT\";\nIfcTendonConduitTypeEnum.COUPLER = \"COUPLER\";\nIfcTendonConduitTypeEnum.GROUTING_DUCT = \"GROUTING_DUCT\";\nIfcTendonConduitTypeEnum.TRUMPET = \"TRUMPET\";\nIfcTendonConduitTypeEnum.DIABOLO = \"DIABOLO\";\nIfcTendonConduitTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTendonConduitTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTendonTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTendonTypeEnum.BAR = \"BAR\";\nIfcTendonTypeEnum.COATED = \"COATED\";\nIfcTendonTypeEnum.STRAND = \"STRAND\";\nIfcTendonTypeEnum.WIRE = \"WIRE\";\nIfcTendonTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTendonTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTextPath = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTextPath.LEFT = \"LEFT\";\nIfcTextPath.RIGHT = \"RIGHT\";\nIfcTextPath.UP = \"UP\";\nIfcTextPath.DOWN = \"DOWN\";\nvar IfcTimeSeriesDataTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTimeSeriesDataTypeEnum.CONTINUOUS = \"CONTINUOUS\";\nIfcTimeSeriesDataTypeEnum.DISCRETE = \"DISCRETE\";\nIfcTimeSeriesDataTypeEnum.DISCRETEBINARY = \"DISCRETEBINARY\";\nIfcTimeSeriesDataTypeEnum.PIECEWISEBINARY = \"PIECEWISEBINARY\";\nIfcTimeSeriesDataTypeEnum.PIECEWISECONSTANT = \"PIECEWISECONSTANT\";\nIfcTimeSeriesDataTypeEnum.PIECEWISECONTINUOUS = \"PIECEWISECONTINUOUS\";\nIfcTimeSeriesDataTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTransformerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransformerTypeEnum.CURRENT = \"CURRENT\";\nIfcTransformerTypeEnum.FREQUENCY = \"FREQUENCY\";\nIfcTransformerTypeEnum.INVERTER = \"INVERTER\";\nIfcTransformerTypeEnum.RECTIFIER = \"RECTIFIER\";\nIfcTransformerTypeEnum.VOLTAGE = \"VOLTAGE\";\nIfcTransformerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTransformerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTransitionCode = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransitionCode.DISCONTINUOUS = \"DISCONTINUOUS\";\nIfcTransitionCode.CONTINUOUS = \"CONTINUOUS\";\nIfcTransitionCode.CONTSAMEGRADIENT = \"CONTSAMEGRADIENT\";\nIfcTransitionCode.CONTSAMEGRADIENTSAMECURVATURE = \"CONTSAMEGRADIENTSAMECURVATURE\";\nvar IfcTransitionCurveType = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransitionCurveType.BIQUADRATICPARABOLA = \"BIQUADRATICPARABOLA\";\nIfcTransitionCurveType.BLOSSCURVE = \"BLOSSCURVE\";\nIfcTransitionCurveType.CLOTHOIDCURVE = \"CLOTHOIDCURVE\";\nIfcTransitionCurveType.COSINECURVE = \"COSINECURVE\";\nIfcTransitionCurveType.CUBICPARABOLA = \"CUBICPARABOLA\";\nIfcTransitionCurveType.SINECURVE = \"SINECURVE\";\nvar IfcTransportElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransportElementTypeEnum.ELEVATOR = \"ELEVATOR\";\nIfcTransportElementTypeEnum.ESCALATOR = \"ESCALATOR\";\nIfcTransportElementTypeEnum.MOVINGWALKWAY = \"MOVINGWALKWAY\";\nIfcTransportElementTypeEnum.CRANEWAY = \"CRANEWAY\";\nIfcTransportElementTypeEnum.LIFTINGGEAR = \"LIFTINGGEAR\";\nIfcTransportElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTransportElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTrimmingPreference = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTrimmingPreference.CARTESIAN = \"CARTESIAN\";\nIfcTrimmingPreference.PARAMETER = \"PARAMETER\";\nIfcTrimmingPreference.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcTubeBundleTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTubeBundleTypeEnum.FINNED = \"FINNED\";\nIfcTubeBundleTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTubeBundleTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcUnitEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcUnitEnum.ABSORBEDDOSEUNIT = \"ABSORBEDDOSEUNIT\";\nIfcUnitEnum.AMOUNTOFSUBSTANCEUNIT = \"AMOUNTOFSUBSTANCEUNIT\";\nIfcUnitEnum.AREAUNIT = \"AREAUNIT\";\nIfcUnitEnum.DOSEEQUIVALENTUNIT = \"DOSEEQUIVALENTUNIT\";\nIfcUnitEnum.ELECTRICCAPACITANCEUNIT = \"ELECTRICCAPACITANCEUNIT\";\nIfcUnitEnum.ELECTRICCHARGEUNIT = \"ELECTRICCHARGEUNIT\";\nIfcUnitEnum.ELECTRICCONDUCTANCEUNIT = \"ELECTRICCONDUCTANCEUNIT\";\nIfcUnitEnum.ELECTRICCURRENTUNIT = \"ELECTRICCURRENTUNIT\";\nIfcUnitEnum.ELECTRICRESISTANCEUNIT = \"ELECTRICRESISTANCEUNIT\";\nIfcUnitEnum.ELECTRICVOLTAGEUNIT = \"ELECTRICVOLTAGEUNIT\";\nIfcUnitEnum.ENERGYUNIT = \"ENERGYUNIT\";\nIfcUnitEnum.FORCEUNIT = \"FORCEUNIT\";\nIfcUnitEnum.FREQUENCYUNIT = \"FREQUENCYUNIT\";\nIfcUnitEnum.ILLUMINANCEUNIT = \"ILLUMINANCEUNIT\";\nIfcUnitEnum.INDUCTANCEUNIT = \"INDUCTANCEUNIT\";\nIfcUnitEnum.LENGTHUNIT = \"LENGTHUNIT\";\nIfcUnitEnum.LUMINOUSFLUXUNIT = \"LUMINOUSFLUXUNIT\";\nIfcUnitEnum.LUMINOUSINTENSITYUNIT = \"LUMINOUSINTENSITYUNIT\";\nIfcUnitEnum.MAGNETICFLUXDENSITYUNIT = \"MAGNETICFLUXDENSITYUNIT\";\nIfcUnitEnum.MAGNETICFLUXUNIT = \"MAGNETICFLUXUNIT\";\nIfcUnitEnum.MASSUNIT = \"MASSUNIT\";\nIfcUnitEnum.PLANEANGLEUNIT = \"PLANEANGLEUNIT\";\nIfcUnitEnum.POWERUNIT = \"POWERUNIT\";\nIfcUnitEnum.PRESSUREUNIT = \"PRESSUREUNIT\";\nIfcUnitEnum.RADIOACTIVITYUNIT = \"RADIOACTIVITYUNIT\";\nIfcUnitEnum.SOLIDANGLEUNIT = \"SOLIDANGLEUNIT\";\nIfcUnitEnum.THERMODYNAMICTEMPERATUREUNIT = \"THERMODYNAMICTEMPERATUREUNIT\";\nIfcUnitEnum.TIMEUNIT = \"TIMEUNIT\";\nIfcUnitEnum.VOLUMEUNIT = \"VOLUMEUNIT\";\nIfcUnitEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcUnitaryControlElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcUnitaryControlElementTypeEnum.ALARMPANEL = \"ALARMPANEL\";\nIfcUnitaryControlElementTypeEnum.CONTROLPANEL = \"CONTROLPANEL\";\nIfcUnitaryControlElementTypeEnum.GASDETECTIONPANEL = \"GASDETECTIONPANEL\";\nIfcUnitaryControlElementTypeEnum.INDICATORPANEL = \"INDICATORPANEL\";\nIfcUnitaryControlElementTypeEnum.MIMICPANEL = \"MIMICPANEL\";\nIfcUnitaryControlElementTypeEnum.HUMIDISTAT = \"HUMIDISTAT\";\nIfcUnitaryControlElementTypeEnum.THERMOSTAT = \"THERMOSTAT\";\nIfcUnitaryControlElementTypeEnum.WEATHERSTATION = \"WEATHERSTATION\";\nIfcUnitaryControlElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcUnitaryControlElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcUnitaryEquipmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcUnitaryEquipmentTypeEnum.AIRHANDLER = \"AIRHANDLER\";\nIfcUnitaryEquipmentTypeEnum.AIRCONDITIONINGUNIT = \"AIRCONDITIONINGUNIT\";\nIfcUnitaryEquipmentTypeEnum.DEHUMIDIFIER = \"DEHUMIDIFIER\";\nIfcUnitaryEquipmentTypeEnum.SPLITSYSTEM = \"SPLITSYSTEM\";\nIfcUnitaryEquipmentTypeEnum.ROOFTOPUNIT = \"ROOFTOPUNIT\";\nIfcUnitaryEquipmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcUnitaryEquipmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcValveTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcValveTypeEnum.AIRRELEASE = \"AIRRELEASE\";\nIfcValveTypeEnum.ANTIVACUUM = \"ANTIVACUUM\";\nIfcValveTypeEnum.CHANGEOVER = \"CHANGEOVER\";\nIfcValveTypeEnum.CHECK = \"CHECK\";\nIfcValveTypeEnum.COMMISSIONING = \"COMMISSIONING\";\nIfcValveTypeEnum.DIVERTING = \"DIVERTING\";\nIfcValveTypeEnum.DRAWOFFCOCK = \"DRAWOFFCOCK\";\nIfcValveTypeEnum.DOUBLECHECK = \"DOUBLECHECK\";\nIfcValveTypeEnum.DOUBLEREGULATING = \"DOUBLEREGULATING\";\nIfcValveTypeEnum.FAUCET = \"FAUCET\";\nIfcValveTypeEnum.FLUSHING = \"FLUSHING\";\nIfcValveTypeEnum.GASCOCK = \"GASCOCK\";\nIfcValveTypeEnum.GASTAP = \"GASTAP\";\nIfcValveTypeEnum.ISOLATING = \"ISOLATING\";\nIfcValveTypeEnum.MIXING = \"MIXING\";\nIfcValveTypeEnum.PRESSUREREDUCING = \"PRESSUREREDUCING\";\nIfcValveTypeEnum.PRESSURERELIEF = \"PRESSURERELIEF\";\nIfcValveTypeEnum.REGULATING = \"REGULATING\";\nIfcValveTypeEnum.SAFETYCUTOFF = \"SAFETYCUTOFF\";\nIfcValveTypeEnum.STEAMTRAP = \"STEAMTRAP\";\nIfcValveTypeEnum.STOPCOCK = \"STOPCOCK\";\nIfcValveTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcValveTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcVibrationDamperTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcVibrationDamperTypeEnum.BENDING_YIELD = \"BENDING_YIELD\";\nIfcVibrationDamperTypeEnum.SHEAR_YIELD = \"SHEAR_YIELD\";\nIfcVibrationDamperTypeEnum.AXIAL_YIELD = \"AXIAL_YIELD\";\nIfcVibrationDamperTypeEnum.FRICTION = \"FRICTION\";\nIfcVibrationDamperTypeEnum.VISCOUS = \"VISCOUS\";\nIfcVibrationDamperTypeEnum.RUBBER = \"RUBBER\";\nIfcVibrationDamperTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcVibrationDamperTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcVibrationIsolatorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcVibrationIsolatorTypeEnum.COMPRESSION = \"COMPRESSION\";\nIfcVibrationIsolatorTypeEnum.SPRING = \"SPRING\";\nIfcVibrationIsolatorTypeEnum.BASE = \"BASE\";\nIfcVibrationIsolatorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcVibrationIsolatorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcVoidingFeatureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcVoidingFeatureTypeEnum.CUTOUT = \"CUTOUT\";\nIfcVoidingFeatureTypeEnum.NOTCH = \"NOTCH\";\nIfcVoidingFeatureTypeEnum.HOLE = \"HOLE\";\nIfcVoidingFeatureTypeEnum.MITER = \"MITER\";\nIfcVoidingFeatureTypeEnum.CHAMFER = \"CHAMFER\";\nIfcVoidingFeatureTypeEnum.EDGE = \"EDGE\";\nIfcVoidingFeatureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcVoidingFeatureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWallTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWallTypeEnum.MOVABLE = \"MOVABLE\";\nIfcWallTypeEnum.PARAPET = \"PARAPET\";\nIfcWallTypeEnum.PARTITIONING = \"PARTITIONING\";\nIfcWallTypeEnum.PLUMBINGWALL = \"PLUMBINGWALL\";\nIfcWallTypeEnum.SHEAR = \"SHEAR\";\nIfcWallTypeEnum.SOLIDWALL = \"SOLIDWALL\";\nIfcWallTypeEnum.STANDARD = \"STANDARD\";\nIfcWallTypeEnum.POLYGONAL = \"POLYGONAL\";\nIfcWallTypeEnum.ELEMENTEDWALL = \"ELEMENTEDWALL\";\nIfcWallTypeEnum.RETAININGWALL = \"RETAININGWALL\";\nIfcWallTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWallTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWasteTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWasteTerminalTypeEnum.FLOORTRAP = \"FLOORTRAP\";\nIfcWasteTerminalTypeEnum.FLOORWASTE = \"FLOORWASTE\";\nIfcWasteTerminalTypeEnum.GULLYSUMP = \"GULLYSUMP\";\nIfcWasteTerminalTypeEnum.GULLYTRAP = \"GULLYTRAP\";\nIfcWasteTerminalTypeEnum.ROOFDRAIN = \"ROOFDRAIN\";\nIfcWasteTerminalTypeEnum.WASTEDISPOSALUNIT = \"WASTEDISPOSALUNIT\";\nIfcWasteTerminalTypeEnum.WASTETRAP = \"WASTETRAP\";\nIfcWasteTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWasteTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowPanelOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowPanelOperationEnum.SIDEHUNGRIGHTHAND = \"SIDEHUNGRIGHTHAND\";\nIfcWindowPanelOperationEnum.SIDEHUNGLEFTHAND = \"SIDEHUNGLEFTHAND\";\nIfcWindowPanelOperationEnum.TILTANDTURNRIGHTHAND = \"TILTANDTURNRIGHTHAND\";\nIfcWindowPanelOperationEnum.TILTANDTURNLEFTHAND = \"TILTANDTURNLEFTHAND\";\nIfcWindowPanelOperationEnum.TOPHUNG = \"TOPHUNG\";\nIfcWindowPanelOperationEnum.BOTTOMHUNG = \"BOTTOMHUNG\";\nIfcWindowPanelOperationEnum.PIVOTHORIZONTAL = \"PIVOTHORIZONTAL\";\nIfcWindowPanelOperationEnum.PIVOTVERTICAL = \"PIVOTVERTICAL\";\nIfcWindowPanelOperationEnum.SLIDINGHORIZONTAL = \"SLIDINGHORIZONTAL\";\nIfcWindowPanelOperationEnum.SLIDINGVERTICAL = \"SLIDINGVERTICAL\";\nIfcWindowPanelOperationEnum.REMOVABLECASEMENT = \"REMOVABLECASEMENT\";\nIfcWindowPanelOperationEnum.FIXEDCASEMENT = \"FIXEDCASEMENT\";\nIfcWindowPanelOperationEnum.OTHEROPERATION = \"OTHEROPERATION\";\nIfcWindowPanelOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowPanelPositionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowPanelPositionEnum.LEFT = \"LEFT\";\nIfcWindowPanelPositionEnum.MIDDLE = \"MIDDLE\";\nIfcWindowPanelPositionEnum.RIGHT = \"RIGHT\";\nIfcWindowPanelPositionEnum.BOTTOM = \"BOTTOM\";\nIfcWindowPanelPositionEnum.TOP = \"TOP\";\nIfcWindowPanelPositionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowStyleConstructionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowStyleConstructionEnum.ALUMINIUM = \"ALUMINIUM\";\nIfcWindowStyleConstructionEnum.HIGH_GRADE_STEEL = \"HIGH_GRADE_STEEL\";\nIfcWindowStyleConstructionEnum.STEEL = \"STEEL\";\nIfcWindowStyleConstructionEnum.WOOD = \"WOOD\";\nIfcWindowStyleConstructionEnum.ALUMINIUM_WOOD = \"ALUMINIUM_WOOD\";\nIfcWindowStyleConstructionEnum.PLASTIC = \"PLASTIC\";\nIfcWindowStyleConstructionEnum.OTHER_CONSTRUCTION = \"OTHER_CONSTRUCTION\";\nIfcWindowStyleConstructionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowStyleOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowStyleOperationEnum.SINGLE_PANEL = \"SINGLE_PANEL\";\nIfcWindowStyleOperationEnum.DOUBLE_PANEL_VERTICAL = \"DOUBLE_PANEL_VERTICAL\";\nIfcWindowStyleOperationEnum.DOUBLE_PANEL_HORIZONTAL = \"DOUBLE_PANEL_HORIZONTAL\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_VERTICAL = \"TRIPLE_PANEL_VERTICAL\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_BOTTOM = \"TRIPLE_PANEL_BOTTOM\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_TOP = \"TRIPLE_PANEL_TOP\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_LEFT = \"TRIPLE_PANEL_LEFT\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_RIGHT = \"TRIPLE_PANEL_RIGHT\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_HORIZONTAL = \"TRIPLE_PANEL_HORIZONTAL\";\nIfcWindowStyleOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcWindowStyleOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowTypeEnum.WINDOW = \"WINDOW\";\nIfcWindowTypeEnum.SKYLIGHT = \"SKYLIGHT\";\nIfcWindowTypeEnum.LIGHTDOME = \"LIGHTDOME\";\nIfcWindowTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWindowTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowTypePartitioningEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowTypePartitioningEnum.SINGLE_PANEL = \"SINGLE_PANEL\";\nIfcWindowTypePartitioningEnum.DOUBLE_PANEL_VERTICAL = \"DOUBLE_PANEL_VERTICAL\";\nIfcWindowTypePartitioningEnum.DOUBLE_PANEL_HORIZONTAL = \"DOUBLE_PANEL_HORIZONTAL\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_VERTICAL = \"TRIPLE_PANEL_VERTICAL\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_BOTTOM = \"TRIPLE_PANEL_BOTTOM\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_TOP = \"TRIPLE_PANEL_TOP\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_LEFT = \"TRIPLE_PANEL_LEFT\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_RIGHT = \"TRIPLE_PANEL_RIGHT\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_HORIZONTAL = \"TRIPLE_PANEL_HORIZONTAL\";\nIfcWindowTypePartitioningEnum.USERDEFINED = \"USERDEFINED\";\nIfcWindowTypePartitioningEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWorkCalendarTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWorkCalendarTypeEnum.FIRSTSHIFT = \"FIRSTSHIFT\";\nIfcWorkCalendarTypeEnum.SECONDSHIFT = \"SECONDSHIFT\";\nIfcWorkCalendarTypeEnum.THIRDSHIFT = \"THIRDSHIFT\";\nIfcWorkCalendarTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWorkCalendarTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWorkPlanTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWorkPlanTypeEnum.ACTUAL = \"ACTUAL\";\nIfcWorkPlanTypeEnum.BASELINE = \"BASELINE\";\nIfcWorkPlanTypeEnum.PLANNED = \"PLANNED\";\nIfcWorkPlanTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWorkPlanTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWorkScheduleTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWorkScheduleTypeEnum.ACTUAL = \"ACTUAL\";\nIfcWorkScheduleTypeEnum.BASELINE = \"BASELINE\";\nIfcWorkScheduleTypeEnum.PLANNED = \"PLANNED\";\nIfcWorkScheduleTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWorkScheduleTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActionRequest = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcActionRequest(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcActor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.TheActor = TheActor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let TheActor = tape[ptr++];\n    return new IfcActor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.TheActor);\n    ;\n    return args;\n  }\n};\nvar IfcActorRole = class {\n  constructor(expressID, type, Role, UserDefinedRole, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Role = Role;\n    this.UserDefinedRole = UserDefinedRole;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Role = tape[ptr++];\n    let UserDefinedRole = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcActorRole(expressID, type, Role, UserDefinedRole, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Role);\n    ;\n    args.push(this.UserDefinedRole);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcActuator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcActuator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcActuatorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcActuatorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAddress = class {\n  constructor(expressID, type, Purpose, Description, UserDefinedPurpose) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Purpose = Purpose;\n    this.Description = Description;\n    this.UserDefinedPurpose = UserDefinedPurpose;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Purpose = tape[ptr++];\n    let Description = tape[ptr++];\n    let UserDefinedPurpose = tape[ptr++];\n    return new IfcAddress(expressID, type, Purpose, Description, UserDefinedPurpose);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Purpose);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UserDefinedPurpose);\n    ;\n    return args;\n  }\n};\nvar IfcAdvancedBrep = class {\n  constructor(expressID, type, Outer) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    return new IfcAdvancedBrep(expressID, type, Outer);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    return args;\n  }\n};\nvar IfcAdvancedBrepWithVoids = class {\n  constructor(expressID, type, Outer, Voids) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n    this.Voids = Voids;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    let Voids = tape[ptr++];\n    return new IfcAdvancedBrepWithVoids(expressID, type, Outer, Voids);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    args.push(this.Voids);\n    ;\n    return args;\n  }\n};\nvar IfcAdvancedFace = class {\n  constructor(expressID, type, Bounds, FaceSurface, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bounds = Bounds;\n    this.FaceSurface = FaceSurface;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bounds = tape[ptr++];\n    let FaceSurface = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcAdvancedFace(expressID, type, Bounds, FaceSurface, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bounds);\n    ;\n    args.push(this.FaceSurface);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminalBox = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminalBox(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminalBoxType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminalBoxType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirToAirHeatRecovery = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirToAirHeatRecovery(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirToAirHeatRecoveryType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirToAirHeatRecoveryType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlarm = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAlarm(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlarmType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAlarmType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Axis = Axis;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Axis = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAlignment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DHorizontal = class {\n  constructor(expressID, type, StartDistAlong, Segments) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartDistAlong = StartDistAlong;\n    this.Segments = Segments;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartDistAlong = tape[ptr++];\n    let Segments = tape[ptr++];\n    return new IfcAlignment2DHorizontal(expressID, type, StartDistAlong, Segments);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.Segments);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DHorizontalSegment = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, CurveGeometry) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.CurveGeometry = CurveGeometry;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let CurveGeometry = tape[ptr++];\n    return new IfcAlignment2DHorizontalSegment(expressID, type, TangentialContinuity, StartTag, EndTag, CurveGeometry);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.CurveGeometry);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DSegment = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    return new IfcAlignment2DSegment(expressID, type, TangentialContinuity, StartTag, EndTag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerSegCircularArc = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, Radius, IsConvex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n    this.Radius = Radius;\n    this.IsConvex = IsConvex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    let Radius = tape[ptr++];\n    let IsConvex = tape[ptr++];\n    return new IfcAlignment2DVerSegCircularArc(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, Radius, IsConvex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.IsConvex);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerSegLine = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    return new IfcAlignment2DVerSegLine(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerSegParabolicArc = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, ParabolaConstant, IsConvex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n    this.ParabolaConstant = ParabolaConstant;\n    this.IsConvex = IsConvex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    let ParabolaConstant = tape[ptr++];\n    let IsConvex = tape[ptr++];\n    return new IfcAlignment2DVerSegParabolicArc(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, ParabolaConstant, IsConvex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    args.push(this.ParabolaConstant);\n    ;\n    args.push(this.IsConvex);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVertical = class {\n  constructor(expressID, type, Segments) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    return new IfcAlignment2DVertical(expressID, type, Segments);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerticalSegment = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    return new IfcAlignment2DVerticalSegment(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    return args;\n  }\n};\nvar IfcAlignmentCurve = class {\n  constructor(expressID, type, Horizontal, Vertical, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Horizontal = Horizontal;\n    this.Vertical = Vertical;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Horizontal = tape[ptr++];\n    let Vertical = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcAlignmentCurve(expressID, type, Horizontal, Vertical, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Horizontal);\n    ;\n    args.push(this.Vertical);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcAnnotation = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcAnnotation(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcAnnotationFillArea = class {\n  constructor(expressID, type, OuterBoundary, InnerBoundaries) {\n    this.expressID = expressID;\n    this.type = type;\n    this.OuterBoundary = OuterBoundary;\n    this.InnerBoundaries = InnerBoundaries;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let OuterBoundary = tape[ptr++];\n    let InnerBoundaries = tape[ptr++];\n    return new IfcAnnotationFillArea(expressID, type, OuterBoundary, InnerBoundaries);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.OuterBoundary);\n    ;\n    args.push(this.InnerBoundaries);\n    ;\n    return args;\n  }\n};\nvar IfcApplication = class {\n  constructor(expressID, type, ApplicationDeveloper, Version, ApplicationFullName, ApplicationIdentifier) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ApplicationDeveloper = ApplicationDeveloper;\n    this.Version = Version;\n    this.ApplicationFullName = ApplicationFullName;\n    this.ApplicationIdentifier = ApplicationIdentifier;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ApplicationDeveloper = tape[ptr++];\n    let Version = tape[ptr++];\n    let ApplicationFullName = tape[ptr++];\n    let ApplicationIdentifier = tape[ptr++];\n    return new IfcApplication(expressID, type, ApplicationDeveloper, Version, ApplicationFullName, ApplicationIdentifier);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ApplicationDeveloper);\n    ;\n    args.push(this.Version);\n    ;\n    args.push(this.ApplicationFullName);\n    ;\n    args.push(this.ApplicationIdentifier);\n    ;\n    return args;\n  }\n};\nvar IfcAppliedValue = class {\n  constructor(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AppliedValue = AppliedValue;\n    this.UnitBasis = UnitBasis;\n    this.ApplicableDate = ApplicableDate;\n    this.FixedUntilDate = FixedUntilDate;\n    this.Category = Category;\n    this.Condition = Condition;\n    this.ArithmeticOperator = ArithmeticOperator;\n    this.Components = Components;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AppliedValue = tape[ptr++];\n    let UnitBasis = tape[ptr++];\n    let ApplicableDate = tape[ptr++];\n    let FixedUntilDate = tape[ptr++];\n    let Category = tape[ptr++];\n    let Condition = tape[ptr++];\n    let ArithmeticOperator = tape[ptr++];\n    let Components = tape[ptr++];\n    return new IfcAppliedValue(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AppliedValue);\n    ;\n    args.push(this.UnitBasis);\n    ;\n    args.push(this.ApplicableDate);\n    ;\n    args.push(this.FixedUntilDate);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Condition);\n    ;\n    args.push(this.ArithmeticOperator);\n    ;\n    args.push(this.Components);\n    ;\n    return args;\n  }\n};\nvar IfcApproval = class {\n  constructor(expressID, type, Identifier, Name, Description, TimeOfApproval, Status, Level, Qualifier, RequestingApproval, GivingApproval) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identifier = Identifier;\n    this.Name = Name;\n    this.Description = Description;\n    this.TimeOfApproval = TimeOfApproval;\n    this.Status = Status;\n    this.Level = Level;\n    this.Qualifier = Qualifier;\n    this.RequestingApproval = RequestingApproval;\n    this.GivingApproval = GivingApproval;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identifier = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let TimeOfApproval = tape[ptr++];\n    let Status = tape[ptr++];\n    let Level = tape[ptr++];\n    let Qualifier = tape[ptr++];\n    let RequestingApproval = tape[ptr++];\n    let GivingApproval = tape[ptr++];\n    return new IfcApproval(expressID, type, Identifier, Name, Description, TimeOfApproval, Status, Level, Qualifier, RequestingApproval, GivingApproval);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identifier);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.TimeOfApproval);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.Level);\n    ;\n    args.push(this.Qualifier);\n    ;\n    args.push(this.RequestingApproval);\n    ;\n    args.push(this.GivingApproval);\n    ;\n    return args;\n  }\n};\nvar IfcApprovalRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingApproval, RelatedApprovals) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingApproval = RelatingApproval;\n    this.RelatedApprovals = RelatedApprovals;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingApproval = tape[ptr++];\n    let RelatedApprovals = tape[ptr++];\n    return new IfcApprovalRelationship(expressID, type, Name, Description, RelatingApproval, RelatedApprovals);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingApproval);\n    ;\n    args.push(this.RelatedApprovals);\n    ;\n    return args;\n  }\n};\nvar IfcArbitraryClosedProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, OuterCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.OuterCurve = OuterCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let OuterCurve = tape[ptr++];\n    return new IfcArbitraryClosedProfileDef(expressID, type, ProfileType, ProfileName, OuterCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.OuterCurve);\n    ;\n    return args;\n  }\n};\nvar IfcArbitraryOpenProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Curve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Curve = Curve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Curve = tape[ptr++];\n    return new IfcArbitraryOpenProfileDef(expressID, type, ProfileType, ProfileName, Curve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Curve);\n    ;\n    return args;\n  }\n};\nvar IfcArbitraryProfileDefWithVoids = class {\n  constructor(expressID, type, ProfileType, ProfileName, OuterCurve, InnerCurves) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.OuterCurve = OuterCurve;\n    this.InnerCurves = InnerCurves;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let OuterCurve = tape[ptr++];\n    let InnerCurves = tape[ptr++];\n    return new IfcArbitraryProfileDefWithVoids(expressID, type, ProfileType, ProfileName, OuterCurve, InnerCurves);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.OuterCurve);\n    ;\n    args.push(this.InnerCurves);\n    ;\n    return args;\n  }\n};\nvar IfcAsset = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, OriginalValue, CurrentValue, TotalReplacementCost, Owner, User, ResponsiblePerson, IncorporationDate, DepreciatedValue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.OriginalValue = OriginalValue;\n    this.CurrentValue = CurrentValue;\n    this.TotalReplacementCost = TotalReplacementCost;\n    this.Owner = Owner;\n    this.User = User;\n    this.ResponsiblePerson = ResponsiblePerson;\n    this.IncorporationDate = IncorporationDate;\n    this.DepreciatedValue = DepreciatedValue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let OriginalValue = tape[ptr++];\n    let CurrentValue = tape[ptr++];\n    let TotalReplacementCost = tape[ptr++];\n    let Owner = tape[ptr++];\n    let User = tape[ptr++];\n    let ResponsiblePerson = tape[ptr++];\n    let IncorporationDate = tape[ptr++];\n    let DepreciatedValue = tape[ptr++];\n    return new IfcAsset(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, OriginalValue, CurrentValue, TotalReplacementCost, Owner, User, ResponsiblePerson, IncorporationDate, DepreciatedValue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.OriginalValue);\n    ;\n    args.push(this.CurrentValue);\n    ;\n    args.push(this.TotalReplacementCost);\n    ;\n    args.push(this.Owner);\n    ;\n    args.push(this.User);\n    ;\n    args.push(this.ResponsiblePerson);\n    ;\n    args.push(this.IncorporationDate);\n    ;\n    args.push(this.DepreciatedValue);\n    ;\n    return args;\n  }\n};\nvar IfcAsymmetricIShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, BottomFlangeWidth, OverallDepth, WebThickness, BottomFlangeThickness, BottomFlangeFilletRadius, TopFlangeWidth, TopFlangeThickness, TopFlangeFilletRadius, BottomFlangeEdgeRadius, BottomFlangeSlope, TopFlangeEdgeRadius, TopFlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.BottomFlangeWidth = BottomFlangeWidth;\n    this.OverallDepth = OverallDepth;\n    this.WebThickness = WebThickness;\n    this.BottomFlangeThickness = BottomFlangeThickness;\n    this.BottomFlangeFilletRadius = BottomFlangeFilletRadius;\n    this.TopFlangeWidth = TopFlangeWidth;\n    this.TopFlangeThickness = TopFlangeThickness;\n    this.TopFlangeFilletRadius = TopFlangeFilletRadius;\n    this.BottomFlangeEdgeRadius = BottomFlangeEdgeRadius;\n    this.BottomFlangeSlope = BottomFlangeSlope;\n    this.TopFlangeEdgeRadius = TopFlangeEdgeRadius;\n    this.TopFlangeSlope = TopFlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let BottomFlangeWidth = tape[ptr++];\n    let OverallDepth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let BottomFlangeThickness = tape[ptr++];\n    let BottomFlangeFilletRadius = tape[ptr++];\n    let TopFlangeWidth = tape[ptr++];\n    let TopFlangeThickness = tape[ptr++];\n    let TopFlangeFilletRadius = tape[ptr++];\n    let BottomFlangeEdgeRadius = tape[ptr++];\n    let BottomFlangeSlope = tape[ptr++];\n    let TopFlangeEdgeRadius = tape[ptr++];\n    let TopFlangeSlope = tape[ptr++];\n    return new IfcAsymmetricIShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, BottomFlangeWidth, OverallDepth, WebThickness, BottomFlangeThickness, BottomFlangeFilletRadius, TopFlangeWidth, TopFlangeThickness, TopFlangeFilletRadius, BottomFlangeEdgeRadius, BottomFlangeSlope, TopFlangeEdgeRadius, TopFlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.BottomFlangeWidth);\n    ;\n    args.push(this.OverallDepth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.BottomFlangeThickness);\n    ;\n    args.push(this.BottomFlangeFilletRadius);\n    ;\n    args.push(this.TopFlangeWidth);\n    ;\n    args.push(this.TopFlangeThickness);\n    ;\n    args.push(this.TopFlangeFilletRadius);\n    ;\n    args.push(this.BottomFlangeEdgeRadius);\n    ;\n    args.push(this.BottomFlangeSlope);\n    ;\n    args.push(this.TopFlangeEdgeRadius);\n    ;\n    args.push(this.TopFlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcAudioVisualAppliance = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAudioVisualAppliance(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAudioVisualApplianceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAudioVisualApplianceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAxis1Placement = class {\n  constructor(expressID, type, Location, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcAxis1Placement(expressID, type, Location, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcAxis2Placement2D = class {\n  constructor(expressID, type, Location, RefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.RefDirection = RefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let RefDirection = tape[ptr++];\n    return new IfcAxis2Placement2D(expressID, type, Location, RefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.RefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcAxis2Placement3D = class {\n  constructor(expressID, type, Location, Axis, RefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Axis = Axis;\n    this.RefDirection = RefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Axis = tape[ptr++];\n    let RefDirection = tape[ptr++];\n    return new IfcAxis2Placement3D(expressID, type, Location, Axis, RefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.RefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineCurve = class {\n  constructor(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Degree = Degree;\n    this.ControlPointsList = ControlPointsList;\n    this.CurveForm = CurveForm;\n    this.ClosedCurve = ClosedCurve;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Degree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let CurveForm = tape[ptr++];\n    let ClosedCurve = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcBSplineCurve(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Degree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.CurveForm);\n    ;\n    args.push(this.ClosedCurve);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineCurveWithKnots = class {\n  constructor(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Degree = Degree;\n    this.ControlPointsList = ControlPointsList;\n    this.CurveForm = CurveForm;\n    this.ClosedCurve = ClosedCurve;\n    this.SelfIntersect = SelfIntersect;\n    this.KnotMultiplicities = KnotMultiplicities;\n    this.Knots = Knots;\n    this.KnotSpec = KnotSpec;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Degree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let CurveForm = tape[ptr++];\n    let ClosedCurve = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let KnotMultiplicities = tape[ptr++];\n    let Knots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    return new IfcBSplineCurveWithKnots(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Degree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.CurveForm);\n    ;\n    args.push(this.ClosedCurve);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.KnotMultiplicities);\n    ;\n    args.push(this.Knots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineSurface = class {\n  constructor(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.UDegree = UDegree;\n    this.VDegree = VDegree;\n    this.ControlPointsList = ControlPointsList;\n    this.SurfaceForm = SurfaceForm;\n    this.UClosed = UClosed;\n    this.VClosed = VClosed;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let UDegree = tape[ptr++];\n    let VDegree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let SurfaceForm = tape[ptr++];\n    let UClosed = tape[ptr++];\n    let VClosed = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcBSplineSurface(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.UDegree);\n    ;\n    args.push(this.VDegree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.SurfaceForm);\n    ;\n    args.push(this.UClosed);\n    ;\n    args.push(this.VClosed);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineSurfaceWithKnots = class {\n  constructor(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec) {\n    this.expressID = expressID;\n    this.type = type;\n    this.UDegree = UDegree;\n    this.VDegree = VDegree;\n    this.ControlPointsList = ControlPointsList;\n    this.SurfaceForm = SurfaceForm;\n    this.UClosed = UClosed;\n    this.VClosed = VClosed;\n    this.SelfIntersect = SelfIntersect;\n    this.UMultiplicities = UMultiplicities;\n    this.VMultiplicities = VMultiplicities;\n    this.UKnots = UKnots;\n    this.VKnots = VKnots;\n    this.KnotSpec = KnotSpec;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let UDegree = tape[ptr++];\n    let VDegree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let SurfaceForm = tape[ptr++];\n    let UClosed = tape[ptr++];\n    let VClosed = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let UMultiplicities = tape[ptr++];\n    let VMultiplicities = tape[ptr++];\n    let UKnots = tape[ptr++];\n    let VKnots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    return new IfcBSplineSurfaceWithKnots(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.UDegree);\n    ;\n    args.push(this.VDegree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.SurfaceForm);\n    ;\n    args.push(this.UClosed);\n    ;\n    args.push(this.VClosed);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.UMultiplicities);\n    ;\n    args.push(this.VMultiplicities);\n    ;\n    args.push(this.UKnots);\n    ;\n    args.push(this.VKnots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    return args;\n  }\n};\nvar IfcBeam = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBeam(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBeamStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBeamStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBeamType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBeamType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBearing = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBearing(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBearingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBearingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBlobTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, RasterFormat, RasterCode) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n    this.RasterFormat = RasterFormat;\n    this.RasterCode = RasterCode;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    let RasterFormat = tape[ptr++];\n    let RasterCode = tape[ptr++];\n    return new IfcBlobTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, RasterFormat, RasterCode);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    args.push(this.RasterFormat);\n    ;\n    args.push(this.RasterCode);\n    ;\n    return args;\n  }\n};\nvar IfcBlock = class {\n  constructor(expressID, type, Position, XLength, YLength, ZLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.XLength = XLength;\n    this.YLength = YLength;\n    this.ZLength = ZLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let XLength = tape[ptr++];\n    let YLength = tape[ptr++];\n    let ZLength = tape[ptr++];\n    return new IfcBlock(expressID, type, Position, XLength, YLength, ZLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.XLength);\n    ;\n    args.push(this.YLength);\n    ;\n    args.push(this.ZLength);\n    ;\n    return args;\n  }\n};\nvar IfcBoiler = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBoiler(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBoilerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBoilerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBooleanClippingResult = class {\n  constructor(expressID, type, Operator, FirstOperand, SecondOperand) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Operator = Operator;\n    this.FirstOperand = FirstOperand;\n    this.SecondOperand = SecondOperand;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Operator = tape[ptr++];\n    let FirstOperand = tape[ptr++];\n    let SecondOperand = tape[ptr++];\n    return new IfcBooleanClippingResult(expressID, type, Operator, FirstOperand, SecondOperand);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Operator);\n    ;\n    args.push(this.FirstOperand);\n    ;\n    args.push(this.SecondOperand);\n    ;\n    return args;\n  }\n};\nvar IfcBooleanResult = class {\n  constructor(expressID, type, Operator, FirstOperand, SecondOperand) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Operator = Operator;\n    this.FirstOperand = FirstOperand;\n    this.SecondOperand = SecondOperand;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Operator = tape[ptr++];\n    let FirstOperand = tape[ptr++];\n    let SecondOperand = tape[ptr++];\n    return new IfcBooleanResult(expressID, type, Operator, FirstOperand, SecondOperand);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Operator);\n    ;\n    args.push(this.FirstOperand);\n    ;\n    args.push(this.SecondOperand);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryCondition = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcBoundaryCondition(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryCurve = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcBoundaryCurve(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryEdgeCondition = class {\n  constructor(expressID, type, Name, TranslationalStiffnessByLengthX, TranslationalStiffnessByLengthY, TranslationalStiffnessByLengthZ, RotationalStiffnessByLengthX, RotationalStiffnessByLengthY, RotationalStiffnessByLengthZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessByLengthX = TranslationalStiffnessByLengthX;\n    this.TranslationalStiffnessByLengthY = TranslationalStiffnessByLengthY;\n    this.TranslationalStiffnessByLengthZ = TranslationalStiffnessByLengthZ;\n    this.RotationalStiffnessByLengthX = RotationalStiffnessByLengthX;\n    this.RotationalStiffnessByLengthY = RotationalStiffnessByLengthY;\n    this.RotationalStiffnessByLengthZ = RotationalStiffnessByLengthZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessByLengthX = tape[ptr++];\n    let TranslationalStiffnessByLengthY = tape[ptr++];\n    let TranslationalStiffnessByLengthZ = tape[ptr++];\n    let RotationalStiffnessByLengthX = tape[ptr++];\n    let RotationalStiffnessByLengthY = tape[ptr++];\n    let RotationalStiffnessByLengthZ = tape[ptr++];\n    return new IfcBoundaryEdgeCondition(expressID, type, Name, TranslationalStiffnessByLengthX, TranslationalStiffnessByLengthY, TranslationalStiffnessByLengthZ, RotationalStiffnessByLengthX, RotationalStiffnessByLengthY, RotationalStiffnessByLengthZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessByLengthX);\n    ;\n    args.push(this.TranslationalStiffnessByLengthY);\n    ;\n    args.push(this.TranslationalStiffnessByLengthZ);\n    ;\n    args.push(this.RotationalStiffnessByLengthX);\n    ;\n    args.push(this.RotationalStiffnessByLengthY);\n    ;\n    args.push(this.RotationalStiffnessByLengthZ);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryFaceCondition = class {\n  constructor(expressID, type, Name, TranslationalStiffnessByAreaX, TranslationalStiffnessByAreaY, TranslationalStiffnessByAreaZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessByAreaX = TranslationalStiffnessByAreaX;\n    this.TranslationalStiffnessByAreaY = TranslationalStiffnessByAreaY;\n    this.TranslationalStiffnessByAreaZ = TranslationalStiffnessByAreaZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessByAreaX = tape[ptr++];\n    let TranslationalStiffnessByAreaY = tape[ptr++];\n    let TranslationalStiffnessByAreaZ = tape[ptr++];\n    return new IfcBoundaryFaceCondition(expressID, type, Name, TranslationalStiffnessByAreaX, TranslationalStiffnessByAreaY, TranslationalStiffnessByAreaZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessByAreaX);\n    ;\n    args.push(this.TranslationalStiffnessByAreaY);\n    ;\n    args.push(this.TranslationalStiffnessByAreaZ);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryNodeCondition = class {\n  constructor(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessX = TranslationalStiffnessX;\n    this.TranslationalStiffnessY = TranslationalStiffnessY;\n    this.TranslationalStiffnessZ = TranslationalStiffnessZ;\n    this.RotationalStiffnessX = RotationalStiffnessX;\n    this.RotationalStiffnessY = RotationalStiffnessY;\n    this.RotationalStiffnessZ = RotationalStiffnessZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessX = tape[ptr++];\n    let TranslationalStiffnessY = tape[ptr++];\n    let TranslationalStiffnessZ = tape[ptr++];\n    let RotationalStiffnessX = tape[ptr++];\n    let RotationalStiffnessY = tape[ptr++];\n    let RotationalStiffnessZ = tape[ptr++];\n    return new IfcBoundaryNodeCondition(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessX);\n    ;\n    args.push(this.TranslationalStiffnessY);\n    ;\n    args.push(this.TranslationalStiffnessZ);\n    ;\n    args.push(this.RotationalStiffnessX);\n    ;\n    args.push(this.RotationalStiffnessY);\n    ;\n    args.push(this.RotationalStiffnessZ);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryNodeConditionWarping = class {\n  constructor(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ, WarpingStiffness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessX = TranslationalStiffnessX;\n    this.TranslationalStiffnessY = TranslationalStiffnessY;\n    this.TranslationalStiffnessZ = TranslationalStiffnessZ;\n    this.RotationalStiffnessX = RotationalStiffnessX;\n    this.RotationalStiffnessY = RotationalStiffnessY;\n    this.RotationalStiffnessZ = RotationalStiffnessZ;\n    this.WarpingStiffness = WarpingStiffness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessX = tape[ptr++];\n    let TranslationalStiffnessY = tape[ptr++];\n    let TranslationalStiffnessZ = tape[ptr++];\n    let RotationalStiffnessX = tape[ptr++];\n    let RotationalStiffnessY = tape[ptr++];\n    let RotationalStiffnessZ = tape[ptr++];\n    let WarpingStiffness = tape[ptr++];\n    return new IfcBoundaryNodeConditionWarping(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ, WarpingStiffness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessX);\n    ;\n    args.push(this.TranslationalStiffnessY);\n    ;\n    args.push(this.TranslationalStiffnessZ);\n    ;\n    args.push(this.RotationalStiffnessX);\n    ;\n    args.push(this.RotationalStiffnessY);\n    ;\n    args.push(this.RotationalStiffnessZ);\n    ;\n    args.push(this.WarpingStiffness);\n    ;\n    return args;\n  }\n};\nvar IfcBoundedCurve = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcBoundedCurve(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcBoundedSurface = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcBoundedSurface(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcBoundingBox = class {\n  constructor(expressID, type, Corner, XDim, YDim, ZDim) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Corner = Corner;\n    this.XDim = XDim;\n    this.YDim = YDim;\n    this.ZDim = ZDim;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Corner = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let ZDim = tape[ptr++];\n    return new IfcBoundingBox(expressID, type, Corner, XDim, YDim, ZDim);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Corner);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.ZDim);\n    ;\n    return args;\n  }\n};\nvar IfcBoxedHalfSpace = class {\n  constructor(expressID, type, BaseSurface, AgreementFlag, Enclosure) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BaseSurface = BaseSurface;\n    this.AgreementFlag = AgreementFlag;\n    this.Enclosure = Enclosure;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BaseSurface = tape[ptr++];\n    let AgreementFlag = tape[ptr++];\n    let Enclosure = tape[ptr++];\n    return new IfcBoxedHalfSpace(expressID, type, BaseSurface, AgreementFlag, Enclosure);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BaseSurface);\n    ;\n    args.push(this.AgreementFlag);\n    ;\n    args.push(this.Enclosure);\n    ;\n    return args;\n  }\n};\nvar IfcBridge = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBridge(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBridgePart = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBridgePart(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuilding = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, ElevationOfRefHeight, ElevationOfTerrain, BuildingAddress) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.ElevationOfRefHeight = ElevationOfRefHeight;\n    this.ElevationOfTerrain = ElevationOfTerrain;\n    this.BuildingAddress = BuildingAddress;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let ElevationOfRefHeight = tape[ptr++];\n    let ElevationOfTerrain = tape[ptr++];\n    let BuildingAddress = tape[ptr++];\n    return new IfcBuilding(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, ElevationOfRefHeight, ElevationOfTerrain, BuildingAddress);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.ElevationOfRefHeight);\n    ;\n    args.push(this.ElevationOfTerrain);\n    ;\n    args.push(this.BuildingAddress);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcBuildingElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementPart = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementPart(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementPartType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementPartType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementProxy = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementProxy(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementProxyType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementProxyType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcBuildingElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingStorey = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, Elevation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.Elevation = Elevation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let Elevation = tape[ptr++];\n    return new IfcBuildingStorey(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, Elevation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.Elevation);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingSystem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcBuildingSystem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcBurner = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBurner(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBurnerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBurnerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, Width, WallThickness, Girth, InternalFilletRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.Width = Width;\n    this.WallThickness = WallThickness;\n    this.Girth = Girth;\n    this.InternalFilletRadius = InternalFilletRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let Width = tape[ptr++];\n    let WallThickness = tape[ptr++];\n    let Girth = tape[ptr++];\n    let InternalFilletRadius = tape[ptr++];\n    return new IfcCShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, Width, WallThickness, Girth, InternalFilletRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.Width);\n    ;\n    args.push(this.WallThickness);\n    ;\n    args.push(this.Girth);\n    ;\n    args.push(this.InternalFilletRadius);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCaissonFoundation = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCaissonFoundation(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCaissonFoundationType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCaissonFoundationType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianPoint = class {\n  constructor(expressID, type, Coordinates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    return new IfcCartesianPoint(expressID, type, Coordinates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianPointList = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcCartesianPointList(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcCartesianPointList2D = class {\n  constructor(expressID, type, CoordList, TagList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordList = CoordList;\n    this.TagList = TagList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordList = tape[ptr++];\n    let TagList = tape[ptr++];\n    return new IfcCartesianPointList2D(expressID, type, CoordList, TagList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordList);\n    ;\n    args.push(this.TagList);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianPointList3D = class {\n  constructor(expressID, type, CoordList, TagList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordList = CoordList;\n    this.TagList = TagList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordList = tape[ptr++];\n    let TagList = tape[ptr++];\n    return new IfcCartesianPointList3D(expressID, type, CoordList, TagList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordList);\n    ;\n    args.push(this.TagList);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    return new IfcCartesianTransformationOperator(expressID, type, Axis1, Axis2, LocalOrigin, Scale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator2D = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    return new IfcCartesianTransformationOperator2D(expressID, type, Axis1, Axis2, LocalOrigin, Scale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator2DnonUniform = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Scale2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n    this.Scale2 = Scale2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    let Scale2 = tape[ptr++];\n    return new IfcCartesianTransformationOperator2DnonUniform(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Scale2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    args.push(this.Scale2);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator3D = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n    this.Axis3 = Axis3;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    let Axis3 = tape[ptr++];\n    return new IfcCartesianTransformationOperator3D(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    args.push(this.Axis3);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator3DnonUniform = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3, Scale2, Scale3) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n    this.Axis3 = Axis3;\n    this.Scale2 = Scale2;\n    this.Scale3 = Scale3;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    let Axis3 = tape[ptr++];\n    let Scale2 = tape[ptr++];\n    let Scale3 = tape[ptr++];\n    return new IfcCartesianTransformationOperator3DnonUniform(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3, Scale2, Scale3);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    args.push(this.Axis3);\n    ;\n    args.push(this.Scale2);\n    ;\n    args.push(this.Scale3);\n    ;\n    return args;\n  }\n};\nvar IfcCenterLineProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Curve, Thickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Curve = Curve;\n    this.Thickness = Thickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Curve = tape[ptr++];\n    let Thickness = tape[ptr++];\n    return new IfcCenterLineProfileDef(expressID, type, ProfileType, ProfileName, Curve, Thickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Curve);\n    ;\n    args.push(this.Thickness);\n    ;\n    return args;\n  }\n};\nvar IfcChiller = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChiller(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcChillerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChillerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcChimney = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChimney(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcChimneyType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChimneyType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCircle = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcCircle(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcCircleHollowProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Radius, WallThickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Radius = Radius;\n    this.WallThickness = WallThickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    let WallThickness = tape[ptr++];\n    return new IfcCircleHollowProfileDef(expressID, type, ProfileType, ProfileName, Position, Radius, WallThickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.WallThickness);\n    ;\n    return args;\n  }\n};\nvar IfcCircleProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcCircleProfileDef(expressID, type, ProfileType, ProfileName, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcCircularArcSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength, Radius, IsCCW) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n    this.Radius = Radius;\n    this.IsCCW = IsCCW;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    let Radius = tape[ptr++];\n    let IsCCW = tape[ptr++];\n    return new IfcCircularArcSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength, Radius, IsCCW);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.IsCCW);\n    ;\n    return args;\n  }\n};\nvar IfcCivilElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcCivilElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcCivilElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcCivilElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcClassification = class {\n  constructor(expressID, type, Source, Edition, EditionDate, Name, Description, Location, ReferenceTokens) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Source = Source;\n    this.Edition = Edition;\n    this.EditionDate = EditionDate;\n    this.Name = Name;\n    this.Description = Description;\n    this.Location = Location;\n    this.ReferenceTokens = ReferenceTokens;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Source = tape[ptr++];\n    let Edition = tape[ptr++];\n    let EditionDate = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Location = tape[ptr++];\n    let ReferenceTokens = tape[ptr++];\n    return new IfcClassification(expressID, type, Source, Edition, EditionDate, Name, Description, Location, ReferenceTokens);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Source);\n    ;\n    args.push(this.Edition);\n    ;\n    args.push(this.EditionDate);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Location);\n    ;\n    args.push(this.ReferenceTokens);\n    ;\n    return args;\n  }\n};\nvar IfcClassificationReference = class {\n  constructor(expressID, type, Location, Identification, Name, ReferencedSource, Description, Sort) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.ReferencedSource = ReferencedSource;\n    this.Description = Description;\n    this.Sort = Sort;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let ReferencedSource = tape[ptr++];\n    let Description = tape[ptr++];\n    let Sort = tape[ptr++];\n    return new IfcClassificationReference(expressID, type, Location, Identification, Name, ReferencedSource, Description, Sort);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.ReferencedSource);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Sort);\n    ;\n    return args;\n  }\n};\nvar IfcClosedShell = class {\n  constructor(expressID, type, CfsFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CfsFaces = CfsFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CfsFaces = tape[ptr++];\n    return new IfcClosedShell(expressID, type, CfsFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CfsFaces);\n    ;\n    return args;\n  }\n};\nvar IfcCoil = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoil(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoilType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoilType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcColourRgb = class {\n  constructor(expressID, type, Name, Red, Green, Blue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Red = Red;\n    this.Green = Green;\n    this.Blue = Blue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Red = tape[ptr++];\n    let Green = tape[ptr++];\n    let Blue = tape[ptr++];\n    return new IfcColourRgb(expressID, type, Name, Red, Green, Blue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Red);\n    ;\n    args.push(this.Green);\n    ;\n    args.push(this.Blue);\n    ;\n    return args;\n  }\n};\nvar IfcColourRgbList = class {\n  constructor(expressID, type, ColourList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ColourList = ColourList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ColourList = tape[ptr++];\n    return new IfcColourRgbList(expressID, type, ColourList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ColourList);\n    ;\n    return args;\n  }\n};\nvar IfcColourSpecification = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcColourSpecification(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcColumn = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcColumn(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcColumnStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcColumnStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcColumnType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcColumnType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCommunicationsAppliance = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCommunicationsAppliance(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCommunicationsApplianceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCommunicationsApplianceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcComplexProperty = class {\n  constructor(expressID, type, Name, Description, UsageName, HasProperties) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.UsageName = UsageName;\n    this.HasProperties = HasProperties;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UsageName = tape[ptr++];\n    let HasProperties = tape[ptr++];\n    return new IfcComplexProperty(expressID, type, Name, Description, UsageName, HasProperties);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UsageName);\n    ;\n    args.push(this.HasProperties);\n    ;\n    return args;\n  }\n};\nvar IfcComplexPropertyTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, UsageName, TemplateType, HasPropertyTemplates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.UsageName = UsageName;\n    this.TemplateType = TemplateType;\n    this.HasPropertyTemplates = HasPropertyTemplates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UsageName = tape[ptr++];\n    let TemplateType = tape[ptr++];\n    let HasPropertyTemplates = tape[ptr++];\n    return new IfcComplexPropertyTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, UsageName, TemplateType, HasPropertyTemplates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UsageName);\n    ;\n    args.push(this.TemplateType);\n    ;\n    args.push(this.HasPropertyTemplates);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeCurve = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcCompositeCurve(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeCurveOnSurface = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcCompositeCurveOnSurface(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeCurveSegment = class {\n  constructor(expressID, type, Transition, SameSense, ParentCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Transition = Transition;\n    this.SameSense = SameSense;\n    this.ParentCurve = ParentCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Transition = tape[ptr++];\n    let SameSense = tape[ptr++];\n    let ParentCurve = tape[ptr++];\n    return new IfcCompositeCurveSegment(expressID, type, Transition, SameSense, ParentCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Transition);\n    ;\n    args.push(this.SameSense);\n    ;\n    args.push(this.ParentCurve);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Profiles, Label) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Profiles = Profiles;\n    this.Label = Label;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Profiles = tape[ptr++];\n    let Label = tape[ptr++];\n    return new IfcCompositeProfileDef(expressID, type, ProfileType, ProfileName, Profiles, Label);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Profiles);\n    ;\n    args.push(this.Label);\n    ;\n    return args;\n  }\n};\nvar IfcCompressor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCompressor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCompressorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCompressorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCondenser = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCondenser(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCondenserType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCondenserType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConic = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcConic(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcConnectedFaceSet = class {\n  constructor(expressID, type, CfsFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CfsFaces = CfsFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CfsFaces = tape[ptr++];\n    return new IfcConnectedFaceSet(expressID, type, CfsFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CfsFaces);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionCurveGeometry = class {\n  constructor(expressID, type, CurveOnRelatingElement, CurveOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CurveOnRelatingElement = CurveOnRelatingElement;\n    this.CurveOnRelatedElement = CurveOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CurveOnRelatingElement = tape[ptr++];\n    let CurveOnRelatedElement = tape[ptr++];\n    return new IfcConnectionCurveGeometry(expressID, type, CurveOnRelatingElement, CurveOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CurveOnRelatingElement);\n    ;\n    args.push(this.CurveOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionGeometry = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcConnectionGeometry(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcConnectionPointEccentricity = class {\n  constructor(expressID, type, PointOnRelatingElement, PointOnRelatedElement, EccentricityInX, EccentricityInY, EccentricityInZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PointOnRelatingElement = PointOnRelatingElement;\n    this.PointOnRelatedElement = PointOnRelatedElement;\n    this.EccentricityInX = EccentricityInX;\n    this.EccentricityInY = EccentricityInY;\n    this.EccentricityInZ = EccentricityInZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PointOnRelatingElement = tape[ptr++];\n    let PointOnRelatedElement = tape[ptr++];\n    let EccentricityInX = tape[ptr++];\n    let EccentricityInY = tape[ptr++];\n    let EccentricityInZ = tape[ptr++];\n    return new IfcConnectionPointEccentricity(expressID, type, PointOnRelatingElement, PointOnRelatedElement, EccentricityInX, EccentricityInY, EccentricityInZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PointOnRelatingElement);\n    ;\n    args.push(this.PointOnRelatedElement);\n    ;\n    args.push(this.EccentricityInX);\n    ;\n    args.push(this.EccentricityInY);\n    ;\n    args.push(this.EccentricityInZ);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionPointGeometry = class {\n  constructor(expressID, type, PointOnRelatingElement, PointOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PointOnRelatingElement = PointOnRelatingElement;\n    this.PointOnRelatedElement = PointOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PointOnRelatingElement = tape[ptr++];\n    let PointOnRelatedElement = tape[ptr++];\n    return new IfcConnectionPointGeometry(expressID, type, PointOnRelatingElement, PointOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PointOnRelatingElement);\n    ;\n    args.push(this.PointOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionSurfaceGeometry = class {\n  constructor(expressID, type, SurfaceOnRelatingElement, SurfaceOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SurfaceOnRelatingElement = SurfaceOnRelatingElement;\n    this.SurfaceOnRelatedElement = SurfaceOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SurfaceOnRelatingElement = tape[ptr++];\n    let SurfaceOnRelatedElement = tape[ptr++];\n    return new IfcConnectionSurfaceGeometry(expressID, type, SurfaceOnRelatingElement, SurfaceOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SurfaceOnRelatingElement);\n    ;\n    args.push(this.SurfaceOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionVolumeGeometry = class {\n  constructor(expressID, type, VolumeOnRelatingElement, VolumeOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.VolumeOnRelatingElement = VolumeOnRelatingElement;\n    this.VolumeOnRelatedElement = VolumeOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let VolumeOnRelatingElement = tape[ptr++];\n    let VolumeOnRelatedElement = tape[ptr++];\n    return new IfcConnectionVolumeGeometry(expressID, type, VolumeOnRelatingElement, VolumeOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.VolumeOnRelatingElement);\n    ;\n    args.push(this.VolumeOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConstraint = class {\n  constructor(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConstraintGrade = ConstraintGrade;\n    this.ConstraintSource = ConstraintSource;\n    this.CreatingActor = CreatingActor;\n    this.CreationTime = CreationTime;\n    this.UserDefinedGrade = UserDefinedGrade;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConstraintGrade = tape[ptr++];\n    let ConstraintSource = tape[ptr++];\n    let CreatingActor = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let UserDefinedGrade = tape[ptr++];\n    return new IfcConstraint(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConstraintGrade);\n    ;\n    args.push(this.ConstraintSource);\n    ;\n    args.push(this.CreatingActor);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.UserDefinedGrade);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionEquipmentResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionEquipmentResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionEquipmentResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionEquipmentResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionMaterialResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionMaterialResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionMaterialResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionMaterialResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionProductResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionProductResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionProductResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionProductResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    return new IfcConstructionResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    return new IfcConstructionResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    return args;\n  }\n};\nvar IfcContext = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.Phase = Phase;\n    this.RepresentationContexts = RepresentationContexts;\n    this.UnitsInContext = UnitsInContext;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let Phase = tape[ptr++];\n    let RepresentationContexts = tape[ptr++];\n    let UnitsInContext = tape[ptr++];\n    return new IfcContext(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.Phase);\n    ;\n    args.push(this.RepresentationContexts);\n    ;\n    args.push(this.UnitsInContext);\n    ;\n    return args;\n  }\n};\nvar IfcContextDependentUnit = class {\n  constructor(expressID, type, Dimensions, UnitType, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcContextDependentUnit(expressID, type, Dimensions, UnitType, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    return new IfcControl(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    return args;\n  }\n};\nvar IfcController = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcController(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcControllerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcControllerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConversionBasedUnit = class {\n  constructor(expressID, type, Dimensions, UnitType, Name, ConversionFactor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Name = Name;\n    this.ConversionFactor = ConversionFactor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Name = tape[ptr++];\n    let ConversionFactor = tape[ptr++];\n    return new IfcConversionBasedUnit(expressID, type, Dimensions, UnitType, Name, ConversionFactor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.ConversionFactor);\n    ;\n    return args;\n  }\n};\nvar IfcConversionBasedUnitWithOffset = class {\n  constructor(expressID, type, Dimensions, UnitType, Name, ConversionFactor, ConversionOffset) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Name = Name;\n    this.ConversionFactor = ConversionFactor;\n    this.ConversionOffset = ConversionOffset;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Name = tape[ptr++];\n    let ConversionFactor = tape[ptr++];\n    let ConversionOffset = tape[ptr++];\n    return new IfcConversionBasedUnitWithOffset(expressID, type, Dimensions, UnitType, Name, ConversionFactor, ConversionOffset);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.ConversionFactor);\n    ;\n    args.push(this.ConversionOffset);\n    ;\n    return args;\n  }\n};\nvar IfcCooledBeam = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCooledBeam(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCooledBeamType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCooledBeamType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoolingTower = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoolingTower(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoolingTowerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoolingTowerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoordinateOperation = class {\n  constructor(expressID, type, SourceCRS, TargetCRS) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SourceCRS = SourceCRS;\n    this.TargetCRS = TargetCRS;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SourceCRS = tape[ptr++];\n    let TargetCRS = tape[ptr++];\n    return new IfcCoordinateOperation(expressID, type, SourceCRS, TargetCRS);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SourceCRS);\n    ;\n    args.push(this.TargetCRS);\n    ;\n    return args;\n  }\n};\nvar IfcCoordinateReferenceSystem = class {\n  constructor(expressID, type, Name, Description, GeodeticDatum, VerticalDatum) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.GeodeticDatum = GeodeticDatum;\n    this.VerticalDatum = VerticalDatum;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let GeodeticDatum = tape[ptr++];\n    let VerticalDatum = tape[ptr++];\n    return new IfcCoordinateReferenceSystem(expressID, type, Name, Description, GeodeticDatum, VerticalDatum);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.GeodeticDatum);\n    ;\n    args.push(this.VerticalDatum);\n    ;\n    return args;\n  }\n};\nvar IfcCostItem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, CostValues, CostQuantities) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.CostValues = CostValues;\n    this.CostQuantities = CostQuantities;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let CostValues = tape[ptr++];\n    let CostQuantities = tape[ptr++];\n    return new IfcCostItem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, CostValues, CostQuantities);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.CostValues);\n    ;\n    args.push(this.CostQuantities);\n    ;\n    return args;\n  }\n};\nvar IfcCostSchedule = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, SubmittedOn, UpdateDate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.SubmittedOn = SubmittedOn;\n    this.UpdateDate = UpdateDate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let SubmittedOn = tape[ptr++];\n    let UpdateDate = tape[ptr++];\n    return new IfcCostSchedule(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, SubmittedOn, UpdateDate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.SubmittedOn);\n    ;\n    args.push(this.UpdateDate);\n    ;\n    return args;\n  }\n};\nvar IfcCostValue = class {\n  constructor(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AppliedValue = AppliedValue;\n    this.UnitBasis = UnitBasis;\n    this.ApplicableDate = ApplicableDate;\n    this.FixedUntilDate = FixedUntilDate;\n    this.Category = Category;\n    this.Condition = Condition;\n    this.ArithmeticOperator = ArithmeticOperator;\n    this.Components = Components;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AppliedValue = tape[ptr++];\n    let UnitBasis = tape[ptr++];\n    let ApplicableDate = tape[ptr++];\n    let FixedUntilDate = tape[ptr++];\n    let Category = tape[ptr++];\n    let Condition = tape[ptr++];\n    let ArithmeticOperator = tape[ptr++];\n    let Components = tape[ptr++];\n    return new IfcCostValue(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AppliedValue);\n    ;\n    args.push(this.UnitBasis);\n    ;\n    args.push(this.ApplicableDate);\n    ;\n    args.push(this.FixedUntilDate);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Condition);\n    ;\n    args.push(this.ArithmeticOperator);\n    ;\n    args.push(this.Components);\n    ;\n    return args;\n  }\n};\nvar IfcCovering = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCovering(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoveringType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoveringType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCrewResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCrewResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCrewResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCrewResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCsgPrimitive3D = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcCsgPrimitive3D(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcCsgSolid = class {\n  constructor(expressID, type, TreeRootExpression) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TreeRootExpression = TreeRootExpression;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TreeRootExpression = tape[ptr++];\n    return new IfcCsgSolid(expressID, type, TreeRootExpression);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TreeRootExpression);\n    ;\n    return args;\n  }\n};\nvar IfcCurrencyRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingMonetaryUnit, RelatedMonetaryUnit, ExchangeRate, RateDateTime, RateSource) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingMonetaryUnit = RelatingMonetaryUnit;\n    this.RelatedMonetaryUnit = RelatedMonetaryUnit;\n    this.ExchangeRate = ExchangeRate;\n    this.RateDateTime = RateDateTime;\n    this.RateSource = RateSource;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingMonetaryUnit = tape[ptr++];\n    let RelatedMonetaryUnit = tape[ptr++];\n    let ExchangeRate = tape[ptr++];\n    let RateDateTime = tape[ptr++];\n    let RateSource = tape[ptr++];\n    return new IfcCurrencyRelationship(expressID, type, Name, Description, RelatingMonetaryUnit, RelatedMonetaryUnit, ExchangeRate, RateDateTime, RateSource);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingMonetaryUnit);\n    ;\n    args.push(this.RelatedMonetaryUnit);\n    ;\n    args.push(this.ExchangeRate);\n    ;\n    args.push(this.RateDateTime);\n    ;\n    args.push(this.RateSource);\n    ;\n    return args;\n  }\n};\nvar IfcCurtainWall = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCurtainWall(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCurtainWallType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCurtainWallType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCurve = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcCurve(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcCurveBoundedPlane = class {\n  constructor(expressID, type, BasisSurface, OuterBoundary, InnerBoundaries) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.OuterBoundary = OuterBoundary;\n    this.InnerBoundaries = InnerBoundaries;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let OuterBoundary = tape[ptr++];\n    let InnerBoundaries = tape[ptr++];\n    return new IfcCurveBoundedPlane(expressID, type, BasisSurface, OuterBoundary, InnerBoundaries);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.OuterBoundary);\n    ;\n    args.push(this.InnerBoundaries);\n    ;\n    return args;\n  }\n};\nvar IfcCurveBoundedSurface = class {\n  constructor(expressID, type, BasisSurface, Boundaries, ImplicitOuter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.Boundaries = Boundaries;\n    this.ImplicitOuter = ImplicitOuter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let Boundaries = tape[ptr++];\n    let ImplicitOuter = tape[ptr++];\n    return new IfcCurveBoundedSurface(expressID, type, BasisSurface, Boundaries, ImplicitOuter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.Boundaries);\n    ;\n    args.push(this.ImplicitOuter);\n    ;\n    return args;\n  }\n};\nvar IfcCurveSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    return new IfcCurveSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyle = class {\n  constructor(expressID, type, Name, CurveFont, CurveWidth, CurveColour, ModelOrDraughting) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.CurveFont = CurveFont;\n    this.CurveWidth = CurveWidth;\n    this.CurveColour = CurveColour;\n    this.ModelOrDraughting = ModelOrDraughting;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let CurveFont = tape[ptr++];\n    let CurveWidth = tape[ptr++];\n    let CurveColour = tape[ptr++];\n    let ModelOrDraughting = tape[ptr++];\n    return new IfcCurveStyle(expressID, type, Name, CurveFont, CurveWidth, CurveColour, ModelOrDraughting);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.CurveFont);\n    ;\n    args.push(this.CurveWidth);\n    ;\n    args.push(this.CurveColour);\n    ;\n    args.push(this.ModelOrDraughting);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyleFont = class {\n  constructor(expressID, type, Name, PatternList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.PatternList = PatternList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let PatternList = tape[ptr++];\n    return new IfcCurveStyleFont(expressID, type, Name, PatternList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.PatternList);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyleFontAndScaling = class {\n  constructor(expressID, type, Name, CurveFont, CurveFontScaling) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.CurveFont = CurveFont;\n    this.CurveFontScaling = CurveFontScaling;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let CurveFont = tape[ptr++];\n    let CurveFontScaling = tape[ptr++];\n    return new IfcCurveStyleFontAndScaling(expressID, type, Name, CurveFont, CurveFontScaling);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.CurveFont);\n    ;\n    args.push(this.CurveFontScaling);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyleFontPattern = class {\n  constructor(expressID, type, VisibleSegmentLength, InvisibleSegmentLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.VisibleSegmentLength = VisibleSegmentLength;\n    this.InvisibleSegmentLength = InvisibleSegmentLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let VisibleSegmentLength = tape[ptr++];\n    let InvisibleSegmentLength = tape[ptr++];\n    return new IfcCurveStyleFontPattern(expressID, type, VisibleSegmentLength, InvisibleSegmentLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.VisibleSegmentLength);\n    ;\n    args.push(this.InvisibleSegmentLength);\n    ;\n    return args;\n  }\n};\nvar IfcCylindricalSurface = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcCylindricalSurface(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcDamper = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDamper(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDamperType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDamperType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDeepFoundation = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDeepFoundation(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDeepFoundationType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDeepFoundationType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDerivedProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.ParentProfile = ParentProfile;\n    this.Operator = Operator;\n    this.Label = Label;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let ParentProfile = tape[ptr++];\n    let Operator = tape[ptr++];\n    let Label = tape[ptr++];\n    return new IfcDerivedProfileDef(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.ParentProfile);\n    ;\n    args.push(this.Operator);\n    ;\n    args.push(this.Label);\n    ;\n    return args;\n  }\n};\nvar IfcDerivedUnit = class {\n  constructor(expressID, type, Elements, UnitType, UserDefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Elements = Elements;\n    this.UnitType = UnitType;\n    this.UserDefinedType = UserDefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Elements = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let UserDefinedType = tape[ptr++];\n    return new IfcDerivedUnit(expressID, type, Elements, UnitType, UserDefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Elements);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.UserDefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDerivedUnitElement = class {\n  constructor(expressID, type, Unit, Exponent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Unit = Unit;\n    this.Exponent = Exponent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Unit = tape[ptr++];\n    let Exponent = tape[ptr++];\n    return new IfcDerivedUnitElement(expressID, type, Unit, Exponent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Unit);\n    ;\n    args.push(this.Exponent);\n    ;\n    return args;\n  }\n};\nvar IfcDimensionalExponents = class {\n  constructor(expressID, type, LengthExponent, MassExponent, TimeExponent, ElectricCurrentExponent, ThermodynamicTemperatureExponent, AmountOfSubstanceExponent, LuminousIntensityExponent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LengthExponent = LengthExponent;\n    this.MassExponent = MassExponent;\n    this.TimeExponent = TimeExponent;\n    this.ElectricCurrentExponent = ElectricCurrentExponent;\n    this.ThermodynamicTemperatureExponent = ThermodynamicTemperatureExponent;\n    this.AmountOfSubstanceExponent = AmountOfSubstanceExponent;\n    this.LuminousIntensityExponent = LuminousIntensityExponent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LengthExponent = tape[ptr++];\n    let MassExponent = tape[ptr++];\n    let TimeExponent = tape[ptr++];\n    let ElectricCurrentExponent = tape[ptr++];\n    let ThermodynamicTemperatureExponent = tape[ptr++];\n    let AmountOfSubstanceExponent = tape[ptr++];\n    let LuminousIntensityExponent = tape[ptr++];\n    return new IfcDimensionalExponents(expressID, type, LengthExponent, MassExponent, TimeExponent, ElectricCurrentExponent, ThermodynamicTemperatureExponent, AmountOfSubstanceExponent, LuminousIntensityExponent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LengthExponent);\n    ;\n    args.push(this.MassExponent);\n    ;\n    args.push(this.TimeExponent);\n    ;\n    args.push(this.ElectricCurrentExponent);\n    ;\n    args.push(this.ThermodynamicTemperatureExponent);\n    ;\n    args.push(this.AmountOfSubstanceExponent);\n    ;\n    args.push(this.LuminousIntensityExponent);\n    ;\n    return args;\n  }\n};\nvar IfcDirection = class {\n  constructor(expressID, type, DirectionRatios) {\n    this.expressID = expressID;\n    this.type = type;\n    this.DirectionRatios = DirectionRatios;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let DirectionRatios = tape[ptr++];\n    return new IfcDirection(expressID, type, DirectionRatios);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.DirectionRatios);\n    ;\n    return args;\n  }\n};\nvar IfcDiscreteAccessory = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDiscreteAccessory(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDiscreteAccessoryType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDiscreteAccessoryType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistanceExpression = class {\n  constructor(expressID, type, DistanceAlong, OffsetLateral, OffsetVertical, OffsetLongitudinal, AlongHorizontal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.DistanceAlong = DistanceAlong;\n    this.OffsetLateral = OffsetLateral;\n    this.OffsetVertical = OffsetVertical;\n    this.OffsetLongitudinal = OffsetLongitudinal;\n    this.AlongHorizontal = AlongHorizontal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let DistanceAlong = tape[ptr++];\n    let OffsetLateral = tape[ptr++];\n    let OffsetVertical = tape[ptr++];\n    let OffsetLongitudinal = tape[ptr++];\n    let AlongHorizontal = tape[ptr++];\n    return new IfcDistanceExpression(expressID, type, DistanceAlong, OffsetLateral, OffsetVertical, OffsetLongitudinal, AlongHorizontal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.DistanceAlong);\n    ;\n    args.push(this.OffsetLateral);\n    ;\n    args.push(this.OffsetVertical);\n    ;\n    args.push(this.OffsetLongitudinal);\n    ;\n    args.push(this.AlongHorizontal);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionChamberElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionChamberElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionChamberElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionChamberElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionCircuit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionCircuit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionControlElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDistributionControlElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionControlElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDistributionControlElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDistributionElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDistributionElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionFlowElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDistributionFlowElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionFlowElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDistributionFlowElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionPort = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, FlowDirection, PredefinedType, SystemType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.FlowDirection = FlowDirection;\n    this.PredefinedType = PredefinedType;\n    this.SystemType = SystemType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let FlowDirection = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let SystemType = tape[ptr++];\n    return new IfcDistributionPort(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, FlowDirection, PredefinedType, SystemType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.FlowDirection);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.SystemType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionSystem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionSystem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDocumentInformation = class {\n  constructor(expressID, type, Identification, Name, Description, Location, Purpose, IntendedUse, Scope, Revision, DocumentOwner, Editors, CreationTime, LastRevisionTime, ElectronicFormat, ValidFrom, ValidUntil, Confidentiality, Status) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.Location = Location;\n    this.Purpose = Purpose;\n    this.IntendedUse = IntendedUse;\n    this.Scope = Scope;\n    this.Revision = Revision;\n    this.DocumentOwner = DocumentOwner;\n    this.Editors = Editors;\n    this.CreationTime = CreationTime;\n    this.LastRevisionTime = LastRevisionTime;\n    this.ElectronicFormat = ElectronicFormat;\n    this.ValidFrom = ValidFrom;\n    this.ValidUntil = ValidUntil;\n    this.Confidentiality = Confidentiality;\n    this.Status = Status;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Location = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let IntendedUse = tape[ptr++];\n    let Scope = tape[ptr++];\n    let Revision = tape[ptr++];\n    let DocumentOwner = tape[ptr++];\n    let Editors = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let LastRevisionTime = tape[ptr++];\n    let ElectronicFormat = tape[ptr++];\n    let ValidFrom = tape[ptr++];\n    let ValidUntil = tape[ptr++];\n    let Confidentiality = tape[ptr++];\n    let Status = tape[ptr++];\n    return new IfcDocumentInformation(expressID, type, Identification, Name, Description, Location, Purpose, IntendedUse, Scope, Revision, DocumentOwner, Editors, CreationTime, LastRevisionTime, ElectronicFormat, ValidFrom, ValidUntil, Confidentiality, Status);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Location);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.IntendedUse);\n    ;\n    args.push(this.Scope);\n    ;\n    args.push(this.Revision);\n    ;\n    args.push(this.DocumentOwner);\n    ;\n    args.push(this.Editors);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.LastRevisionTime);\n    ;\n    args.push(this.ElectronicFormat);\n    ;\n    args.push(this.ValidFrom);\n    ;\n    args.push(this.ValidUntil);\n    ;\n    args.push(this.Confidentiality);\n    ;\n    args.push(this.Status);\n    ;\n    return args;\n  }\n};\nvar IfcDocumentInformationRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingDocument, RelatedDocuments, RelationshipType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingDocument = RelatingDocument;\n    this.RelatedDocuments = RelatedDocuments;\n    this.RelationshipType = RelationshipType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingDocument = tape[ptr++];\n    let RelatedDocuments = tape[ptr++];\n    let RelationshipType = tape[ptr++];\n    return new IfcDocumentInformationRelationship(expressID, type, Name, Description, RelatingDocument, RelatedDocuments, RelationshipType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingDocument);\n    ;\n    args.push(this.RelatedDocuments);\n    ;\n    args.push(this.RelationshipType);\n    ;\n    return args;\n  }\n};\nvar IfcDocumentReference = class {\n  constructor(expressID, type, Location, Identification, Name, Description, ReferencedDocument) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.ReferencedDocument = ReferencedDocument;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ReferencedDocument = tape[ptr++];\n    return new IfcDocumentReference(expressID, type, Location, Identification, Name, Description, ReferencedDocument);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ReferencedDocument);\n    ;\n    return args;\n  }\n};\nvar IfcDoor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.OperationType = OperationType;\n    this.UserDefinedOperationType = UserDefinedOperationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let UserDefinedOperationType = tape[ptr++];\n    return new IfcDoor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.UserDefinedOperationType);\n    ;\n    return args;\n  }\n};\nvar IfcDoorLiningProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, ThresholdDepth, ThresholdThickness, TransomThickness, TransomOffset, LiningOffset, ThresholdOffset, CasingThickness, CasingDepth, ShapeAspectStyle, LiningToPanelOffsetX, LiningToPanelOffsetY) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.LiningDepth = LiningDepth;\n    this.LiningThickness = LiningThickness;\n    this.ThresholdDepth = ThresholdDepth;\n    this.ThresholdThickness = ThresholdThickness;\n    this.TransomThickness = TransomThickness;\n    this.TransomOffset = TransomOffset;\n    this.LiningOffset = LiningOffset;\n    this.ThresholdOffset = ThresholdOffset;\n    this.CasingThickness = CasingThickness;\n    this.CasingDepth = CasingDepth;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n    this.LiningToPanelOffsetX = LiningToPanelOffsetX;\n    this.LiningToPanelOffsetY = LiningToPanelOffsetY;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let LiningDepth = tape[ptr++];\n    let LiningThickness = tape[ptr++];\n    let ThresholdDepth = tape[ptr++];\n    let ThresholdThickness = tape[ptr++];\n    let TransomThickness = tape[ptr++];\n    let TransomOffset = tape[ptr++];\n    let LiningOffset = tape[ptr++];\n    let ThresholdOffset = tape[ptr++];\n    let CasingThickness = tape[ptr++];\n    let CasingDepth = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    let LiningToPanelOffsetX = tape[ptr++];\n    let LiningToPanelOffsetY = tape[ptr++];\n    return new IfcDoorLiningProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, ThresholdDepth, ThresholdThickness, TransomThickness, TransomOffset, LiningOffset, ThresholdOffset, CasingThickness, CasingDepth, ShapeAspectStyle, LiningToPanelOffsetX, LiningToPanelOffsetY);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.LiningDepth);\n    ;\n    args.push(this.LiningThickness);\n    ;\n    args.push(this.ThresholdDepth);\n    ;\n    args.push(this.ThresholdThickness);\n    ;\n    args.push(this.TransomThickness);\n    ;\n    args.push(this.TransomOffset);\n    ;\n    args.push(this.LiningOffset);\n    ;\n    args.push(this.ThresholdOffset);\n    ;\n    args.push(this.CasingThickness);\n    ;\n    args.push(this.CasingDepth);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    args.push(this.LiningToPanelOffsetX);\n    ;\n    args.push(this.LiningToPanelOffsetY);\n    ;\n    return args;\n  }\n};\nvar IfcDoorPanelProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, PanelDepth, PanelOperation, PanelWidth, PanelPosition, ShapeAspectStyle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.PanelDepth = PanelDepth;\n    this.PanelOperation = PanelOperation;\n    this.PanelWidth = PanelWidth;\n    this.PanelPosition = PanelPosition;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let PanelDepth = tape[ptr++];\n    let PanelOperation = tape[ptr++];\n    let PanelWidth = tape[ptr++];\n    let PanelPosition = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    return new IfcDoorPanelProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, PanelDepth, PanelOperation, PanelWidth, PanelPosition, ShapeAspectStyle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.PanelDepth);\n    ;\n    args.push(this.PanelOperation);\n    ;\n    args.push(this.PanelWidth);\n    ;\n    args.push(this.PanelPosition);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    return args;\n  }\n};\nvar IfcDoorStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.OperationType = OperationType;\n    this.UserDefinedOperationType = UserDefinedOperationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let UserDefinedOperationType = tape[ptr++];\n    return new IfcDoorStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.UserDefinedOperationType);\n    ;\n    return args;\n  }\n};\nvar IfcDoorStyle = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, OperationType, ConstructionType, ParameterTakesPrecedence, Sizeable) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.OperationType = OperationType;\n    this.ConstructionType = ConstructionType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.Sizeable = Sizeable;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let ConstructionType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let Sizeable = tape[ptr++];\n    return new IfcDoorStyle(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, OperationType, ConstructionType, ParameterTakesPrecedence, Sizeable);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.ConstructionType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.Sizeable);\n    ;\n    return args;\n  }\n};\nvar IfcDoorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, OperationType, ParameterTakesPrecedence, UserDefinedOperationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.OperationType = OperationType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.UserDefinedOperationType = UserDefinedOperationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let UserDefinedOperationType = tape[ptr++];\n    return new IfcDoorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, OperationType, ParameterTakesPrecedence, UserDefinedOperationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.UserDefinedOperationType);\n    ;\n    return args;\n  }\n};\nvar IfcDraughtingPreDefinedColour = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcDraughtingPreDefinedColour(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcDraughtingPreDefinedCurveFont = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcDraughtingPreDefinedCurveFont(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcDuctFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSilencer = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSilencer(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSilencerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSilencerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEdge = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    return new IfcEdge(expressID, type, EdgeStart, EdgeEnd);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    return args;\n  }\n};\nvar IfcEdgeCurve = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd, EdgeGeometry, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n    this.EdgeGeometry = EdgeGeometry;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    let EdgeGeometry = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcEdgeCurve(expressID, type, EdgeStart, EdgeEnd, EdgeGeometry, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    args.push(this.EdgeGeometry);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcEdgeLoop = class {\n  constructor(expressID, type, EdgeList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeList = EdgeList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeList = tape[ptr++];\n    return new IfcEdgeLoop(expressID, type, EdgeList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeList);\n    ;\n    return args;\n  }\n};\nvar IfcElectricAppliance = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricAppliance(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricApplianceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricApplianceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricDistributionBoard = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricDistributionBoard(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricDistributionBoardType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricDistributionBoardType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricFlowStorageDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricFlowStorageDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricFlowStorageDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricFlowStorageDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricGenerator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricGenerator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricGeneratorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricGeneratorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricMotor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricMotor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricMotorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricMotorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricTimeControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricTimeControl(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricTimeControlType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricTimeControlType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcElementAssembly = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, AssemblyPlace, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.AssemblyPlace = AssemblyPlace;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let AssemblyPlace = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElementAssembly(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, AssemblyPlace, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.AssemblyPlace);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElementAssemblyType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElementAssemblyType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElementComponent = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcElementComponent(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcElementComponentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcElementComponentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcElementQuantity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, MethodOfMeasurement, Quantities) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.MethodOfMeasurement = MethodOfMeasurement;\n    this.Quantities = Quantities;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let MethodOfMeasurement = tape[ptr++];\n    let Quantities = tape[ptr++];\n    return new IfcElementQuantity(expressID, type, GlobalId, OwnerHistory, Name, Description, MethodOfMeasurement, Quantities);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.MethodOfMeasurement);\n    ;\n    args.push(this.Quantities);\n    ;\n    return args;\n  }\n};\nvar IfcElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcElementarySurface = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcElementarySurface(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcEllipse = class {\n  constructor(expressID, type, Position, SemiAxis1, SemiAxis2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.SemiAxis1 = SemiAxis1;\n    this.SemiAxis2 = SemiAxis2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let SemiAxis1 = tape[ptr++];\n    let SemiAxis2 = tape[ptr++];\n    return new IfcEllipse(expressID, type, Position, SemiAxis1, SemiAxis2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.SemiAxis1);\n    ;\n    args.push(this.SemiAxis2);\n    ;\n    return args;\n  }\n};\nvar IfcEllipseProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, SemiAxis1, SemiAxis2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.SemiAxis1 = SemiAxis1;\n    this.SemiAxis2 = SemiAxis2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let SemiAxis1 = tape[ptr++];\n    let SemiAxis2 = tape[ptr++];\n    return new IfcEllipseProfileDef(expressID, type, ProfileType, ProfileName, Position, SemiAxis1, SemiAxis2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.SemiAxis1);\n    ;\n    args.push(this.SemiAxis2);\n    ;\n    return args;\n  }\n};\nvar IfcEnergyConversionDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcEnergyConversionDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcEnergyConversionDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcEnergyConversionDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcEngine = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEngine(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEngineType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEngineType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporativeCooler = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporativeCooler(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporativeCoolerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporativeCoolerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporatorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporatorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvent = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType, EventTriggerType, UserDefinedEventTriggerType, EventOccurenceTime) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.PredefinedType = PredefinedType;\n    this.EventTriggerType = EventTriggerType;\n    this.UserDefinedEventTriggerType = UserDefinedEventTriggerType;\n    this.EventOccurenceTime = EventOccurenceTime;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let EventTriggerType = tape[ptr++];\n    let UserDefinedEventTriggerType = tape[ptr++];\n    let EventOccurenceTime = tape[ptr++];\n    return new IfcEvent(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType, EventTriggerType, UserDefinedEventTriggerType, EventOccurenceTime);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.EventTriggerType);\n    ;\n    args.push(this.UserDefinedEventTriggerType);\n    ;\n    args.push(this.EventOccurenceTime);\n    ;\n    return args;\n  }\n};\nvar IfcEventTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ActualDate, EarlyDate, LateDate, ScheduleDate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.ActualDate = ActualDate;\n    this.EarlyDate = EarlyDate;\n    this.LateDate = LateDate;\n    this.ScheduleDate = ScheduleDate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let ActualDate = tape[ptr++];\n    let EarlyDate = tape[ptr++];\n    let LateDate = tape[ptr++];\n    let ScheduleDate = tape[ptr++];\n    return new IfcEventTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ActualDate, EarlyDate, LateDate, ScheduleDate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.ActualDate);\n    ;\n    args.push(this.EarlyDate);\n    ;\n    args.push(this.LateDate);\n    ;\n    args.push(this.ScheduleDate);\n    ;\n    return args;\n  }\n};\nvar IfcEventType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, EventTriggerType, UserDefinedEventTriggerType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n    this.PredefinedType = PredefinedType;\n    this.EventTriggerType = EventTriggerType;\n    this.UserDefinedEventTriggerType = UserDefinedEventTriggerType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let EventTriggerType = tape[ptr++];\n    let UserDefinedEventTriggerType = tape[ptr++];\n    return new IfcEventType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, EventTriggerType, UserDefinedEventTriggerType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.EventTriggerType);\n    ;\n    args.push(this.UserDefinedEventTriggerType);\n    ;\n    return args;\n  }\n};\nvar IfcExtendedProperties = class {\n  constructor(expressID, type, Name, Description, Properties2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Properties = Properties2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Properties2 = tape[ptr++];\n    return new IfcExtendedProperties(expressID, type, Name, Description, Properties2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Properties);\n    ;\n    return args;\n  }\n};\nvar IfcExternalInformation = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcExternalInformation(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcExternalReference = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternalReference(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExternalReferenceRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingReference, RelatedResourceObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingReference = RelatingReference;\n    this.RelatedResourceObjects = RelatedResourceObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingReference = tape[ptr++];\n    let RelatedResourceObjects = tape[ptr++];\n    return new IfcExternalReferenceRelationship(expressID, type, Name, Description, RelatingReference, RelatedResourceObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingReference);\n    ;\n    args.push(this.RelatedResourceObjects);\n    ;\n    return args;\n  }\n};\nvar IfcExternalSpatialElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcExternalSpatialElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcExternalSpatialStructureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcExternalSpatialStructureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcExternallyDefinedHatchStyle = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternallyDefinedHatchStyle(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExternallyDefinedSurfaceStyle = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternallyDefinedSurfaceStyle(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExternallyDefinedTextFont = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternallyDefinedTextFont(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExtrudedAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, ExtrudedDirection, Depth) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.ExtrudedDirection = ExtrudedDirection;\n    this.Depth = Depth;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let ExtrudedDirection = tape[ptr++];\n    let Depth = tape[ptr++];\n    return new IfcExtrudedAreaSolid(expressID, type, SweptArea, Position, ExtrudedDirection, Depth);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ExtrudedDirection);\n    ;\n    args.push(this.Depth);\n    ;\n    return args;\n  }\n};\nvar IfcExtrudedAreaSolidTapered = class {\n  constructor(expressID, type, SweptArea, Position, ExtrudedDirection, Depth, EndSweptArea) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.ExtrudedDirection = ExtrudedDirection;\n    this.Depth = Depth;\n    this.EndSweptArea = EndSweptArea;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let ExtrudedDirection = tape[ptr++];\n    let Depth = tape[ptr++];\n    let EndSweptArea = tape[ptr++];\n    return new IfcExtrudedAreaSolidTapered(expressID, type, SweptArea, Position, ExtrudedDirection, Depth, EndSweptArea);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ExtrudedDirection);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.EndSweptArea);\n    ;\n    return args;\n  }\n};\nvar IfcFace = class {\n  constructor(expressID, type, Bounds) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bounds = Bounds;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bounds = tape[ptr++];\n    return new IfcFace(expressID, type, Bounds);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bounds);\n    ;\n    return args;\n  }\n};\nvar IfcFaceBasedSurfaceModel = class {\n  constructor(expressID, type, FbsmFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.FbsmFaces = FbsmFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let FbsmFaces = tape[ptr++];\n    return new IfcFaceBasedSurfaceModel(expressID, type, FbsmFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.FbsmFaces);\n    ;\n    return args;\n  }\n};\nvar IfcFaceBound = class {\n  constructor(expressID, type, Bound, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bound = Bound;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bound = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcFaceBound(expressID, type, Bound, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bound);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcFaceOuterBound = class {\n  constructor(expressID, type, Bound, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bound = Bound;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bound = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcFaceOuterBound(expressID, type, Bound, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bound);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcFaceSurface = class {\n  constructor(expressID, type, Bounds, FaceSurface, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bounds = Bounds;\n    this.FaceSurface = FaceSurface;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bounds = tape[ptr++];\n    let FaceSurface = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcFaceSurface(expressID, type, Bounds, FaceSurface, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bounds);\n    ;\n    args.push(this.FaceSurface);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcFacetedBrep = class {\n  constructor(expressID, type, Outer) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    return new IfcFacetedBrep(expressID, type, Outer);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    return args;\n  }\n};\nvar IfcFacetedBrepWithVoids = class {\n  constructor(expressID, type, Outer, Voids) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n    this.Voids = Voids;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    let Voids = tape[ptr++];\n    return new IfcFacetedBrepWithVoids(expressID, type, Outer, Voids);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    args.push(this.Voids);\n    ;\n    return args;\n  }\n};\nvar IfcFacility = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    return new IfcFacility(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    return args;\n  }\n};\nvar IfcFacilityPart = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    return new IfcFacilityPart(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    return args;\n  }\n};\nvar IfcFailureConnectionCondition = class {\n  constructor(expressID, type, Name, TensionFailureX, TensionFailureY, TensionFailureZ, CompressionFailureX, CompressionFailureY, CompressionFailureZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TensionFailureX = TensionFailureX;\n    this.TensionFailureY = TensionFailureY;\n    this.TensionFailureZ = TensionFailureZ;\n    this.CompressionFailureX = CompressionFailureX;\n    this.CompressionFailureY = CompressionFailureY;\n    this.CompressionFailureZ = CompressionFailureZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TensionFailureX = tape[ptr++];\n    let TensionFailureY = tape[ptr++];\n    let TensionFailureZ = tape[ptr++];\n    let CompressionFailureX = tape[ptr++];\n    let CompressionFailureY = tape[ptr++];\n    let CompressionFailureZ = tape[ptr++];\n    return new IfcFailureConnectionCondition(expressID, type, Name, TensionFailureX, TensionFailureY, TensionFailureZ, CompressionFailureX, CompressionFailureY, CompressionFailureZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TensionFailureX);\n    ;\n    args.push(this.TensionFailureY);\n    ;\n    args.push(this.TensionFailureZ);\n    ;\n    args.push(this.CompressionFailureX);\n    ;\n    args.push(this.CompressionFailureY);\n    ;\n    args.push(this.CompressionFailureZ);\n    ;\n    return args;\n  }\n};\nvar IfcFan = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFan(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFanType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFanType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFastener = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFastener(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFastenerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFastenerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFeatureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFeatureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFeatureElementAddition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFeatureElementAddition(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFeatureElementSubtraction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFeatureElementSubtraction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFillAreaStyle = class {\n  constructor(expressID, type, Name, FillStyles, ModelorDraughting) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.FillStyles = FillStyles;\n    this.ModelorDraughting = ModelorDraughting;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let FillStyles = tape[ptr++];\n    let ModelorDraughting = tape[ptr++];\n    return new IfcFillAreaStyle(expressID, type, Name, FillStyles, ModelorDraughting);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.FillStyles);\n    ;\n    args.push(this.ModelorDraughting);\n    ;\n    return args;\n  }\n};\nvar IfcFillAreaStyleHatching = class {\n  constructor(expressID, type, HatchLineAppearance, StartOfNextHatchLine, PointOfReferenceHatchLine, PatternStart, HatchLineAngle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.HatchLineAppearance = HatchLineAppearance;\n    this.StartOfNextHatchLine = StartOfNextHatchLine;\n    this.PointOfReferenceHatchLine = PointOfReferenceHatchLine;\n    this.PatternStart = PatternStart;\n    this.HatchLineAngle = HatchLineAngle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let HatchLineAppearance = tape[ptr++];\n    let StartOfNextHatchLine = tape[ptr++];\n    let PointOfReferenceHatchLine = tape[ptr++];\n    let PatternStart = tape[ptr++];\n    let HatchLineAngle = tape[ptr++];\n    return new IfcFillAreaStyleHatching(expressID, type, HatchLineAppearance, StartOfNextHatchLine, PointOfReferenceHatchLine, PatternStart, HatchLineAngle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.HatchLineAppearance);\n    ;\n    args.push(this.StartOfNextHatchLine);\n    ;\n    args.push(this.PointOfReferenceHatchLine);\n    ;\n    args.push(this.PatternStart);\n    ;\n    args.push(this.HatchLineAngle);\n    ;\n    return args;\n  }\n};\nvar IfcFillAreaStyleTiles = class {\n  constructor(expressID, type, TilingPattern, Tiles, TilingScale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TilingPattern = TilingPattern;\n    this.Tiles = Tiles;\n    this.TilingScale = TilingScale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TilingPattern = tape[ptr++];\n    let Tiles = tape[ptr++];\n    let TilingScale = tape[ptr++];\n    return new IfcFillAreaStyleTiles(expressID, type, TilingPattern, Tiles, TilingScale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TilingPattern);\n    ;\n    args.push(this.Tiles);\n    ;\n    args.push(this.TilingScale);\n    ;\n    return args;\n  }\n};\nvar IfcFilter = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFilter(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFilterType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFilterType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFireSuppressionTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFireSuppressionTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFireSuppressionTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFireSuppressionTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFixedReferenceSweptAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, FixedReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Directrix = Directrix;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n    this.FixedReference = FixedReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Directrix = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    let FixedReference = tape[ptr++];\n    return new IfcFixedReferenceSweptAreaSolid(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, FixedReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Directrix);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    args.push(this.FixedReference);\n    ;\n    return args;\n  }\n};\nvar IfcFlowController = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowController(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowControllerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowControllerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowInstrument = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowInstrument(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowInstrumentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowInstrumentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMeter = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowMeter(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMeterType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowMeterType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMovingDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowMovingDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMovingDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowMovingDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowStorageDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowStorageDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowStorageDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowStorageDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTreatmentDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowTreatmentDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTreatmentDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowTreatmentDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFooting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFooting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFootingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFootingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFurnishingElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFurnishingElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFurnishingElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFurnishingElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFurniture = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFurniture(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFurnitureType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, AssemblyPlace, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.AssemblyPlace = AssemblyPlace;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let AssemblyPlace = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFurnitureType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, AssemblyPlace, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.AssemblyPlace);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGeographicElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcGeographicElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGeographicElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcGeographicElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricCurveSet = class {\n  constructor(expressID, type, Elements) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Elements = Elements;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Elements = tape[ptr++];\n    return new IfcGeometricCurveSet(expressID, type, Elements);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Elements);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricRepresentationContext = class {\n  constructor(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextIdentifier = ContextIdentifier;\n    this.ContextType = ContextType;\n    this.CoordinateSpaceDimension = CoordinateSpaceDimension;\n    this.Precision = Precision;\n    this.WorldCoordinateSystem = WorldCoordinateSystem;\n    this.TrueNorth = TrueNorth;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextIdentifier = tape[ptr++];\n    let ContextType = tape[ptr++];\n    let CoordinateSpaceDimension = tape[ptr++];\n    let Precision = tape[ptr++];\n    let WorldCoordinateSystem = tape[ptr++];\n    let TrueNorth = tape[ptr++];\n    return new IfcGeometricRepresentationContext(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextIdentifier);\n    ;\n    args.push(this.ContextType);\n    ;\n    args.push(this.CoordinateSpaceDimension);\n    ;\n    args.push(this.Precision);\n    ;\n    args.push(this.WorldCoordinateSystem);\n    ;\n    args.push(this.TrueNorth);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricRepresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcGeometricRepresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcGeometricRepresentationSubContext = class {\n  constructor(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth, ParentContext, TargetScale, TargetView, UserDefinedTargetView) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextIdentifier = ContextIdentifier;\n    this.ContextType = ContextType;\n    this.CoordinateSpaceDimension = CoordinateSpaceDimension;\n    this.Precision = Precision;\n    this.WorldCoordinateSystem = WorldCoordinateSystem;\n    this.TrueNorth = TrueNorth;\n    this.ParentContext = ParentContext;\n    this.TargetScale = TargetScale;\n    this.TargetView = TargetView;\n    this.UserDefinedTargetView = UserDefinedTargetView;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextIdentifier = tape[ptr++];\n    let ContextType = tape[ptr++];\n    let CoordinateSpaceDimension = tape[ptr++];\n    let Precision = tape[ptr++];\n    let WorldCoordinateSystem = tape[ptr++];\n    let TrueNorth = tape[ptr++];\n    let ParentContext = tape[ptr++];\n    let TargetScale = tape[ptr++];\n    let TargetView = tape[ptr++];\n    let UserDefinedTargetView = tape[ptr++];\n    return new IfcGeometricRepresentationSubContext(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth, ParentContext, TargetScale, TargetView, UserDefinedTargetView);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextIdentifier);\n    ;\n    args.push(this.ContextType);\n    ;\n    args.push(this.CoordinateSpaceDimension);\n    ;\n    args.push(this.Precision);\n    ;\n    args.push(this.WorldCoordinateSystem);\n    ;\n    args.push(this.TrueNorth);\n    ;\n    args.push(this.ParentContext);\n    ;\n    args.push(this.TargetScale);\n    ;\n    args.push(this.TargetView);\n    ;\n    args.push(this.UserDefinedTargetView);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricSet = class {\n  constructor(expressID, type, Elements) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Elements = Elements;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Elements = tape[ptr++];\n    return new IfcGeometricSet(expressID, type, Elements);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Elements);\n    ;\n    return args;\n  }\n};\nvar IfcGrid = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, UAxes, VAxes, WAxes, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.UAxes = UAxes;\n    this.VAxes = VAxes;\n    this.WAxes = WAxes;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let UAxes = tape[ptr++];\n    let VAxes = tape[ptr++];\n    let WAxes = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcGrid(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, UAxes, VAxes, WAxes, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.UAxes);\n    ;\n    args.push(this.VAxes);\n    ;\n    args.push(this.WAxes);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGridAxis = class {\n  constructor(expressID, type, AxisTag, AxisCurve, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.AxisTag = AxisTag;\n    this.AxisCurve = AxisCurve;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let AxisTag = tape[ptr++];\n    let AxisCurve = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcGridAxis(expressID, type, AxisTag, AxisCurve, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.AxisTag);\n    ;\n    args.push(this.AxisCurve);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcGridPlacement = class {\n  constructor(expressID, type, PlacementRelTo, PlacementLocation, PlacementRefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n    this.PlacementLocation = PlacementLocation;\n    this.PlacementRefDirection = PlacementRefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    let PlacementLocation = tape[ptr++];\n    let PlacementRefDirection = tape[ptr++];\n    return new IfcGridPlacement(expressID, type, PlacementRelTo, PlacementLocation, PlacementRefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    args.push(this.PlacementLocation);\n    ;\n    args.push(this.PlacementRefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    return new IfcGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    return args;\n  }\n};\nvar IfcHalfSpaceSolid = class {\n  constructor(expressID, type, BaseSurface, AgreementFlag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BaseSurface = BaseSurface;\n    this.AgreementFlag = AgreementFlag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BaseSurface = tape[ptr++];\n    let AgreementFlag = tape[ptr++];\n    return new IfcHalfSpaceSolid(expressID, type, BaseSurface, AgreementFlag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BaseSurface);\n    ;\n    args.push(this.AgreementFlag);\n    ;\n    return args;\n  }\n};\nvar IfcHeatExchanger = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHeatExchanger(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcHeatExchangerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHeatExchangerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcHumidifier = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHumidifier(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcHumidifierType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHumidifierType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcIShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, OverallWidth, OverallDepth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, FlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.OverallWidth = OverallWidth;\n    this.OverallDepth = OverallDepth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.FlangeEdgeRadius = FlangeEdgeRadius;\n    this.FlangeSlope = FlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let OverallDepth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let FlangeEdgeRadius = tape[ptr++];\n    let FlangeSlope = tape[ptr++];\n    return new IfcIShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, OverallWidth, OverallDepth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, FlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.OverallDepth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.FlangeEdgeRadius);\n    ;\n    args.push(this.FlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcImageTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, URLReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n    this.URLReference = URLReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    let URLReference = tape[ptr++];\n    return new IfcImageTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, URLReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    args.push(this.URLReference);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedColourMap = class {\n  constructor(expressID, type, MappedTo, Opacity, Colours, ColourIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MappedTo = MappedTo;\n    this.Opacity = Opacity;\n    this.Colours = Colours;\n    this.ColourIndex = ColourIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MappedTo = tape[ptr++];\n    let Opacity = tape[ptr++];\n    let Colours = tape[ptr++];\n    let ColourIndex = tape[ptr++];\n    return new IfcIndexedColourMap(expressID, type, MappedTo, Opacity, Colours, ColourIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MappedTo);\n    ;\n    args.push(this.Opacity);\n    ;\n    args.push(this.Colours);\n    ;\n    args.push(this.ColourIndex);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedPolyCurve = class {\n  constructor(expressID, type, Points, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Points = Points;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Points = tape[ptr++];\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcIndexedPolyCurve(expressID, type, Points, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Points);\n    ;\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedPolygonalFace = class {\n  constructor(expressID, type, CoordIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordIndex = CoordIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordIndex = tape[ptr++];\n    return new IfcIndexedPolygonalFace(expressID, type, CoordIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordIndex);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedPolygonalFaceWithVoids = class {\n  constructor(expressID, type, CoordIndex, InnerCoordIndices) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordIndex = CoordIndex;\n    this.InnerCoordIndices = InnerCoordIndices;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordIndex = tape[ptr++];\n    let InnerCoordIndices = tape[ptr++];\n    return new IfcIndexedPolygonalFaceWithVoids(expressID, type, CoordIndex, InnerCoordIndices);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordIndex);\n    ;\n    args.push(this.InnerCoordIndices);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedTextureMap = class {\n  constructor(expressID, type, Maps, MappedTo, TexCoords) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.MappedTo = MappedTo;\n    this.TexCoords = TexCoords;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let MappedTo = tape[ptr++];\n    let TexCoords = tape[ptr++];\n    return new IfcIndexedTextureMap(expressID, type, Maps, MappedTo, TexCoords);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.MappedTo);\n    ;\n    args.push(this.TexCoords);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedTriangleTextureMap = class {\n  constructor(expressID, type, Maps, MappedTo, TexCoords, TexCoordIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.MappedTo = MappedTo;\n    this.TexCoords = TexCoords;\n    this.TexCoordIndex = TexCoordIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let MappedTo = tape[ptr++];\n    let TexCoords = tape[ptr++];\n    let TexCoordIndex = tape[ptr++];\n    return new IfcIndexedTriangleTextureMap(expressID, type, Maps, MappedTo, TexCoords, TexCoordIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.MappedTo);\n    ;\n    args.push(this.TexCoords);\n    ;\n    args.push(this.TexCoordIndex);\n    ;\n    return args;\n  }\n};\nvar IfcInterceptor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcInterceptor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcInterceptorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcInterceptorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcIntersectionCurve = class {\n  constructor(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Curve3D = Curve3D;\n    this.AssociatedGeometry = AssociatedGeometry;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Curve3D = tape[ptr++];\n    let AssociatedGeometry = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcIntersectionCurve(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Curve3D);\n    ;\n    args.push(this.AssociatedGeometry);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcInventory = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, Jurisdiction, ResponsiblePersons, LastUpdateDate, CurrentValue, OriginalValue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.Jurisdiction = Jurisdiction;\n    this.ResponsiblePersons = ResponsiblePersons;\n    this.LastUpdateDate = LastUpdateDate;\n    this.CurrentValue = CurrentValue;\n    this.OriginalValue = OriginalValue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Jurisdiction = tape[ptr++];\n    let ResponsiblePersons = tape[ptr++];\n    let LastUpdateDate = tape[ptr++];\n    let CurrentValue = tape[ptr++];\n    let OriginalValue = tape[ptr++];\n    return new IfcInventory(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, Jurisdiction, ResponsiblePersons, LastUpdateDate, CurrentValue, OriginalValue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Jurisdiction);\n    ;\n    args.push(this.ResponsiblePersons);\n    ;\n    args.push(this.LastUpdateDate);\n    ;\n    args.push(this.CurrentValue);\n    ;\n    args.push(this.OriginalValue);\n    ;\n    return args;\n  }\n};\nvar IfcIrregularTimeSeries = class {\n  constructor(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, Values) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n    this.TimeSeriesDataType = TimeSeriesDataType;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.Unit = Unit;\n    this.Values = Values;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    let TimeSeriesDataType = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let Unit = tape[ptr++];\n    let Values = tape[ptr++];\n    return new IfcIrregularTimeSeries(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, Values);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    args.push(this.TimeSeriesDataType);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.Values);\n    ;\n    return args;\n  }\n};\nvar IfcIrregularTimeSeriesValue = class {\n  constructor(expressID, type, TimeStamp, ListValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TimeStamp = TimeStamp;\n    this.ListValues = ListValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TimeStamp = tape[ptr++];\n    let ListValues = tape[ptr++];\n    return new IfcIrregularTimeSeriesValue(expressID, type, TimeStamp, ListValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TimeStamp);\n    ;\n    args.push(this.ListValues);\n    ;\n    return args;\n  }\n};\nvar IfcJunctionBox = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcJunctionBox(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcJunctionBoxType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcJunctionBoxType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, Width, Thickness, FilletRadius, EdgeRadius, LegSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.Width = Width;\n    this.Thickness = Thickness;\n    this.FilletRadius = FilletRadius;\n    this.EdgeRadius = EdgeRadius;\n    this.LegSlope = LegSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let Width = tape[ptr++];\n    let Thickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let EdgeRadius = tape[ptr++];\n    let LegSlope = tape[ptr++];\n    return new IfcLShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, Width, Thickness, FilletRadius, EdgeRadius, LegSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.Width);\n    ;\n    args.push(this.Thickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.EdgeRadius);\n    ;\n    args.push(this.LegSlope);\n    ;\n    return args;\n  }\n};\nvar IfcLaborResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLaborResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLaborResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLaborResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLagTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, LagValue, DurationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.LagValue = LagValue;\n    this.DurationType = DurationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let LagValue = tape[ptr++];\n    let DurationType = tape[ptr++];\n    return new IfcLagTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, LagValue, DurationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.LagValue);\n    ;\n    args.push(this.DurationType);\n    ;\n    return args;\n  }\n};\nvar IfcLamp = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLamp(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLampType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLampType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLibraryInformation = class {\n  constructor(expressID, type, Name, Version, Publisher, VersionDate, Location, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Version = Version;\n    this.Publisher = Publisher;\n    this.VersionDate = VersionDate;\n    this.Location = Location;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Version = tape[ptr++];\n    let Publisher = tape[ptr++];\n    let VersionDate = tape[ptr++];\n    let Location = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcLibraryInformation(expressID, type, Name, Version, Publisher, VersionDate, Location, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Version);\n    ;\n    args.push(this.Publisher);\n    ;\n    args.push(this.VersionDate);\n    ;\n    args.push(this.Location);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcLibraryReference = class {\n  constructor(expressID, type, Location, Identification, Name, Description, Language, ReferencedLibrary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.Language = Language;\n    this.ReferencedLibrary = ReferencedLibrary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Language = tape[ptr++];\n    let ReferencedLibrary = tape[ptr++];\n    return new IfcLibraryReference(expressID, type, Location, Identification, Name, Description, Language, ReferencedLibrary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Language);\n    ;\n    args.push(this.ReferencedLibrary);\n    ;\n    return args;\n  }\n};\nvar IfcLightDistributionData = class {\n  constructor(expressID, type, MainPlaneAngle, SecondaryPlaneAngle, LuminousIntensity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MainPlaneAngle = MainPlaneAngle;\n    this.SecondaryPlaneAngle = SecondaryPlaneAngle;\n    this.LuminousIntensity = LuminousIntensity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MainPlaneAngle = tape[ptr++];\n    let SecondaryPlaneAngle = tape[ptr++];\n    let LuminousIntensity = tape[ptr++];\n    return new IfcLightDistributionData(expressID, type, MainPlaneAngle, SecondaryPlaneAngle, LuminousIntensity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MainPlaneAngle);\n    ;\n    args.push(this.SecondaryPlaneAngle);\n    ;\n    args.push(this.LuminousIntensity);\n    ;\n    return args;\n  }\n};\nvar IfcLightFixture = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLightFixture(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLightFixtureType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLightFixtureType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLightIntensityDistribution = class {\n  constructor(expressID, type, LightDistributionCurve, DistributionData) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LightDistributionCurve = LightDistributionCurve;\n    this.DistributionData = DistributionData;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LightDistributionCurve = tape[ptr++];\n    let DistributionData = tape[ptr++];\n    return new IfcLightIntensityDistribution(expressID, type, LightDistributionCurve, DistributionData);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LightDistributionCurve);\n    ;\n    args.push(this.DistributionData);\n    ;\n    return args;\n  }\n};\nvar IfcLightSource = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    return new IfcLightSource(expressID, type, Name, LightColour, AmbientIntensity, Intensity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceAmbient = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    return new IfcLightSourceAmbient(expressID, type, Name, LightColour, AmbientIntensity, Intensity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceDirectional = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcLightSourceDirectional(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceGoniometric = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, ColourAppearance, ColourTemperature, LuminousFlux, LightEmissionSource, LightDistributionDataSource) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Position = Position;\n    this.ColourAppearance = ColourAppearance;\n    this.ColourTemperature = ColourTemperature;\n    this.LuminousFlux = LuminousFlux;\n    this.LightEmissionSource = LightEmissionSource;\n    this.LightDistributionDataSource = LightDistributionDataSource;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Position = tape[ptr++];\n    let ColourAppearance = tape[ptr++];\n    let ColourTemperature = tape[ptr++];\n    let LuminousFlux = tape[ptr++];\n    let LightEmissionSource = tape[ptr++];\n    let LightDistributionDataSource = tape[ptr++];\n    return new IfcLightSourceGoniometric(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, ColourAppearance, ColourTemperature, LuminousFlux, LightEmissionSource, LightDistributionDataSource);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ColourAppearance);\n    ;\n    args.push(this.ColourTemperature);\n    ;\n    args.push(this.LuminousFlux);\n    ;\n    args.push(this.LightEmissionSource);\n    ;\n    args.push(this.LightDistributionDataSource);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourcePositional = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Position = Position;\n    this.Radius = Radius;\n    this.ConstantAttenuation = ConstantAttenuation;\n    this.DistanceAttenuation = DistanceAttenuation;\n    this.QuadricAttenuation = QuadricAttenuation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    let ConstantAttenuation = tape[ptr++];\n    let DistanceAttenuation = tape[ptr++];\n    let QuadricAttenuation = tape[ptr++];\n    return new IfcLightSourcePositional(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.ConstantAttenuation);\n    ;\n    args.push(this.DistanceAttenuation);\n    ;\n    args.push(this.QuadricAttenuation);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceSpot = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation, Orientation, ConcentrationExponent, SpreadAngle, BeamWidthAngle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Position = Position;\n    this.Radius = Radius;\n    this.ConstantAttenuation = ConstantAttenuation;\n    this.DistanceAttenuation = DistanceAttenuation;\n    this.QuadricAttenuation = QuadricAttenuation;\n    this.Orientation = Orientation;\n    this.ConcentrationExponent = ConcentrationExponent;\n    this.SpreadAngle = SpreadAngle;\n    this.BeamWidthAngle = BeamWidthAngle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    let ConstantAttenuation = tape[ptr++];\n    let DistanceAttenuation = tape[ptr++];\n    let QuadricAttenuation = tape[ptr++];\n    let Orientation = tape[ptr++];\n    let ConcentrationExponent = tape[ptr++];\n    let SpreadAngle = tape[ptr++];\n    let BeamWidthAngle = tape[ptr++];\n    return new IfcLightSourceSpot(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation, Orientation, ConcentrationExponent, SpreadAngle, BeamWidthAngle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.ConstantAttenuation);\n    ;\n    args.push(this.DistanceAttenuation);\n    ;\n    args.push(this.QuadricAttenuation);\n    ;\n    args.push(this.Orientation);\n    ;\n    args.push(this.ConcentrationExponent);\n    ;\n    args.push(this.SpreadAngle);\n    ;\n    args.push(this.BeamWidthAngle);\n    ;\n    return args;\n  }\n};\nvar IfcLine = class {\n  constructor(expressID, type, Pnt, Dir) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Pnt = Pnt;\n    this.Dir = Dir;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Pnt = tape[ptr++];\n    let Dir = tape[ptr++];\n    return new IfcLine(expressID, type, Pnt, Dir);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Pnt);\n    ;\n    args.push(this.Dir);\n    ;\n    return args;\n  }\n};\nvar IfcLineSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    return new IfcLineSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    return args;\n  }\n};\nvar IfcLinearPlacement = class {\n  constructor(expressID, type, PlacementRelTo, PlacementMeasuredAlong, Distance, Orientation, CartesianPosition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n    this.PlacementMeasuredAlong = PlacementMeasuredAlong;\n    this.Distance = Distance;\n    this.Orientation = Orientation;\n    this.CartesianPosition = CartesianPosition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    let PlacementMeasuredAlong = tape[ptr++];\n    let Distance = tape[ptr++];\n    let Orientation = tape[ptr++];\n    let CartesianPosition = tape[ptr++];\n    return new IfcLinearPlacement(expressID, type, PlacementRelTo, PlacementMeasuredAlong, Distance, Orientation, CartesianPosition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    args.push(this.PlacementMeasuredAlong);\n    ;\n    args.push(this.Distance);\n    ;\n    args.push(this.Orientation);\n    ;\n    args.push(this.CartesianPosition);\n    ;\n    return args;\n  }\n};\nvar IfcLinearPositioningElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcLinearPositioningElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcLocalPlacement = class {\n  constructor(expressID, type, PlacementRelTo, RelativePlacement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n    this.RelativePlacement = RelativePlacement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    let RelativePlacement = tape[ptr++];\n    return new IfcLocalPlacement(expressID, type, PlacementRelTo, RelativePlacement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    args.push(this.RelativePlacement);\n    ;\n    return args;\n  }\n};\nvar IfcLoop = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcLoop(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcManifoldSolidBrep = class {\n  constructor(expressID, type, Outer) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    return new IfcManifoldSolidBrep(expressID, type, Outer);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    return args;\n  }\n};\nvar IfcMapConversion = class {\n  constructor(expressID, type, SourceCRS, TargetCRS, Eastings, Northings, OrthogonalHeight, XAxisAbscissa, XAxisOrdinate, Scale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SourceCRS = SourceCRS;\n    this.TargetCRS = TargetCRS;\n    this.Eastings = Eastings;\n    this.Northings = Northings;\n    this.OrthogonalHeight = OrthogonalHeight;\n    this.XAxisAbscissa = XAxisAbscissa;\n    this.XAxisOrdinate = XAxisOrdinate;\n    this.Scale = Scale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SourceCRS = tape[ptr++];\n    let TargetCRS = tape[ptr++];\n    let Eastings = tape[ptr++];\n    let Northings = tape[ptr++];\n    let OrthogonalHeight = tape[ptr++];\n    let XAxisAbscissa = tape[ptr++];\n    let XAxisOrdinate = tape[ptr++];\n    let Scale = tape[ptr++];\n    return new IfcMapConversion(expressID, type, SourceCRS, TargetCRS, Eastings, Northings, OrthogonalHeight, XAxisAbscissa, XAxisOrdinate, Scale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SourceCRS);\n    ;\n    args.push(this.TargetCRS);\n    ;\n    args.push(this.Eastings);\n    ;\n    args.push(this.Northings);\n    ;\n    args.push(this.OrthogonalHeight);\n    ;\n    args.push(this.XAxisAbscissa);\n    ;\n    args.push(this.XAxisOrdinate);\n    ;\n    args.push(this.Scale);\n    ;\n    return args;\n  }\n};\nvar IfcMappedItem = class {\n  constructor(expressID, type, MappingSource, MappingTarget) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MappingSource = MappingSource;\n    this.MappingTarget = MappingTarget;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MappingSource = tape[ptr++];\n    let MappingTarget = tape[ptr++];\n    return new IfcMappedItem(expressID, type, MappingSource, MappingTarget);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MappingSource);\n    ;\n    args.push(this.MappingTarget);\n    ;\n    return args;\n  }\n};\nvar IfcMaterial = class {\n  constructor(expressID, type, Name, Description, Category) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Category = Category;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Category = tape[ptr++];\n    return new IfcMaterial(expressID, type, Name, Description, Category);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Category);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialClassificationRelationship = class {\n  constructor(expressID, type, MaterialClassifications, ClassifiedMaterial) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MaterialClassifications = MaterialClassifications;\n    this.ClassifiedMaterial = ClassifiedMaterial;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MaterialClassifications = tape[ptr++];\n    let ClassifiedMaterial = tape[ptr++];\n    return new IfcMaterialClassificationRelationship(expressID, type, MaterialClassifications, ClassifiedMaterial);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MaterialClassifications);\n    ;\n    args.push(this.ClassifiedMaterial);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialConstituent = class {\n  constructor(expressID, type, Name, Description, Material, Fraction, Category) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Material = Material;\n    this.Fraction = Fraction;\n    this.Category = Category;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Material = tape[ptr++];\n    let Fraction = tape[ptr++];\n    let Category = tape[ptr++];\n    return new IfcMaterialConstituent(expressID, type, Name, Description, Material, Fraction, Category);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Material);\n    ;\n    args.push(this.Fraction);\n    ;\n    args.push(this.Category);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialConstituentSet = class {\n  constructor(expressID, type, Name, Description, MaterialConstituents) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.MaterialConstituents = MaterialConstituents;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let MaterialConstituents = tape[ptr++];\n    return new IfcMaterialConstituentSet(expressID, type, Name, Description, MaterialConstituents);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.MaterialConstituents);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialDefinition = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcMaterialDefinition(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcMaterialDefinitionRepresentation = class {\n  constructor(expressID, type, Name, Description, Representations, RepresentedMaterial) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Representations = Representations;\n    this.RepresentedMaterial = RepresentedMaterial;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Representations = tape[ptr++];\n    let RepresentedMaterial = tape[ptr++];\n    return new IfcMaterialDefinitionRepresentation(expressID, type, Name, Description, Representations, RepresentedMaterial);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Representations);\n    ;\n    args.push(this.RepresentedMaterial);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayer = class {\n  constructor(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Material = Material;\n    this.LayerThickness = LayerThickness;\n    this.IsVentilated = IsVentilated;\n    this.Name = Name;\n    this.Description = Description;\n    this.Category = Category;\n    this.Priority = Priority;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Material = tape[ptr++];\n    let LayerThickness = tape[ptr++];\n    let IsVentilated = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Category = tape[ptr++];\n    let Priority = tape[ptr++];\n    return new IfcMaterialLayer(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Material);\n    ;\n    args.push(this.LayerThickness);\n    ;\n    args.push(this.IsVentilated);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Priority);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayerSet = class {\n  constructor(expressID, type, MaterialLayers, LayerSetName, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MaterialLayers = MaterialLayers;\n    this.LayerSetName = LayerSetName;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MaterialLayers = tape[ptr++];\n    let LayerSetName = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcMaterialLayerSet(expressID, type, MaterialLayers, LayerSetName, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MaterialLayers);\n    ;\n    args.push(this.LayerSetName);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayerSetUsage = class {\n  constructor(expressID, type, ForLayerSet, LayerSetDirection, DirectionSense, OffsetFromReferenceLine, ReferenceExtent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ForLayerSet = ForLayerSet;\n    this.LayerSetDirection = LayerSetDirection;\n    this.DirectionSense = DirectionSense;\n    this.OffsetFromReferenceLine = OffsetFromReferenceLine;\n    this.ReferenceExtent = ReferenceExtent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ForLayerSet = tape[ptr++];\n    let LayerSetDirection = tape[ptr++];\n    let DirectionSense = tape[ptr++];\n    let OffsetFromReferenceLine = tape[ptr++];\n    let ReferenceExtent = tape[ptr++];\n    return new IfcMaterialLayerSetUsage(expressID, type, ForLayerSet, LayerSetDirection, DirectionSense, OffsetFromReferenceLine, ReferenceExtent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ForLayerSet);\n    ;\n    args.push(this.LayerSetDirection);\n    ;\n    args.push(this.DirectionSense);\n    ;\n    args.push(this.OffsetFromReferenceLine);\n    ;\n    args.push(this.ReferenceExtent);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayerWithOffsets = class {\n  constructor(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority, OffsetDirection, OffsetValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Material = Material;\n    this.LayerThickness = LayerThickness;\n    this.IsVentilated = IsVentilated;\n    this.Name = Name;\n    this.Description = Description;\n    this.Category = Category;\n    this.Priority = Priority;\n    this.OffsetDirection = OffsetDirection;\n    this.OffsetValues = OffsetValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Material = tape[ptr++];\n    let LayerThickness = tape[ptr++];\n    let IsVentilated = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Category = tape[ptr++];\n    let Priority = tape[ptr++];\n    let OffsetDirection = tape[ptr++];\n    let OffsetValues = tape[ptr++];\n    return new IfcMaterialLayerWithOffsets(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority, OffsetDirection, OffsetValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Material);\n    ;\n    args.push(this.LayerThickness);\n    ;\n    args.push(this.IsVentilated);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.OffsetDirection);\n    ;\n    args.push(this.OffsetValues);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialList = class {\n  constructor(expressID, type, Materials) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Materials = Materials;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Materials = tape[ptr++];\n    return new IfcMaterialList(expressID, type, Materials);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Materials);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfile = class {\n  constructor(expressID, type, Name, Description, Material, Profile, Priority, Category) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Material = Material;\n    this.Profile = Profile;\n    this.Priority = Priority;\n    this.Category = Category;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Material = tape[ptr++];\n    let Profile = tape[ptr++];\n    let Priority = tape[ptr++];\n    let Category = tape[ptr++];\n    return new IfcMaterialProfile(expressID, type, Name, Description, Material, Profile, Priority, Category);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Material);\n    ;\n    args.push(this.Profile);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.Category);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileSet = class {\n  constructor(expressID, type, Name, Description, MaterialProfiles, CompositeProfile) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.MaterialProfiles = MaterialProfiles;\n    this.CompositeProfile = CompositeProfile;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let MaterialProfiles = tape[ptr++];\n    let CompositeProfile = tape[ptr++];\n    return new IfcMaterialProfileSet(expressID, type, Name, Description, MaterialProfiles, CompositeProfile);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.MaterialProfiles);\n    ;\n    args.push(this.CompositeProfile);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileSetUsage = class {\n  constructor(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ForProfileSet = ForProfileSet;\n    this.CardinalPoint = CardinalPoint;\n    this.ReferenceExtent = ReferenceExtent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ForProfileSet = tape[ptr++];\n    let CardinalPoint = tape[ptr++];\n    let ReferenceExtent = tape[ptr++];\n    return new IfcMaterialProfileSetUsage(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ForProfileSet);\n    ;\n    args.push(this.CardinalPoint);\n    ;\n    args.push(this.ReferenceExtent);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileSetUsageTapering = class {\n  constructor(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent, ForProfileEndSet, CardinalEndPoint) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ForProfileSet = ForProfileSet;\n    this.CardinalPoint = CardinalPoint;\n    this.ReferenceExtent = ReferenceExtent;\n    this.ForProfileEndSet = ForProfileEndSet;\n    this.CardinalEndPoint = CardinalEndPoint;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ForProfileSet = tape[ptr++];\n    let CardinalPoint = tape[ptr++];\n    let ReferenceExtent = tape[ptr++];\n    let ForProfileEndSet = tape[ptr++];\n    let CardinalEndPoint = tape[ptr++];\n    return new IfcMaterialProfileSetUsageTapering(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent, ForProfileEndSet, CardinalEndPoint);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ForProfileSet);\n    ;\n    args.push(this.CardinalPoint);\n    ;\n    args.push(this.ReferenceExtent);\n    ;\n    args.push(this.ForProfileEndSet);\n    ;\n    args.push(this.CardinalEndPoint);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileWithOffsets = class {\n  constructor(expressID, type, Name, Description, Material, Profile, Priority, Category, OffsetValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Material = Material;\n    this.Profile = Profile;\n    this.Priority = Priority;\n    this.Category = Category;\n    this.OffsetValues = OffsetValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Material = tape[ptr++];\n    let Profile = tape[ptr++];\n    let Priority = tape[ptr++];\n    let Category = tape[ptr++];\n    let OffsetValues = tape[ptr++];\n    return new IfcMaterialProfileWithOffsets(expressID, type, Name, Description, Material, Profile, Priority, Category, OffsetValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Material);\n    ;\n    args.push(this.Profile);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.OffsetValues);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProperties = class {\n  constructor(expressID, type, Name, Description, Properties2, Material) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Properties = Properties2;\n    this.Material = Material;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Properties2 = tape[ptr++];\n    let Material = tape[ptr++];\n    return new IfcMaterialProperties(expressID, type, Name, Description, Properties2, Material);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Properties);\n    ;\n    args.push(this.Material);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingMaterial, RelatedMaterials, Expression) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingMaterial = RelatingMaterial;\n    this.RelatedMaterials = RelatedMaterials;\n    this.Expression = Expression;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingMaterial = tape[ptr++];\n    let RelatedMaterials = tape[ptr++];\n    let Expression = tape[ptr++];\n    return new IfcMaterialRelationship(expressID, type, Name, Description, RelatingMaterial, RelatedMaterials, Expression);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingMaterial);\n    ;\n    args.push(this.RelatedMaterials);\n    ;\n    args.push(this.Expression);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialUsageDefinition = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcMaterialUsageDefinition(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcMeasureWithUnit = class {\n  constructor(expressID, type, ValueComponent, UnitComponent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ValueComponent = ValueComponent;\n    this.UnitComponent = UnitComponent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ValueComponent = tape[ptr++];\n    let UnitComponent = tape[ptr++];\n    return new IfcMeasureWithUnit(expressID, type, ValueComponent, UnitComponent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ValueComponent);\n    ;\n    args.push(this.UnitComponent);\n    ;\n    return args;\n  }\n};\nvar IfcMechanicalFastener = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NominalDiameter, NominalLength, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.NominalDiameter = NominalDiameter;\n    this.NominalLength = NominalLength;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let NominalLength = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMechanicalFastener(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NominalDiameter, NominalLength, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.NominalLength);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMechanicalFastenerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, NominalLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.NominalLength = NominalLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let NominalLength = tape[ptr++];\n    return new IfcMechanicalFastenerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, NominalLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.NominalLength);\n    ;\n    return args;\n  }\n};\nvar IfcMedicalDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMedicalDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMedicalDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMedicalDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMemberStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMemberStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMemberType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMemberType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMetric = class {\n  constructor(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, Benchmark, ValueSource, DataValue, ReferencePath) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConstraintGrade = ConstraintGrade;\n    this.ConstraintSource = ConstraintSource;\n    this.CreatingActor = CreatingActor;\n    this.CreationTime = CreationTime;\n    this.UserDefinedGrade = UserDefinedGrade;\n    this.Benchmark = Benchmark;\n    this.ValueSource = ValueSource;\n    this.DataValue = DataValue;\n    this.ReferencePath = ReferencePath;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConstraintGrade = tape[ptr++];\n    let ConstraintSource = tape[ptr++];\n    let CreatingActor = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let UserDefinedGrade = tape[ptr++];\n    let Benchmark = tape[ptr++];\n    let ValueSource = tape[ptr++];\n    let DataValue = tape[ptr++];\n    let ReferencePath = tape[ptr++];\n    return new IfcMetric(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, Benchmark, ValueSource, DataValue, ReferencePath);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConstraintGrade);\n    ;\n    args.push(this.ConstraintSource);\n    ;\n    args.push(this.CreatingActor);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.UserDefinedGrade);\n    ;\n    args.push(this.Benchmark);\n    ;\n    args.push(this.ValueSource);\n    ;\n    args.push(this.DataValue);\n    ;\n    args.push(this.ReferencePath);\n    ;\n    return args;\n  }\n};\nvar IfcMirroredProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.ParentProfile = ParentProfile;\n    this.Operator = Operator;\n    this.Label = Label;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let ParentProfile = tape[ptr++];\n    let Operator = tape[ptr++];\n    let Label = tape[ptr++];\n    return new IfcMirroredProfileDef(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.ParentProfile);\n    ;\n    args.push(this.Operator);\n    ;\n    args.push(this.Label);\n    ;\n    return args;\n  }\n};\nvar IfcMonetaryUnit = class {\n  constructor(expressID, type, Currency) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Currency = Currency;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Currency = tape[ptr++];\n    return new IfcMonetaryUnit(expressID, type, Currency);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Currency);\n    ;\n    return args;\n  }\n};\nvar IfcMotorConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMotorConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMotorConnectionType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMotorConnectionType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcNamedUnit = class {\n  constructor(expressID, type, Dimensions, UnitType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    return new IfcNamedUnit(expressID, type, Dimensions, UnitType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    return args;\n  }\n};\nvar IfcObject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    return new IfcObject(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    return args;\n  }\n};\nvar IfcObjectDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcObjectDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcObjectPlacement = class {\n  constructor(expressID, type, PlacementRelTo) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    return new IfcObjectPlacement(expressID, type, PlacementRelTo);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    return args;\n  }\n};\nvar IfcObjective = class {\n  constructor(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, BenchmarkValues, LogicalAggregator, ObjectiveQualifier, UserDefinedQualifier) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConstraintGrade = ConstraintGrade;\n    this.ConstraintSource = ConstraintSource;\n    this.CreatingActor = CreatingActor;\n    this.CreationTime = CreationTime;\n    this.UserDefinedGrade = UserDefinedGrade;\n    this.BenchmarkValues = BenchmarkValues;\n    this.LogicalAggregator = LogicalAggregator;\n    this.ObjectiveQualifier = ObjectiveQualifier;\n    this.UserDefinedQualifier = UserDefinedQualifier;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConstraintGrade = tape[ptr++];\n    let ConstraintSource = tape[ptr++];\n    let CreatingActor = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let UserDefinedGrade = tape[ptr++];\n    let BenchmarkValues = tape[ptr++];\n    let LogicalAggregator = tape[ptr++];\n    let ObjectiveQualifier = tape[ptr++];\n    let UserDefinedQualifier = tape[ptr++];\n    return new IfcObjective(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, BenchmarkValues, LogicalAggregator, ObjectiveQualifier, UserDefinedQualifier);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConstraintGrade);\n    ;\n    args.push(this.ConstraintSource);\n    ;\n    args.push(this.CreatingActor);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.UserDefinedGrade);\n    ;\n    args.push(this.BenchmarkValues);\n    ;\n    args.push(this.LogicalAggregator);\n    ;\n    args.push(this.ObjectiveQualifier);\n    ;\n    args.push(this.UserDefinedQualifier);\n    ;\n    return args;\n  }\n};\nvar IfcOccupant = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.TheActor = TheActor;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let TheActor = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOccupant(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.TheActor);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurve = class {\n  constructor(expressID, type, BasisCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    return new IfcOffsetCurve(expressID, type, BasisCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurve2D = class {\n  constructor(expressID, type, BasisCurve, Distance, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.Distance = Distance;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let Distance = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcOffsetCurve2D(expressID, type, BasisCurve, Distance, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.Distance);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurve3D = class {\n  constructor(expressID, type, BasisCurve, Distance, SelfIntersect, RefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.Distance = Distance;\n    this.SelfIntersect = SelfIntersect;\n    this.RefDirection = RefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let Distance = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let RefDirection = tape[ptr++];\n    return new IfcOffsetCurve3D(expressID, type, BasisCurve, Distance, SelfIntersect, RefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.Distance);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.RefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurveByDistances = class {\n  constructor(expressID, type, BasisCurve, OffsetValues, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.OffsetValues = OffsetValues;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let OffsetValues = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcOffsetCurveByDistances(expressID, type, BasisCurve, OffsetValues, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.OffsetValues);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcOpenShell = class {\n  constructor(expressID, type, CfsFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CfsFaces = CfsFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CfsFaces = tape[ptr++];\n    return new IfcOpenShell(expressID, type, CfsFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CfsFaces);\n    ;\n    return args;\n  }\n};\nvar IfcOpeningElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOpeningElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOpeningStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOpeningStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOrganization = class {\n  constructor(expressID, type, Identification, Name, Description, Roles, Addresses) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.Roles = Roles;\n    this.Addresses = Addresses;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Roles = tape[ptr++];\n    let Addresses = tape[ptr++];\n    return new IfcOrganization(expressID, type, Identification, Name, Description, Roles, Addresses);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Roles);\n    ;\n    args.push(this.Addresses);\n    ;\n    return args;\n  }\n};\nvar IfcOrganizationRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingOrganization, RelatedOrganizations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingOrganization = RelatingOrganization;\n    this.RelatedOrganizations = RelatedOrganizations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingOrganization = tape[ptr++];\n    let RelatedOrganizations = tape[ptr++];\n    return new IfcOrganizationRelationship(expressID, type, Name, Description, RelatingOrganization, RelatedOrganizations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingOrganization);\n    ;\n    args.push(this.RelatedOrganizations);\n    ;\n    return args;\n  }\n};\nvar IfcOrientationExpression = class {\n  constructor(expressID, type, LateralAxisDirection, VerticalAxisDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LateralAxisDirection = LateralAxisDirection;\n    this.VerticalAxisDirection = VerticalAxisDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LateralAxisDirection = tape[ptr++];\n    let VerticalAxisDirection = tape[ptr++];\n    return new IfcOrientationExpression(expressID, type, LateralAxisDirection, VerticalAxisDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LateralAxisDirection);\n    ;\n    args.push(this.VerticalAxisDirection);\n    ;\n    return args;\n  }\n};\nvar IfcOrientedEdge = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd, EdgeElement, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n    this.EdgeElement = EdgeElement;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    let EdgeElement = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcOrientedEdge(expressID, type, EdgeStart, EdgeEnd, EdgeElement, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    args.push(this.EdgeElement);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcOuterBoundaryCurve = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcOuterBoundaryCurve(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcOutlet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOutlet(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOutletType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOutletType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOwnerHistory = class {\n  constructor(expressID, type, OwningUser, OwningApplication, State, ChangeAction, LastModifiedDate, LastModifyingUser, LastModifyingApplication, CreationDate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.OwningUser = OwningUser;\n    this.OwningApplication = OwningApplication;\n    this.State = State;\n    this.ChangeAction = ChangeAction;\n    this.LastModifiedDate = LastModifiedDate;\n    this.LastModifyingUser = LastModifyingUser;\n    this.LastModifyingApplication = LastModifyingApplication;\n    this.CreationDate = CreationDate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let OwningUser = tape[ptr++];\n    let OwningApplication = tape[ptr++];\n    let State = tape[ptr++];\n    let ChangeAction = tape[ptr++];\n    let LastModifiedDate = tape[ptr++];\n    let LastModifyingUser = tape[ptr++];\n    let LastModifyingApplication = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    return new IfcOwnerHistory(expressID, type, OwningUser, OwningApplication, State, ChangeAction, LastModifiedDate, LastModifyingUser, LastModifyingApplication, CreationDate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.OwningUser);\n    ;\n    args.push(this.OwningApplication);\n    ;\n    args.push(this.State);\n    ;\n    args.push(this.ChangeAction);\n    ;\n    args.push(this.LastModifiedDate);\n    ;\n    args.push(this.LastModifyingUser);\n    ;\n    args.push(this.LastModifyingApplication);\n    ;\n    args.push(this.CreationDate);\n    ;\n    return args;\n  }\n};\nvar IfcParameterizedProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    return new IfcParameterizedProfileDef(expressID, type, ProfileType, ProfileName, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcPath = class {\n  constructor(expressID, type, EdgeList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeList = EdgeList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeList = tape[ptr++];\n    return new IfcPath(expressID, type, EdgeList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeList);\n    ;\n    return args;\n  }\n};\nvar IfcPcurve = class {\n  constructor(expressID, type, BasisSurface, ReferenceCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.ReferenceCurve = ReferenceCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let ReferenceCurve = tape[ptr++];\n    return new IfcPcurve(expressID, type, BasisSurface, ReferenceCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.ReferenceCurve);\n    ;\n    return args;\n  }\n};\nvar IfcPerformanceHistory = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LifeCyclePhase, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LifeCyclePhase = LifeCyclePhase;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LifeCyclePhase = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPerformanceHistory(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LifeCyclePhase, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LifeCyclePhase);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPermeableCoveringProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.OperationType = OperationType;\n    this.PanelPosition = PanelPosition;\n    this.FrameDepth = FrameDepth;\n    this.FrameThickness = FrameThickness;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let PanelPosition = tape[ptr++];\n    let FrameDepth = tape[ptr++];\n    let FrameThickness = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    return new IfcPermeableCoveringProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.PanelPosition);\n    ;\n    args.push(this.FrameDepth);\n    ;\n    args.push(this.FrameThickness);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    return args;\n  }\n};\nvar IfcPermit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcPermit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcPerson = class {\n  constructor(expressID, type, Identification, FamilyName, GivenName, MiddleNames, PrefixTitles, SuffixTitles, Roles, Addresses) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identification = Identification;\n    this.FamilyName = FamilyName;\n    this.GivenName = GivenName;\n    this.MiddleNames = MiddleNames;\n    this.PrefixTitles = PrefixTitles;\n    this.SuffixTitles = SuffixTitles;\n    this.Roles = Roles;\n    this.Addresses = Addresses;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identification = tape[ptr++];\n    let FamilyName = tape[ptr++];\n    let GivenName = tape[ptr++];\n    let MiddleNames = tape[ptr++];\n    let PrefixTitles = tape[ptr++];\n    let SuffixTitles = tape[ptr++];\n    let Roles = tape[ptr++];\n    let Addresses = tape[ptr++];\n    return new IfcPerson(expressID, type, Identification, FamilyName, GivenName, MiddleNames, PrefixTitles, SuffixTitles, Roles, Addresses);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identification);\n    ;\n    args.push(this.FamilyName);\n    ;\n    args.push(this.GivenName);\n    ;\n    args.push(this.MiddleNames);\n    ;\n    args.push(this.PrefixTitles);\n    ;\n    args.push(this.SuffixTitles);\n    ;\n    args.push(this.Roles);\n    ;\n    args.push(this.Addresses);\n    ;\n    return args;\n  }\n};\nvar IfcPersonAndOrganization = class {\n  constructor(expressID, type, ThePerson, TheOrganization, Roles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ThePerson = ThePerson;\n    this.TheOrganization = TheOrganization;\n    this.Roles = Roles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ThePerson = tape[ptr++];\n    let TheOrganization = tape[ptr++];\n    let Roles = tape[ptr++];\n    return new IfcPersonAndOrganization(expressID, type, ThePerson, TheOrganization, Roles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ThePerson);\n    ;\n    args.push(this.TheOrganization);\n    ;\n    args.push(this.Roles);\n    ;\n    return args;\n  }\n};\nvar IfcPhysicalComplexQuantity = class {\n  constructor(expressID, type, Name, Description, HasQuantities, Discrimination, Quality, Usage) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.HasQuantities = HasQuantities;\n    this.Discrimination = Discrimination;\n    this.Quality = Quality;\n    this.Usage = Usage;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let HasQuantities = tape[ptr++];\n    let Discrimination = tape[ptr++];\n    let Quality = tape[ptr++];\n    let Usage = tape[ptr++];\n    return new IfcPhysicalComplexQuantity(expressID, type, Name, Description, HasQuantities, Discrimination, Quality, Usage);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.HasQuantities);\n    ;\n    args.push(this.Discrimination);\n    ;\n    args.push(this.Quality);\n    ;\n    args.push(this.Usage);\n    ;\n    return args;\n  }\n};\nvar IfcPhysicalQuantity = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPhysicalQuantity(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPhysicalSimpleQuantity = class {\n  constructor(expressID, type, Name, Description, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPhysicalSimpleQuantity(expressID, type, Name, Description, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPile = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType, ConstructionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n    this.ConstructionType = ConstructionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ConstructionType = tape[ptr++];\n    return new IfcPile(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType, ConstructionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ConstructionType);\n    ;\n    return args;\n  }\n};\nvar IfcPileType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPileType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPixelTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, Width, Height, ColourComponents, Pixel) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n    this.Width = Width;\n    this.Height = Height;\n    this.ColourComponents = ColourComponents;\n    this.Pixel = Pixel;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    let Width = tape[ptr++];\n    let Height = tape[ptr++];\n    let ColourComponents = tape[ptr++];\n    let Pixel = tape[ptr++];\n    return new IfcPixelTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, Width, Height, ColourComponents, Pixel);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    args.push(this.Width);\n    ;\n    args.push(this.Height);\n    ;\n    args.push(this.ColourComponents);\n    ;\n    args.push(this.Pixel);\n    ;\n    return args;\n  }\n};\nvar IfcPlacement = class {\n  constructor(expressID, type, Location) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    return new IfcPlacement(expressID, type, Location);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    return args;\n  }\n};\nvar IfcPlanarBox = class {\n  constructor(expressID, type, SizeInX, SizeInY, Placement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SizeInX = SizeInX;\n    this.SizeInY = SizeInY;\n    this.Placement = Placement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SizeInX = tape[ptr++];\n    let SizeInY = tape[ptr++];\n    let Placement = tape[ptr++];\n    return new IfcPlanarBox(expressID, type, SizeInX, SizeInY, Placement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SizeInX);\n    ;\n    args.push(this.SizeInY);\n    ;\n    args.push(this.Placement);\n    ;\n    return args;\n  }\n};\nvar IfcPlanarExtent = class {\n  constructor(expressID, type, SizeInX, SizeInY) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SizeInX = SizeInX;\n    this.SizeInY = SizeInY;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SizeInX = tape[ptr++];\n    let SizeInY = tape[ptr++];\n    return new IfcPlanarExtent(expressID, type, SizeInX, SizeInY);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SizeInX);\n    ;\n    args.push(this.SizeInY);\n    ;\n    return args;\n  }\n};\nvar IfcPlane = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcPlane(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcPlate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPlate(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPlateStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPlateStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPlateType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPlateType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPoint = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPoint(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPointOnCurve = class {\n  constructor(expressID, type, BasisCurve, PointParameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.PointParameter = PointParameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let PointParameter = tape[ptr++];\n    return new IfcPointOnCurve(expressID, type, BasisCurve, PointParameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.PointParameter);\n    ;\n    return args;\n  }\n};\nvar IfcPointOnSurface = class {\n  constructor(expressID, type, BasisSurface, PointParameterU, PointParameterV) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.PointParameterU = PointParameterU;\n    this.PointParameterV = PointParameterV;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let PointParameterU = tape[ptr++];\n    let PointParameterV = tape[ptr++];\n    return new IfcPointOnSurface(expressID, type, BasisSurface, PointParameterU, PointParameterV);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.PointParameterU);\n    ;\n    args.push(this.PointParameterV);\n    ;\n    return args;\n  }\n};\nvar IfcPolyLoop = class {\n  constructor(expressID, type, Polygon) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Polygon = Polygon;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Polygon = tape[ptr++];\n    return new IfcPolyLoop(expressID, type, Polygon);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Polygon);\n    ;\n    return args;\n  }\n};\nvar IfcPolygonalBoundedHalfSpace = class {\n  constructor(expressID, type, BaseSurface, AgreementFlag, Position, PolygonalBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BaseSurface = BaseSurface;\n    this.AgreementFlag = AgreementFlag;\n    this.Position = Position;\n    this.PolygonalBoundary = PolygonalBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BaseSurface = tape[ptr++];\n    let AgreementFlag = tape[ptr++];\n    let Position = tape[ptr++];\n    let PolygonalBoundary = tape[ptr++];\n    return new IfcPolygonalBoundedHalfSpace(expressID, type, BaseSurface, AgreementFlag, Position, PolygonalBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BaseSurface);\n    ;\n    args.push(this.AgreementFlag);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.PolygonalBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcPolygonalFaceSet = class {\n  constructor(expressID, type, Coordinates, Closed, Faces, PnIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n    this.Closed = Closed;\n    this.Faces = Faces;\n    this.PnIndex = PnIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    let Closed = tape[ptr++];\n    let Faces = tape[ptr++];\n    let PnIndex = tape[ptr++];\n    return new IfcPolygonalFaceSet(expressID, type, Coordinates, Closed, Faces, PnIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    args.push(this.Closed);\n    ;\n    args.push(this.Faces);\n    ;\n    args.push(this.PnIndex);\n    ;\n    return args;\n  }\n};\nvar IfcPolyline = class {\n  constructor(expressID, type, Points) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Points = Points;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Points = tape[ptr++];\n    return new IfcPolyline(expressID, type, Points);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Points);\n    ;\n    return args;\n  }\n};\nvar IfcPort = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcPort(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcPositioningElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcPositioningElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcPostalAddress = class {\n  constructor(expressID, type, Purpose, Description, UserDefinedPurpose, InternalLocation, AddressLines, PostalBox, Town, Region, PostalCode, Country) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Purpose = Purpose;\n    this.Description = Description;\n    this.UserDefinedPurpose = UserDefinedPurpose;\n    this.InternalLocation = InternalLocation;\n    this.AddressLines = AddressLines;\n    this.PostalBox = PostalBox;\n    this.Town = Town;\n    this.Region = Region;\n    this.PostalCode = PostalCode;\n    this.Country = Country;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Purpose = tape[ptr++];\n    let Description = tape[ptr++];\n    let UserDefinedPurpose = tape[ptr++];\n    let InternalLocation = tape[ptr++];\n    let AddressLines = tape[ptr++];\n    let PostalBox = tape[ptr++];\n    let Town = tape[ptr++];\n    let Region = tape[ptr++];\n    let PostalCode = tape[ptr++];\n    let Country = tape[ptr++];\n    return new IfcPostalAddress(expressID, type, Purpose, Description, UserDefinedPurpose, InternalLocation, AddressLines, PostalBox, Town, Region, PostalCode, Country);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Purpose);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UserDefinedPurpose);\n    ;\n    args.push(this.InternalLocation);\n    ;\n    args.push(this.AddressLines);\n    ;\n    args.push(this.PostalBox);\n    ;\n    args.push(this.Town);\n    ;\n    args.push(this.Region);\n    ;\n    args.push(this.PostalCode);\n    ;\n    args.push(this.Country);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedColour = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedColour(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedCurveFont = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedCurveFont(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedItem = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedItem(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedProperties = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPreDefinedProperties(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPreDefinedPropertySet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPreDefinedPropertySet(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedTextFont = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedTextFont(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPresentationLayerAssignment = class {\n  constructor(expressID, type, Name, Description, AssignedItems, Identifier) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AssignedItems = AssignedItems;\n    this.Identifier = Identifier;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AssignedItems = tape[ptr++];\n    let Identifier = tape[ptr++];\n    return new IfcPresentationLayerAssignment(expressID, type, Name, Description, AssignedItems, Identifier);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AssignedItems);\n    ;\n    args.push(this.Identifier);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationLayerWithStyle = class {\n  constructor(expressID, type, Name, Description, AssignedItems, Identifier, LayerOn, LayerFrozen, LayerBlocked, LayerStyles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AssignedItems = AssignedItems;\n    this.Identifier = Identifier;\n    this.LayerOn = LayerOn;\n    this.LayerFrozen = LayerFrozen;\n    this.LayerBlocked = LayerBlocked;\n    this.LayerStyles = LayerStyles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AssignedItems = tape[ptr++];\n    let Identifier = tape[ptr++];\n    let LayerOn = tape[ptr++];\n    let LayerFrozen = tape[ptr++];\n    let LayerBlocked = tape[ptr++];\n    let LayerStyles = tape[ptr++];\n    return new IfcPresentationLayerWithStyle(expressID, type, Name, Description, AssignedItems, Identifier, LayerOn, LayerFrozen, LayerBlocked, LayerStyles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AssignedItems);\n    ;\n    args.push(this.Identifier);\n    ;\n    args.push(this.LayerOn);\n    ;\n    args.push(this.LayerFrozen);\n    ;\n    args.push(this.LayerBlocked);\n    ;\n    args.push(this.LayerStyles);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationStyle = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPresentationStyle(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationStyleAssignment = class {\n  constructor(expressID, type, Styles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Styles = Styles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Styles = tape[ptr++];\n    return new IfcPresentationStyleAssignment(expressID, type, Styles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Styles);\n    ;\n    return args;\n  }\n};\nvar IfcProcedure = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProcedure(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProcedureType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProcedureType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProcess = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcProcess(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcProduct = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcProduct(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcProductDefinitionShape = class {\n  constructor(expressID, type, Name, Description, Representations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Representations = Representations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Representations = tape[ptr++];\n    return new IfcProductDefinitionShape(expressID, type, Name, Description, Representations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Representations);\n    ;\n    return args;\n  }\n};\nvar IfcProductRepresentation = class {\n  constructor(expressID, type, Name, Description, Representations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Representations = Representations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Representations = tape[ptr++];\n    return new IfcProductRepresentation(expressID, type, Name, Description, Representations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Representations);\n    ;\n    return args;\n  }\n};\nvar IfcProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    return new IfcProfileDef(expressID, type, ProfileType, ProfileName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    return args;\n  }\n};\nvar IfcProfileProperties = class {\n  constructor(expressID, type, Name, Description, Properties2, ProfileDefinition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Properties = Properties2;\n    this.ProfileDefinition = ProfileDefinition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Properties2 = tape[ptr++];\n    let ProfileDefinition = tape[ptr++];\n    return new IfcProfileProperties(expressID, type, Name, Description, Properties2, ProfileDefinition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Properties);\n    ;\n    args.push(this.ProfileDefinition);\n    ;\n    return args;\n  }\n};\nvar IfcProject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.Phase = Phase;\n    this.RepresentationContexts = RepresentationContexts;\n    this.UnitsInContext = UnitsInContext;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let Phase = tape[ptr++];\n    let RepresentationContexts = tape[ptr++];\n    let UnitsInContext = tape[ptr++];\n    return new IfcProject(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.Phase);\n    ;\n    args.push(this.RepresentationContexts);\n    ;\n    args.push(this.UnitsInContext);\n    ;\n    return args;\n  }\n};\nvar IfcProjectLibrary = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.Phase = Phase;\n    this.RepresentationContexts = RepresentationContexts;\n    this.UnitsInContext = UnitsInContext;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let Phase = tape[ptr++];\n    let RepresentationContexts = tape[ptr++];\n    let UnitsInContext = tape[ptr++];\n    return new IfcProjectLibrary(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.Phase);\n    ;\n    args.push(this.RepresentationContexts);\n    ;\n    args.push(this.UnitsInContext);\n    ;\n    return args;\n  }\n};\nvar IfcProjectOrder = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcProjectOrder(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcProjectedCRS = class {\n  constructor(expressID, type, Name, Description, GeodeticDatum, VerticalDatum, MapProjection, MapZone, MapUnit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.GeodeticDatum = GeodeticDatum;\n    this.VerticalDatum = VerticalDatum;\n    this.MapProjection = MapProjection;\n    this.MapZone = MapZone;\n    this.MapUnit = MapUnit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let GeodeticDatum = tape[ptr++];\n    let VerticalDatum = tape[ptr++];\n    let MapProjection = tape[ptr++];\n    let MapZone = tape[ptr++];\n    let MapUnit = tape[ptr++];\n    return new IfcProjectedCRS(expressID, type, Name, Description, GeodeticDatum, VerticalDatum, MapProjection, MapZone, MapUnit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.GeodeticDatum);\n    ;\n    args.push(this.VerticalDatum);\n    ;\n    args.push(this.MapProjection);\n    ;\n    args.push(this.MapZone);\n    ;\n    args.push(this.MapUnit);\n    ;\n    return args;\n  }\n};\nvar IfcProjectionElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProjectionElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProperty = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcProperty(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyAbstraction = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPropertyAbstraction(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPropertyBoundedValue = class {\n  constructor(expressID, type, Name, Description, UpperBoundValue, LowerBoundValue, Unit, SetPointValue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.UpperBoundValue = UpperBoundValue;\n    this.LowerBoundValue = LowerBoundValue;\n    this.Unit = Unit;\n    this.SetPointValue = SetPointValue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UpperBoundValue = tape[ptr++];\n    let LowerBoundValue = tape[ptr++];\n    let Unit = tape[ptr++];\n    let SetPointValue = tape[ptr++];\n    return new IfcPropertyBoundedValue(expressID, type, Name, Description, UpperBoundValue, LowerBoundValue, Unit, SetPointValue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UpperBoundValue);\n    ;\n    args.push(this.LowerBoundValue);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.SetPointValue);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertyDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyDependencyRelationship = class {\n  constructor(expressID, type, Name, Description, DependingProperty, DependantProperty, Expression) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.DependingProperty = DependingProperty;\n    this.DependantProperty = DependantProperty;\n    this.Expression = Expression;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let DependingProperty = tape[ptr++];\n    let DependantProperty = tape[ptr++];\n    let Expression = tape[ptr++];\n    return new IfcPropertyDependencyRelationship(expressID, type, Name, Description, DependingProperty, DependantProperty, Expression);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.DependingProperty);\n    ;\n    args.push(this.DependantProperty);\n    ;\n    args.push(this.Expression);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyEnumeratedValue = class {\n  constructor(expressID, type, Name, Description, EnumerationValues, EnumerationReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.EnumerationValues = EnumerationValues;\n    this.EnumerationReference = EnumerationReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let EnumerationValues = tape[ptr++];\n    let EnumerationReference = tape[ptr++];\n    return new IfcPropertyEnumeratedValue(expressID, type, Name, Description, EnumerationValues, EnumerationReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.EnumerationValues);\n    ;\n    args.push(this.EnumerationReference);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyEnumeration = class {\n  constructor(expressID, type, Name, EnumerationValues, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.EnumerationValues = EnumerationValues;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let EnumerationValues = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPropertyEnumeration(expressID, type, Name, EnumerationValues, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.EnumerationValues);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyListValue = class {\n  constructor(expressID, type, Name, Description, ListValues, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ListValues = ListValues;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ListValues = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPropertyListValue(expressID, type, Name, Description, ListValues, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ListValues);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyReferenceValue = class {\n  constructor(expressID, type, Name, Description, UsageName, PropertyReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.UsageName = UsageName;\n    this.PropertyReference = PropertyReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UsageName = tape[ptr++];\n    let PropertyReference = tape[ptr++];\n    return new IfcPropertyReferenceValue(expressID, type, Name, Description, UsageName, PropertyReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UsageName);\n    ;\n    args.push(this.PropertyReference);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, HasProperties) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.HasProperties = HasProperties;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let HasProperties = tape[ptr++];\n    return new IfcPropertySet(expressID, type, GlobalId, OwnerHistory, Name, Description, HasProperties);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.HasProperties);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySetDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertySetDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySetTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, ApplicableEntity, HasPropertyTemplates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.TemplateType = TemplateType;\n    this.ApplicableEntity = ApplicableEntity;\n    this.HasPropertyTemplates = HasPropertyTemplates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let TemplateType = tape[ptr++];\n    let ApplicableEntity = tape[ptr++];\n    let HasPropertyTemplates = tape[ptr++];\n    return new IfcPropertySetTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, ApplicableEntity, HasPropertyTemplates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.TemplateType);\n    ;\n    args.push(this.ApplicableEntity);\n    ;\n    args.push(this.HasPropertyTemplates);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySingleValue = class {\n  constructor(expressID, type, Name, Description, NominalValue, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.NominalValue = NominalValue;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let NominalValue = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPropertySingleValue(expressID, type, Name, Description, NominalValue, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.NominalValue);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyTableValue = class {\n  constructor(expressID, type, Name, Description, DefiningValues, DefinedValues, Expression, DefiningUnit, DefinedUnit, CurveInterpolation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.DefiningValues = DefiningValues;\n    this.DefinedValues = DefinedValues;\n    this.Expression = Expression;\n    this.DefiningUnit = DefiningUnit;\n    this.DefinedUnit = DefinedUnit;\n    this.CurveInterpolation = CurveInterpolation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let DefiningValues = tape[ptr++];\n    let DefinedValues = tape[ptr++];\n    let Expression = tape[ptr++];\n    let DefiningUnit = tape[ptr++];\n    let DefinedUnit = tape[ptr++];\n    let CurveInterpolation = tape[ptr++];\n    return new IfcPropertyTableValue(expressID, type, Name, Description, DefiningValues, DefinedValues, Expression, DefiningUnit, DefinedUnit, CurveInterpolation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.DefiningValues);\n    ;\n    args.push(this.DefinedValues);\n    ;\n    args.push(this.Expression);\n    ;\n    args.push(this.DefiningUnit);\n    ;\n    args.push(this.DefinedUnit);\n    ;\n    args.push(this.CurveInterpolation);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertyTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyTemplateDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertyTemplateDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDeviceTrippingUnit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDeviceTrippingUnit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDeviceTrippingUnitType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDeviceTrippingUnitType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProxy = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, ProxyType, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.ProxyType = ProxyType;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let ProxyType = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcProxy(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, ProxyType, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.ProxyType);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcPump = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPump(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPumpType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPumpType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityArea = class {\n  constructor(expressID, type, Name, Description, Unit, AreaValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.AreaValue = AreaValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let AreaValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityArea(expressID, type, Name, Description, Unit, AreaValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.AreaValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityCount = class {\n  constructor(expressID, type, Name, Description, Unit, CountValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.CountValue = CountValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let CountValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityCount(expressID, type, Name, Description, Unit, CountValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.CountValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityLength = class {\n  constructor(expressID, type, Name, Description, Unit, LengthValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.LengthValue = LengthValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let LengthValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityLength(expressID, type, Name, Description, Unit, LengthValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.LengthValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantitySet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcQuantitySet(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityTime = class {\n  constructor(expressID, type, Name, Description, Unit, TimeValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.TimeValue = TimeValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let TimeValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityTime(expressID, type, Name, Description, Unit, TimeValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.TimeValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityVolume = class {\n  constructor(expressID, type, Name, Description, Unit, VolumeValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.VolumeValue = VolumeValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let VolumeValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityVolume(expressID, type, Name, Description, Unit, VolumeValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.VolumeValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityWeight = class {\n  constructor(expressID, type, Name, Description, Unit, WeightValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.WeightValue = WeightValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let WeightValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityWeight(expressID, type, Name, Description, Unit, WeightValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.WeightValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcRailing = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRailing(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRailingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRailingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRamp = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRamp(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRampFlight = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRampFlight(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRampFlightType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRampFlightType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRampType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRampType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRationalBSplineCurveWithKnots = class {\n  constructor(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec, WeightsData) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Degree = Degree;\n    this.ControlPointsList = ControlPointsList;\n    this.CurveForm = CurveForm;\n    this.ClosedCurve = ClosedCurve;\n    this.SelfIntersect = SelfIntersect;\n    this.KnotMultiplicities = KnotMultiplicities;\n    this.Knots = Knots;\n    this.KnotSpec = KnotSpec;\n    this.WeightsData = WeightsData;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Degree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let CurveForm = tape[ptr++];\n    let ClosedCurve = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let KnotMultiplicities = tape[ptr++];\n    let Knots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    let WeightsData = tape[ptr++];\n    return new IfcRationalBSplineCurveWithKnots(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec, WeightsData);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Degree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.CurveForm);\n    ;\n    args.push(this.ClosedCurve);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.KnotMultiplicities);\n    ;\n    args.push(this.Knots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    args.push(this.WeightsData);\n    ;\n    return args;\n  }\n};\nvar IfcRationalBSplineSurfaceWithKnots = class {\n  constructor(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec, WeightsData) {\n    this.expressID = expressID;\n    this.type = type;\n    this.UDegree = UDegree;\n    this.VDegree = VDegree;\n    this.ControlPointsList = ControlPointsList;\n    this.SurfaceForm = SurfaceForm;\n    this.UClosed = UClosed;\n    this.VClosed = VClosed;\n    this.SelfIntersect = SelfIntersect;\n    this.UMultiplicities = UMultiplicities;\n    this.VMultiplicities = VMultiplicities;\n    this.UKnots = UKnots;\n    this.VKnots = VKnots;\n    this.KnotSpec = KnotSpec;\n    this.WeightsData = WeightsData;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let UDegree = tape[ptr++];\n    let VDegree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let SurfaceForm = tape[ptr++];\n    let UClosed = tape[ptr++];\n    let VClosed = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let UMultiplicities = tape[ptr++];\n    let VMultiplicities = tape[ptr++];\n    let UKnots = tape[ptr++];\n    let VKnots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    let WeightsData = tape[ptr++];\n    return new IfcRationalBSplineSurfaceWithKnots(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec, WeightsData);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.UDegree);\n    ;\n    args.push(this.VDegree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.SurfaceForm);\n    ;\n    args.push(this.UClosed);\n    ;\n    args.push(this.VClosed);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.UMultiplicities);\n    ;\n    args.push(this.VMultiplicities);\n    ;\n    args.push(this.UKnots);\n    ;\n    args.push(this.VKnots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    args.push(this.WeightsData);\n    ;\n    return args;\n  }\n};\nvar IfcRectangleHollowProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, WallThickness, InnerFilletRadius, OuterFilletRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.XDim = XDim;\n    this.YDim = YDim;\n    this.WallThickness = WallThickness;\n    this.InnerFilletRadius = InnerFilletRadius;\n    this.OuterFilletRadius = OuterFilletRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let WallThickness = tape[ptr++];\n    let InnerFilletRadius = tape[ptr++];\n    let OuterFilletRadius = tape[ptr++];\n    return new IfcRectangleHollowProfileDef(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, WallThickness, InnerFilletRadius, OuterFilletRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.WallThickness);\n    ;\n    args.push(this.InnerFilletRadius);\n    ;\n    args.push(this.OuterFilletRadius);\n    ;\n    return args;\n  }\n};\nvar IfcRectangleProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, XDim, YDim) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.XDim = XDim;\n    this.YDim = YDim;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    return new IfcRectangleProfileDef(expressID, type, ProfileType, ProfileName, Position, XDim, YDim);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    return args;\n  }\n};\nvar IfcRectangularPyramid = class {\n  constructor(expressID, type, Position, XLength, YLength, Height) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.XLength = XLength;\n    this.YLength = YLength;\n    this.Height = Height;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let XLength = tape[ptr++];\n    let YLength = tape[ptr++];\n    let Height = tape[ptr++];\n    return new IfcRectangularPyramid(expressID, type, Position, XLength, YLength, Height);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.XLength);\n    ;\n    args.push(this.YLength);\n    ;\n    args.push(this.Height);\n    ;\n    return args;\n  }\n};\nvar IfcRectangularTrimmedSurface = class {\n  constructor(expressID, type, BasisSurface, U1, V1, U2, V2, Usense, Vsense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.U1 = U1;\n    this.V1 = V1;\n    this.U2 = U2;\n    this.V2 = V2;\n    this.Usense = Usense;\n    this.Vsense = Vsense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let U1 = tape[ptr++];\n    let V1 = tape[ptr++];\n    let U2 = tape[ptr++];\n    let V2 = tape[ptr++];\n    let Usense = tape[ptr++];\n    let Vsense = tape[ptr++];\n    return new IfcRectangularTrimmedSurface(expressID, type, BasisSurface, U1, V1, U2, V2, Usense, Vsense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.U1);\n    ;\n    args.push(this.V1);\n    ;\n    args.push(this.U2);\n    ;\n    args.push(this.V2);\n    ;\n    args.push(this.Usense);\n    ;\n    args.push(this.Vsense);\n    ;\n    return args;\n  }\n};\nvar IfcRecurrencePattern = class {\n  constructor(expressID, type, RecurrenceType, DayComponent, WeekdayComponent, MonthComponent, Position, Interval, Occurrences, TimePeriods) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RecurrenceType = RecurrenceType;\n    this.DayComponent = DayComponent;\n    this.WeekdayComponent = WeekdayComponent;\n    this.MonthComponent = MonthComponent;\n    this.Position = Position;\n    this.Interval = Interval;\n    this.Occurrences = Occurrences;\n    this.TimePeriods = TimePeriods;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RecurrenceType = tape[ptr++];\n    let DayComponent = tape[ptr++];\n    let WeekdayComponent = tape[ptr++];\n    let MonthComponent = tape[ptr++];\n    let Position = tape[ptr++];\n    let Interval = tape[ptr++];\n    let Occurrences = tape[ptr++];\n    let TimePeriods = tape[ptr++];\n    return new IfcRecurrencePattern(expressID, type, RecurrenceType, DayComponent, WeekdayComponent, MonthComponent, Position, Interval, Occurrences, TimePeriods);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RecurrenceType);\n    ;\n    args.push(this.DayComponent);\n    ;\n    args.push(this.WeekdayComponent);\n    ;\n    args.push(this.MonthComponent);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Interval);\n    ;\n    args.push(this.Occurrences);\n    ;\n    args.push(this.TimePeriods);\n    ;\n    return args;\n  }\n};\nvar IfcReference = class {\n  constructor(expressID, type, TypeIdentifier, AttributeIdentifier, InstanceName, ListPositions, InnerReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TypeIdentifier = TypeIdentifier;\n    this.AttributeIdentifier = AttributeIdentifier;\n    this.InstanceName = InstanceName;\n    this.ListPositions = ListPositions;\n    this.InnerReference = InnerReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TypeIdentifier = tape[ptr++];\n    let AttributeIdentifier = tape[ptr++];\n    let InstanceName = tape[ptr++];\n    let ListPositions = tape[ptr++];\n    let InnerReference = tape[ptr++];\n    return new IfcReference(expressID, type, TypeIdentifier, AttributeIdentifier, InstanceName, ListPositions, InnerReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TypeIdentifier);\n    ;\n    args.push(this.AttributeIdentifier);\n    ;\n    args.push(this.InstanceName);\n    ;\n    args.push(this.ListPositions);\n    ;\n    args.push(this.InnerReference);\n    ;\n    return args;\n  }\n};\nvar IfcReferent = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, RestartDistance) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.RestartDistance = RestartDistance;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let RestartDistance = tape[ptr++];\n    return new IfcReferent(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, RestartDistance);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.RestartDistance);\n    ;\n    return args;\n  }\n};\nvar IfcRegularTimeSeries = class {\n  constructor(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, TimeStep, Values) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n    this.TimeSeriesDataType = TimeSeriesDataType;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.Unit = Unit;\n    this.TimeStep = TimeStep;\n    this.Values = Values;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    let TimeSeriesDataType = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let Unit = tape[ptr++];\n    let TimeStep = tape[ptr++];\n    let Values = tape[ptr++];\n    return new IfcRegularTimeSeries(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, TimeStep, Values);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    args.push(this.TimeSeriesDataType);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.TimeStep);\n    ;\n    args.push(this.Values);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcementBarProperties = class {\n  constructor(expressID, type, TotalCrossSectionArea, SteelGrade, BarSurface, EffectiveDepth, NominalBarDiameter, BarCount) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TotalCrossSectionArea = TotalCrossSectionArea;\n    this.SteelGrade = SteelGrade;\n    this.BarSurface = BarSurface;\n    this.EffectiveDepth = EffectiveDepth;\n    this.NominalBarDiameter = NominalBarDiameter;\n    this.BarCount = BarCount;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TotalCrossSectionArea = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let BarSurface = tape[ptr++];\n    let EffectiveDepth = tape[ptr++];\n    let NominalBarDiameter = tape[ptr++];\n    let BarCount = tape[ptr++];\n    return new IfcReinforcementBarProperties(expressID, type, TotalCrossSectionArea, SteelGrade, BarSurface, EffectiveDepth, NominalBarDiameter, BarCount);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TotalCrossSectionArea);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.BarSurface);\n    ;\n    args.push(this.EffectiveDepth);\n    ;\n    args.push(this.NominalBarDiameter);\n    ;\n    args.push(this.BarCount);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcementDefinitionProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, DefinitionType, ReinforcementSectionDefinitions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.DefinitionType = DefinitionType;\n    this.ReinforcementSectionDefinitions = ReinforcementSectionDefinitions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let DefinitionType = tape[ptr++];\n    let ReinforcementSectionDefinitions = tape[ptr++];\n    return new IfcReinforcementDefinitionProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, DefinitionType, ReinforcementSectionDefinitions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.DefinitionType);\n    ;\n    args.push(this.ReinforcementSectionDefinitions);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingBar = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, NominalDiameter, CrossSectionArea, BarLength, PredefinedType, BarSurface) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.BarLength = BarLength;\n    this.PredefinedType = PredefinedType;\n    this.BarSurface = BarSurface;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let BarLength = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let BarSurface = tape[ptr++];\n    return new IfcReinforcingBar(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, NominalDiameter, CrossSectionArea, BarLength, PredefinedType, BarSurface);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.BarLength);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.BarSurface);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingBarType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, BarLength, BarSurface, BendingShapeCode, BendingParameters) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.BarLength = BarLength;\n    this.BarSurface = BarSurface;\n    this.BendingShapeCode = BendingShapeCode;\n    this.BendingParameters = BendingParameters;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let BarLength = tape[ptr++];\n    let BarSurface = tape[ptr++];\n    let BendingShapeCode = tape[ptr++];\n    let BendingParameters = tape[ptr++];\n    return new IfcReinforcingBarType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, BarLength, BarSurface, BendingShapeCode, BendingParameters);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.BarLength);\n    ;\n    args.push(this.BarSurface);\n    ;\n    args.push(this.BendingShapeCode);\n    ;\n    args.push(this.BendingParameters);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    return new IfcReinforcingElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcReinforcingElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingMesh = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.MeshLength = MeshLength;\n    this.MeshWidth = MeshWidth;\n    this.LongitudinalBarNominalDiameter = LongitudinalBarNominalDiameter;\n    this.TransverseBarNominalDiameter = TransverseBarNominalDiameter;\n    this.LongitudinalBarCrossSectionArea = LongitudinalBarCrossSectionArea;\n    this.TransverseBarCrossSectionArea = TransverseBarCrossSectionArea;\n    this.LongitudinalBarSpacing = LongitudinalBarSpacing;\n    this.TransverseBarSpacing = TransverseBarSpacing;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let MeshLength = tape[ptr++];\n    let MeshWidth = tape[ptr++];\n    let LongitudinalBarNominalDiameter = tape[ptr++];\n    let TransverseBarNominalDiameter = tape[ptr++];\n    let LongitudinalBarCrossSectionArea = tape[ptr++];\n    let TransverseBarCrossSectionArea = tape[ptr++];\n    let LongitudinalBarSpacing = tape[ptr++];\n    let TransverseBarSpacing = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcReinforcingMesh(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.MeshLength);\n    ;\n    args.push(this.MeshWidth);\n    ;\n    args.push(this.LongitudinalBarNominalDiameter);\n    ;\n    args.push(this.TransverseBarNominalDiameter);\n    ;\n    args.push(this.LongitudinalBarCrossSectionArea);\n    ;\n    args.push(this.TransverseBarCrossSectionArea);\n    ;\n    args.push(this.LongitudinalBarSpacing);\n    ;\n    args.push(this.TransverseBarSpacing);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingMeshType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, BendingShapeCode, BendingParameters) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.MeshLength = MeshLength;\n    this.MeshWidth = MeshWidth;\n    this.LongitudinalBarNominalDiameter = LongitudinalBarNominalDiameter;\n    this.TransverseBarNominalDiameter = TransverseBarNominalDiameter;\n    this.LongitudinalBarCrossSectionArea = LongitudinalBarCrossSectionArea;\n    this.TransverseBarCrossSectionArea = TransverseBarCrossSectionArea;\n    this.LongitudinalBarSpacing = LongitudinalBarSpacing;\n    this.TransverseBarSpacing = TransverseBarSpacing;\n    this.BendingShapeCode = BendingShapeCode;\n    this.BendingParameters = BendingParameters;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let MeshLength = tape[ptr++];\n    let MeshWidth = tape[ptr++];\n    let LongitudinalBarNominalDiameter = tape[ptr++];\n    let TransverseBarNominalDiameter = tape[ptr++];\n    let LongitudinalBarCrossSectionArea = tape[ptr++];\n    let TransverseBarCrossSectionArea = tape[ptr++];\n    let LongitudinalBarSpacing = tape[ptr++];\n    let TransverseBarSpacing = tape[ptr++];\n    let BendingShapeCode = tape[ptr++];\n    let BendingParameters = tape[ptr++];\n    return new IfcReinforcingMeshType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, BendingShapeCode, BendingParameters);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.MeshLength);\n    ;\n    args.push(this.MeshWidth);\n    ;\n    args.push(this.LongitudinalBarNominalDiameter);\n    ;\n    args.push(this.TransverseBarNominalDiameter);\n    ;\n    args.push(this.LongitudinalBarCrossSectionArea);\n    ;\n    args.push(this.TransverseBarCrossSectionArea);\n    ;\n    args.push(this.LongitudinalBarSpacing);\n    ;\n    args.push(this.TransverseBarSpacing);\n    ;\n    args.push(this.BendingShapeCode);\n    ;\n    args.push(this.BendingParameters);\n    ;\n    return args;\n  }\n};\nvar IfcRelAggregates = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingObject = RelatingObject;\n    this.RelatedObjects = RelatedObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingObject = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    return new IfcRelAggregates(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingObject);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssigns = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    return new IfcRelAssigns(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToActor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingActor, ActingRole) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingActor = RelatingActor;\n    this.ActingRole = ActingRole;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingActor = tape[ptr++];\n    let ActingRole = tape[ptr++];\n    return new IfcRelAssignsToActor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingActor, ActingRole);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingActor);\n    ;\n    args.push(this.ActingRole);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingControl) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingControl = RelatingControl;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingControl = tape[ptr++];\n    return new IfcRelAssignsToControl(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingControl);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingControl);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingGroup = RelatingGroup;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingGroup = tape[ptr++];\n    return new IfcRelAssignsToGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingGroup);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToGroupByFactor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup, Factor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingGroup = RelatingGroup;\n    this.Factor = Factor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingGroup = tape[ptr++];\n    let Factor = tape[ptr++];\n    return new IfcRelAssignsToGroupByFactor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup, Factor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingGroup);\n    ;\n    args.push(this.Factor);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToProcess = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProcess, QuantityInProcess) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingProcess = RelatingProcess;\n    this.QuantityInProcess = QuantityInProcess;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingProcess = tape[ptr++];\n    let QuantityInProcess = tape[ptr++];\n    return new IfcRelAssignsToProcess(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProcess, QuantityInProcess);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingProcess);\n    ;\n    args.push(this.QuantityInProcess);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToProduct = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProduct) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingProduct = RelatingProduct;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingProduct = tape[ptr++];\n    return new IfcRelAssignsToProduct(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProduct);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingProduct);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingResource) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingResource = RelatingResource;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingResource = tape[ptr++];\n    return new IfcRelAssignsToResource(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingResource);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingResource);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociates = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    return new IfcRelAssociates(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesApproval = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingApproval) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingApproval = RelatingApproval;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingApproval = tape[ptr++];\n    return new IfcRelAssociatesApproval(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingApproval);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingApproval);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesClassification = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingClassification) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingClassification = RelatingClassification;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingClassification = tape[ptr++];\n    return new IfcRelAssociatesClassification(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingClassification);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingClassification);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesConstraint = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, Intent, RelatingConstraint) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.Intent = Intent;\n    this.RelatingConstraint = RelatingConstraint;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let Intent = tape[ptr++];\n    let RelatingConstraint = tape[ptr++];\n    return new IfcRelAssociatesConstraint(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, Intent, RelatingConstraint);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.Intent);\n    ;\n    args.push(this.RelatingConstraint);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesDocument = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingDocument) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingDocument = RelatingDocument;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingDocument = tape[ptr++];\n    return new IfcRelAssociatesDocument(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingDocument);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingDocument);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesLibrary = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingLibrary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingLibrary = RelatingLibrary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingLibrary = tape[ptr++];\n    return new IfcRelAssociatesLibrary(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingLibrary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingLibrary);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesMaterial = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingMaterial) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingMaterial = RelatingMaterial;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingMaterial = tape[ptr++];\n    return new IfcRelAssociatesMaterial(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingMaterial);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingMaterial);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnects = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelConnects(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    return new IfcRelConnectsElements(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsPathElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RelatingPriorities, RelatedPriorities, RelatedConnectionType, RelatingConnectionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n    this.RelatingPriorities = RelatingPriorities;\n    this.RelatedPriorities = RelatedPriorities;\n    this.RelatedConnectionType = RelatedConnectionType;\n    this.RelatingConnectionType = RelatingConnectionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    let RelatingPriorities = tape[ptr++];\n    let RelatedPriorities = tape[ptr++];\n    let RelatedConnectionType = tape[ptr++];\n    let RelatingConnectionType = tape[ptr++];\n    return new IfcRelConnectsPathElements(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RelatingPriorities, RelatedPriorities, RelatedConnectionType, RelatingConnectionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    args.push(this.RelatingPriorities);\n    ;\n    args.push(this.RelatedPriorities);\n    ;\n    args.push(this.RelatedConnectionType);\n    ;\n    args.push(this.RelatingConnectionType);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsPortToElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingPort = RelatingPort;\n    this.RelatedElement = RelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingPort = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    return new IfcRelConnectsPortToElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingPort);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsPorts = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedPort, RealizingElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingPort = RelatingPort;\n    this.RelatedPort = RelatedPort;\n    this.RealizingElement = RealizingElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingPort = tape[ptr++];\n    let RelatedPort = tape[ptr++];\n    let RealizingElement = tape[ptr++];\n    return new IfcRelConnectsPorts(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedPort, RealizingElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingPort);\n    ;\n    args.push(this.RelatedPort);\n    ;\n    args.push(this.RealizingElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsStructuralActivity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedStructuralActivity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingElement = RelatingElement;\n    this.RelatedStructuralActivity = RelatedStructuralActivity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedStructuralActivity = tape[ptr++];\n    return new IfcRelConnectsStructuralActivity(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedStructuralActivity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedStructuralActivity);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsStructuralMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingStructuralMember = RelatingStructuralMember;\n    this.RelatedStructuralConnection = RelatedStructuralConnection;\n    this.AppliedCondition = AppliedCondition;\n    this.AdditionalConditions = AdditionalConditions;\n    this.SupportedLength = SupportedLength;\n    this.ConditionCoordinateSystem = ConditionCoordinateSystem;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingStructuralMember = tape[ptr++];\n    let RelatedStructuralConnection = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let AdditionalConditions = tape[ptr++];\n    let SupportedLength = tape[ptr++];\n    let ConditionCoordinateSystem = tape[ptr++];\n    return new IfcRelConnectsStructuralMember(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingStructuralMember);\n    ;\n    args.push(this.RelatedStructuralConnection);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.AdditionalConditions);\n    ;\n    args.push(this.SupportedLength);\n    ;\n    args.push(this.ConditionCoordinateSystem);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsWithEccentricity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem, ConnectionConstraint) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingStructuralMember = RelatingStructuralMember;\n    this.RelatedStructuralConnection = RelatedStructuralConnection;\n    this.AppliedCondition = AppliedCondition;\n    this.AdditionalConditions = AdditionalConditions;\n    this.SupportedLength = SupportedLength;\n    this.ConditionCoordinateSystem = ConditionCoordinateSystem;\n    this.ConnectionConstraint = ConnectionConstraint;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingStructuralMember = tape[ptr++];\n    let RelatedStructuralConnection = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let AdditionalConditions = tape[ptr++];\n    let SupportedLength = tape[ptr++];\n    let ConditionCoordinateSystem = tape[ptr++];\n    let ConnectionConstraint = tape[ptr++];\n    return new IfcRelConnectsWithEccentricity(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem, ConnectionConstraint);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingStructuralMember);\n    ;\n    args.push(this.RelatedStructuralConnection);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.AdditionalConditions);\n    ;\n    args.push(this.SupportedLength);\n    ;\n    args.push(this.ConditionCoordinateSystem);\n    ;\n    args.push(this.ConnectionConstraint);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsWithRealizingElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RealizingElements, ConnectionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n    this.RealizingElements = RealizingElements;\n    this.ConnectionType = ConnectionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    let RealizingElements = tape[ptr++];\n    let ConnectionType = tape[ptr++];\n    return new IfcRelConnectsWithRealizingElements(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RealizingElements, ConnectionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    args.push(this.RealizingElements);\n    ;\n    args.push(this.ConnectionType);\n    ;\n    return args;\n  }\n};\nvar IfcRelContainedInSpatialStructure = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedElements = RelatedElements;\n    this.RelatingStructure = RelatingStructure;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedElements = tape[ptr++];\n    let RelatingStructure = tape[ptr++];\n    return new IfcRelContainedInSpatialStructure(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedElements);\n    ;\n    args.push(this.RelatingStructure);\n    ;\n    return args;\n  }\n};\nvar IfcRelCoversBldgElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedCoverings) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingBuildingElement = RelatingBuildingElement;\n    this.RelatedCoverings = RelatedCoverings;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingBuildingElement = tape[ptr++];\n    let RelatedCoverings = tape[ptr++];\n    return new IfcRelCoversBldgElements(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedCoverings);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingBuildingElement);\n    ;\n    args.push(this.RelatedCoverings);\n    ;\n    return args;\n  }\n};\nvar IfcRelCoversSpaces = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedCoverings) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedCoverings = RelatedCoverings;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedCoverings = tape[ptr++];\n    return new IfcRelCoversSpaces(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedCoverings);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedCoverings);\n    ;\n    return args;\n  }\n};\nvar IfcRelDeclares = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingContext, RelatedDefinitions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingContext = RelatingContext;\n    this.RelatedDefinitions = RelatedDefinitions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingContext = tape[ptr++];\n    let RelatedDefinitions = tape[ptr++];\n    return new IfcRelDeclares(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingContext, RelatedDefinitions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingContext);\n    ;\n    args.push(this.RelatedDefinitions);\n    ;\n    return args;\n  }\n};\nvar IfcRelDecomposes = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelDecomposes(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefines = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelDefines(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByObject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingObject) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingObject = RelatingObject;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingObject = tape[ptr++];\n    return new IfcRelDefinesByObject(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingObject);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingObject);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingPropertyDefinition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingPropertyDefinition = RelatingPropertyDefinition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingPropertyDefinition = tape[ptr++];\n    return new IfcRelDefinesByProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingPropertyDefinition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingPropertyDefinition);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedPropertySets, RelatingTemplate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedPropertySets = RelatedPropertySets;\n    this.RelatingTemplate = RelatingTemplate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedPropertySets = tape[ptr++];\n    let RelatingTemplate = tape[ptr++];\n    return new IfcRelDefinesByTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedPropertySets, RelatingTemplate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedPropertySets);\n    ;\n    args.push(this.RelatingTemplate);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingType = RelatingType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingType = tape[ptr++];\n    return new IfcRelDefinesByType(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingType);\n    ;\n    return args;\n  }\n};\nvar IfcRelFillsElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingOpeningElement, RelatedBuildingElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingOpeningElement = RelatingOpeningElement;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingOpeningElement = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    return new IfcRelFillsElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingOpeningElement, RelatedBuildingElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingOpeningElement);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelFlowControlElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedControlElements, RelatingFlowElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedControlElements = RelatedControlElements;\n    this.RelatingFlowElement = RelatingFlowElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedControlElements = tape[ptr++];\n    let RelatingFlowElement = tape[ptr++];\n    return new IfcRelFlowControlElements(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedControlElements, RelatingFlowElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedControlElements);\n    ;\n    args.push(this.RelatingFlowElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelInterferesElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedElement, InterferenceGeometry, InterferenceType, ImpliedOrder) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n    this.InterferenceGeometry = InterferenceGeometry;\n    this.InterferenceType = InterferenceType;\n    this.ImpliedOrder = ImpliedOrder;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    let InterferenceGeometry = tape[ptr++];\n    let InterferenceType = tape[ptr++];\n    let ImpliedOrder = tape[ptr++];\n    return new IfcRelInterferesElements(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedElement, InterferenceGeometry, InterferenceType, ImpliedOrder);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    args.push(this.InterferenceGeometry);\n    ;\n    args.push(this.InterferenceType);\n    ;\n    args.push(this.ImpliedOrder);\n    ;\n    return args;\n  }\n};\nvar IfcRelNests = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingObject = RelatingObject;\n    this.RelatedObjects = RelatedObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingObject = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    return new IfcRelNests(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingObject);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    return args;\n  }\n};\nvar IfcRelPositions = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPositioningElement, RelatedProducts) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingPositioningElement = RelatingPositioningElement;\n    this.RelatedProducts = RelatedProducts;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingPositioningElement = tape[ptr++];\n    let RelatedProducts = tape[ptr++];\n    return new IfcRelPositions(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPositioningElement, RelatedProducts);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingPositioningElement);\n    ;\n    args.push(this.RelatedProducts);\n    ;\n    return args;\n  }\n};\nvar IfcRelProjectsElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedFeatureElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingElement = RelatingElement;\n    this.RelatedFeatureElement = RelatedFeatureElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedFeatureElement = tape[ptr++];\n    return new IfcRelProjectsElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedFeatureElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedFeatureElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelReferencedInSpatialStructure = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedElements = RelatedElements;\n    this.RelatingStructure = RelatingStructure;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedElements = tape[ptr++];\n    let RelatingStructure = tape[ptr++];\n    return new IfcRelReferencedInSpatialStructure(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedElements);\n    ;\n    args.push(this.RelatingStructure);\n    ;\n    return args;\n  }\n};\nvar IfcRelSequence = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingProcess, RelatedProcess, TimeLag, SequenceType, UserDefinedSequenceType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingProcess = RelatingProcess;\n    this.RelatedProcess = RelatedProcess;\n    this.TimeLag = TimeLag;\n    this.SequenceType = SequenceType;\n    this.UserDefinedSequenceType = UserDefinedSequenceType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingProcess = tape[ptr++];\n    let RelatedProcess = tape[ptr++];\n    let TimeLag = tape[ptr++];\n    let SequenceType = tape[ptr++];\n    let UserDefinedSequenceType = tape[ptr++];\n    return new IfcRelSequence(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingProcess, RelatedProcess, TimeLag, SequenceType, UserDefinedSequenceType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingProcess);\n    ;\n    args.push(this.RelatedProcess);\n    ;\n    args.push(this.TimeLag);\n    ;\n    args.push(this.SequenceType);\n    ;\n    args.push(this.UserDefinedSequenceType);\n    ;\n    return args;\n  }\n};\nvar IfcRelServicesBuildings = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSystem, RelatedBuildings) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSystem = RelatingSystem;\n    this.RelatedBuildings = RelatedBuildings;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSystem = tape[ptr++];\n    let RelatedBuildings = tape[ptr++];\n    return new IfcRelServicesBuildings(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSystem, RelatedBuildings);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSystem);\n    ;\n    args.push(this.RelatedBuildings);\n    ;\n    return args;\n  }\n};\nvar IfcRelSpaceBoundary = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.PhysicalOrVirtualBoundary = PhysicalOrVirtualBoundary;\n    this.InternalOrExternalBoundary = InternalOrExternalBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let PhysicalOrVirtualBoundary = tape[ptr++];\n    let InternalOrExternalBoundary = tape[ptr++];\n    return new IfcRelSpaceBoundary(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.PhysicalOrVirtualBoundary);\n    ;\n    args.push(this.InternalOrExternalBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcRelSpaceBoundary1stLevel = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.PhysicalOrVirtualBoundary = PhysicalOrVirtualBoundary;\n    this.InternalOrExternalBoundary = InternalOrExternalBoundary;\n    this.ParentBoundary = ParentBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let PhysicalOrVirtualBoundary = tape[ptr++];\n    let InternalOrExternalBoundary = tape[ptr++];\n    let ParentBoundary = tape[ptr++];\n    return new IfcRelSpaceBoundary1stLevel(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.PhysicalOrVirtualBoundary);\n    ;\n    args.push(this.InternalOrExternalBoundary);\n    ;\n    args.push(this.ParentBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcRelSpaceBoundary2ndLevel = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary, CorrespondingBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.PhysicalOrVirtualBoundary = PhysicalOrVirtualBoundary;\n    this.InternalOrExternalBoundary = InternalOrExternalBoundary;\n    this.ParentBoundary = ParentBoundary;\n    this.CorrespondingBoundary = CorrespondingBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let PhysicalOrVirtualBoundary = tape[ptr++];\n    let InternalOrExternalBoundary = tape[ptr++];\n    let ParentBoundary = tape[ptr++];\n    let CorrespondingBoundary = tape[ptr++];\n    return new IfcRelSpaceBoundary2ndLevel(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary, CorrespondingBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.PhysicalOrVirtualBoundary);\n    ;\n    args.push(this.InternalOrExternalBoundary);\n    ;\n    args.push(this.ParentBoundary);\n    ;\n    args.push(this.CorrespondingBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcRelVoidsElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedOpeningElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingBuildingElement = RelatingBuildingElement;\n    this.RelatedOpeningElement = RelatedOpeningElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingBuildingElement = tape[ptr++];\n    let RelatedOpeningElement = tape[ptr++];\n    return new IfcRelVoidsElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedOpeningElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingBuildingElement);\n    ;\n    args.push(this.RelatedOpeningElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelationship = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelationship(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcReparametrisedCompositeCurveSegment = class {\n  constructor(expressID, type, Transition, SameSense, ParentCurve, ParamLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Transition = Transition;\n    this.SameSense = SameSense;\n    this.ParentCurve = ParentCurve;\n    this.ParamLength = ParamLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Transition = tape[ptr++];\n    let SameSense = tape[ptr++];\n    let ParentCurve = tape[ptr++];\n    let ParamLength = tape[ptr++];\n    return new IfcReparametrisedCompositeCurveSegment(expressID, type, Transition, SameSense, ParentCurve, ParamLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Transition);\n    ;\n    args.push(this.SameSense);\n    ;\n    args.push(this.ParentCurve);\n    ;\n    args.push(this.ParamLength);\n    ;\n    return args;\n  }\n};\nvar IfcRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcRepresentationContext = class {\n  constructor(expressID, type, ContextIdentifier, ContextType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextIdentifier = ContextIdentifier;\n    this.ContextType = ContextType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextIdentifier = tape[ptr++];\n    let ContextType = tape[ptr++];\n    return new IfcRepresentationContext(expressID, type, ContextIdentifier, ContextType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextIdentifier);\n    ;\n    args.push(this.ContextType);\n    ;\n    return args;\n  }\n};\nvar IfcRepresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcRepresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcRepresentationMap = class {\n  constructor(expressID, type, MappingOrigin, MappedRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MappingOrigin = MappingOrigin;\n    this.MappedRepresentation = MappedRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MappingOrigin = tape[ptr++];\n    let MappedRepresentation = tape[ptr++];\n    return new IfcRepresentationMap(expressID, type, MappingOrigin, MappedRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MappingOrigin);\n    ;\n    args.push(this.MappedRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcResourceApprovalRelationship = class {\n  constructor(expressID, type, Name, Description, RelatedResourceObjects, RelatingApproval) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedResourceObjects = RelatedResourceObjects;\n    this.RelatingApproval = RelatingApproval;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedResourceObjects = tape[ptr++];\n    let RelatingApproval = tape[ptr++];\n    return new IfcResourceApprovalRelationship(expressID, type, Name, Description, RelatedResourceObjects, RelatingApproval);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedResourceObjects);\n    ;\n    args.push(this.RelatingApproval);\n    ;\n    return args;\n  }\n};\nvar IfcResourceConstraintRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingConstraint, RelatedResourceObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingConstraint = RelatingConstraint;\n    this.RelatedResourceObjects = RelatedResourceObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingConstraint = tape[ptr++];\n    let RelatedResourceObjects = tape[ptr++];\n    return new IfcResourceConstraintRelationship(expressID, type, Name, Description, RelatingConstraint, RelatedResourceObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingConstraint);\n    ;\n    args.push(this.RelatedResourceObjects);\n    ;\n    return args;\n  }\n};\nvar IfcResourceLevelRelationship = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcResourceLevelRelationship(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcResourceTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ScheduleWork, ScheduleUsage, ScheduleStart, ScheduleFinish, ScheduleContour, LevelingDelay, IsOverAllocated, StatusTime, ActualWork, ActualUsage, ActualStart, ActualFinish, RemainingWork, RemainingUsage, Completion) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.ScheduleWork = ScheduleWork;\n    this.ScheduleUsage = ScheduleUsage;\n    this.ScheduleStart = ScheduleStart;\n    this.ScheduleFinish = ScheduleFinish;\n    this.ScheduleContour = ScheduleContour;\n    this.LevelingDelay = LevelingDelay;\n    this.IsOverAllocated = IsOverAllocated;\n    this.StatusTime = StatusTime;\n    this.ActualWork = ActualWork;\n    this.ActualUsage = ActualUsage;\n    this.ActualStart = ActualStart;\n    this.ActualFinish = ActualFinish;\n    this.RemainingWork = RemainingWork;\n    this.RemainingUsage = RemainingUsage;\n    this.Completion = Completion;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let ScheduleWork = tape[ptr++];\n    let ScheduleUsage = tape[ptr++];\n    let ScheduleStart = tape[ptr++];\n    let ScheduleFinish = tape[ptr++];\n    let ScheduleContour = tape[ptr++];\n    let LevelingDelay = tape[ptr++];\n    let IsOverAllocated = tape[ptr++];\n    let StatusTime = tape[ptr++];\n    let ActualWork = tape[ptr++];\n    let ActualUsage = tape[ptr++];\n    let ActualStart = tape[ptr++];\n    let ActualFinish = tape[ptr++];\n    let RemainingWork = tape[ptr++];\n    let RemainingUsage = tape[ptr++];\n    let Completion = tape[ptr++];\n    return new IfcResourceTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ScheduleWork, ScheduleUsage, ScheduleStart, ScheduleFinish, ScheduleContour, LevelingDelay, IsOverAllocated, StatusTime, ActualWork, ActualUsage, ActualStart, ActualFinish, RemainingWork, RemainingUsage, Completion);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.ScheduleWork);\n    ;\n    args.push(this.ScheduleUsage);\n    ;\n    args.push(this.ScheduleStart);\n    ;\n    args.push(this.ScheduleFinish);\n    ;\n    args.push(this.ScheduleContour);\n    ;\n    args.push(this.LevelingDelay);\n    ;\n    args.push(this.IsOverAllocated);\n    ;\n    args.push(this.StatusTime);\n    ;\n    args.push(this.ActualWork);\n    ;\n    args.push(this.ActualUsage);\n    ;\n    args.push(this.ActualStart);\n    ;\n    args.push(this.ActualFinish);\n    ;\n    args.push(this.RemainingWork);\n    ;\n    args.push(this.RemainingUsage);\n    ;\n    args.push(this.Completion);\n    ;\n    return args;\n  }\n};\nvar IfcRevolvedAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, Axis, Angle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Axis = Axis;\n    this.Angle = Angle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Axis = tape[ptr++];\n    let Angle = tape[ptr++];\n    return new IfcRevolvedAreaSolid(expressID, type, SweptArea, Position, Axis, Angle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.Angle);\n    ;\n    return args;\n  }\n};\nvar IfcRevolvedAreaSolidTapered = class {\n  constructor(expressID, type, SweptArea, Position, Axis, Angle, EndSweptArea) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Axis = Axis;\n    this.Angle = Angle;\n    this.EndSweptArea = EndSweptArea;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Axis = tape[ptr++];\n    let Angle = tape[ptr++];\n    let EndSweptArea = tape[ptr++];\n    return new IfcRevolvedAreaSolidTapered(expressID, type, SweptArea, Position, Axis, Angle, EndSweptArea);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.Angle);\n    ;\n    args.push(this.EndSweptArea);\n    ;\n    return args;\n  }\n};\nvar IfcRightCircularCone = class {\n  constructor(expressID, type, Position, Height, BottomRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Height = Height;\n    this.BottomRadius = BottomRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Height = tape[ptr++];\n    let BottomRadius = tape[ptr++];\n    return new IfcRightCircularCone(expressID, type, Position, Height, BottomRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Height);\n    ;\n    args.push(this.BottomRadius);\n    ;\n    return args;\n  }\n};\nvar IfcRightCircularCylinder = class {\n  constructor(expressID, type, Position, Height, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Height = Height;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Height = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcRightCircularCylinder(expressID, type, Position, Height, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Height);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcRoof = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRoof(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRoofType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRoofType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRoot = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRoot(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRoundedRectangleProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, RoundingRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.XDim = XDim;\n    this.YDim = YDim;\n    this.RoundingRadius = RoundingRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let RoundingRadius = tape[ptr++];\n    return new IfcRoundedRectangleProfileDef(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, RoundingRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.RoundingRadius);\n    ;\n    return args;\n  }\n};\nvar IfcSIUnit = class {\n  constructor(expressID, type, Dimensions, UnitType, Prefix, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Prefix = Prefix;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Prefix = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcSIUnit(expressID, type, Dimensions, UnitType, Prefix, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Prefix);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcSanitaryTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSanitaryTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSanitaryTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSanitaryTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSchedulingTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    return new IfcSchedulingTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    return args;\n  }\n};\nvar IfcSeamCurve = class {\n  constructor(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Curve3D = Curve3D;\n    this.AssociatedGeometry = AssociatedGeometry;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Curve3D = tape[ptr++];\n    let AssociatedGeometry = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcSeamCurve(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Curve3D);\n    ;\n    args.push(this.AssociatedGeometry);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcSectionProperties = class {\n  constructor(expressID, type, SectionType, StartProfile, EndProfile) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SectionType = SectionType;\n    this.StartProfile = StartProfile;\n    this.EndProfile = EndProfile;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SectionType = tape[ptr++];\n    let StartProfile = tape[ptr++];\n    let EndProfile = tape[ptr++];\n    return new IfcSectionProperties(expressID, type, SectionType, StartProfile, EndProfile);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SectionType);\n    ;\n    args.push(this.StartProfile);\n    ;\n    args.push(this.EndProfile);\n    ;\n    return args;\n  }\n};\nvar IfcSectionReinforcementProperties = class {\n  constructor(expressID, type, LongitudinalStartPosition, LongitudinalEndPosition, TransversePosition, ReinforcementRole, SectionDefinition, CrossSectionReinforcementDefinitions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LongitudinalStartPosition = LongitudinalStartPosition;\n    this.LongitudinalEndPosition = LongitudinalEndPosition;\n    this.TransversePosition = TransversePosition;\n    this.ReinforcementRole = ReinforcementRole;\n    this.SectionDefinition = SectionDefinition;\n    this.CrossSectionReinforcementDefinitions = CrossSectionReinforcementDefinitions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LongitudinalStartPosition = tape[ptr++];\n    let LongitudinalEndPosition = tape[ptr++];\n    let TransversePosition = tape[ptr++];\n    let ReinforcementRole = tape[ptr++];\n    let SectionDefinition = tape[ptr++];\n    let CrossSectionReinforcementDefinitions = tape[ptr++];\n    return new IfcSectionReinforcementProperties(expressID, type, LongitudinalStartPosition, LongitudinalEndPosition, TransversePosition, ReinforcementRole, SectionDefinition, CrossSectionReinforcementDefinitions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LongitudinalStartPosition);\n    ;\n    args.push(this.LongitudinalEndPosition);\n    ;\n    args.push(this.TransversePosition);\n    ;\n    args.push(this.ReinforcementRole);\n    ;\n    args.push(this.SectionDefinition);\n    ;\n    args.push(this.CrossSectionReinforcementDefinitions);\n    ;\n    return args;\n  }\n};\nvar IfcSectionedSolid = class {\n  constructor(expressID, type, Directrix, CrossSections) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.CrossSections = CrossSections;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let CrossSections = tape[ptr++];\n    return new IfcSectionedSolid(expressID, type, Directrix, CrossSections);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.CrossSections);\n    ;\n    return args;\n  }\n};\nvar IfcSectionedSolidHorizontal = class {\n  constructor(expressID, type, Directrix, CrossSections, CrossSectionPositions, FixedAxisVertical) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.CrossSections = CrossSections;\n    this.CrossSectionPositions = CrossSectionPositions;\n    this.FixedAxisVertical = FixedAxisVertical;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let CrossSections = tape[ptr++];\n    let CrossSectionPositions = tape[ptr++];\n    let FixedAxisVertical = tape[ptr++];\n    return new IfcSectionedSolidHorizontal(expressID, type, Directrix, CrossSections, CrossSectionPositions, FixedAxisVertical);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.CrossSections);\n    ;\n    args.push(this.CrossSectionPositions);\n    ;\n    args.push(this.FixedAxisVertical);\n    ;\n    return args;\n  }\n};\nvar IfcSectionedSpine = class {\n  constructor(expressID, type, SpineCurve, CrossSections, CrossSectionPositions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SpineCurve = SpineCurve;\n    this.CrossSections = CrossSections;\n    this.CrossSectionPositions = CrossSectionPositions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SpineCurve = tape[ptr++];\n    let CrossSections = tape[ptr++];\n    let CrossSectionPositions = tape[ptr++];\n    return new IfcSectionedSpine(expressID, type, SpineCurve, CrossSections, CrossSectionPositions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SpineCurve);\n    ;\n    args.push(this.CrossSections);\n    ;\n    args.push(this.CrossSectionPositions);\n    ;\n    return args;\n  }\n};\nvar IfcSensor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSensor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSensorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSensorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcShadingDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcShadingDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcShadingDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcShadingDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcShapeAspect = class {\n  constructor(expressID, type, ShapeRepresentations, Name, Description, ProductDefinitional, PartOfProductDefinitionShape) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ShapeRepresentations = ShapeRepresentations;\n    this.Name = Name;\n    this.Description = Description;\n    this.ProductDefinitional = ProductDefinitional;\n    this.PartOfProductDefinitionShape = PartOfProductDefinitionShape;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ShapeRepresentations = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ProductDefinitional = tape[ptr++];\n    let PartOfProductDefinitionShape = tape[ptr++];\n    return new IfcShapeAspect(expressID, type, ShapeRepresentations, Name, Description, ProductDefinitional, PartOfProductDefinitionShape);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ShapeRepresentations);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ProductDefinitional);\n    ;\n    args.push(this.PartOfProductDefinitionShape);\n    ;\n    return args;\n  }\n};\nvar IfcShapeModel = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcShapeModel(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcShapeRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcShapeRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcShellBasedSurfaceModel = class {\n  constructor(expressID, type, SbsmBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SbsmBoundary = SbsmBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SbsmBoundary = tape[ptr++];\n    return new IfcShellBasedSurfaceModel(expressID, type, SbsmBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SbsmBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcSimpleProperty = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcSimpleProperty(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcSimplePropertyTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, PrimaryMeasureType, SecondaryMeasureType, Enumerators, PrimaryUnit, SecondaryUnit, Expression, AccessState) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.TemplateType = TemplateType;\n    this.PrimaryMeasureType = PrimaryMeasureType;\n    this.SecondaryMeasureType = SecondaryMeasureType;\n    this.Enumerators = Enumerators;\n    this.PrimaryUnit = PrimaryUnit;\n    this.SecondaryUnit = SecondaryUnit;\n    this.Expression = Expression;\n    this.AccessState = AccessState;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let TemplateType = tape[ptr++];\n    let PrimaryMeasureType = tape[ptr++];\n    let SecondaryMeasureType = tape[ptr++];\n    let Enumerators = tape[ptr++];\n    let PrimaryUnit = tape[ptr++];\n    let SecondaryUnit = tape[ptr++];\n    let Expression = tape[ptr++];\n    let AccessState = tape[ptr++];\n    return new IfcSimplePropertyTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, PrimaryMeasureType, SecondaryMeasureType, Enumerators, PrimaryUnit, SecondaryUnit, Expression, AccessState);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.TemplateType);\n    ;\n    args.push(this.PrimaryMeasureType);\n    ;\n    args.push(this.SecondaryMeasureType);\n    ;\n    args.push(this.Enumerators);\n    ;\n    args.push(this.PrimaryUnit);\n    ;\n    args.push(this.SecondaryUnit);\n    ;\n    args.push(this.Expression);\n    ;\n    args.push(this.AccessState);\n    ;\n    return args;\n  }\n};\nvar IfcSite = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, RefLatitude, RefLongitude, RefElevation, LandTitleNumber, SiteAddress) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.RefLatitude = RefLatitude;\n    this.RefLongitude = RefLongitude;\n    this.RefElevation = RefElevation;\n    this.LandTitleNumber = LandTitleNumber;\n    this.SiteAddress = SiteAddress;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let RefLatitude = tape[ptr++];\n    let RefLongitude = tape[ptr++];\n    let RefElevation = tape[ptr++];\n    let LandTitleNumber = tape[ptr++];\n    let SiteAddress = tape[ptr++];\n    return new IfcSite(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, RefLatitude, RefLongitude, RefElevation, LandTitleNumber, SiteAddress);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.RefLatitude);\n    ;\n    args.push(this.RefLongitude);\n    ;\n    args.push(this.RefElevation);\n    ;\n    args.push(this.LandTitleNumber);\n    ;\n    args.push(this.SiteAddress);\n    ;\n    return args;\n  }\n};\nvar IfcSlab = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlab(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlabElementedCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlabElementedCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlabStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlabStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlabType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlabType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlippageConnectionCondition = class {\n  constructor(expressID, type, Name, SlippageX, SlippageY, SlippageZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.SlippageX = SlippageX;\n    this.SlippageY = SlippageY;\n    this.SlippageZ = SlippageZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let SlippageX = tape[ptr++];\n    let SlippageY = tape[ptr++];\n    let SlippageZ = tape[ptr++];\n    return new IfcSlippageConnectionCondition(expressID, type, Name, SlippageX, SlippageY, SlippageZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.SlippageX);\n    ;\n    args.push(this.SlippageY);\n    ;\n    args.push(this.SlippageZ);\n    ;\n    return args;\n  }\n};\nvar IfcSolarDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSolarDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSolarDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSolarDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSolidModel = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcSolidModel(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcSpace = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType, ElevationWithFlooring) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.PredefinedType = PredefinedType;\n    this.ElevationWithFlooring = ElevationWithFlooring;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ElevationWithFlooring = tape[ptr++];\n    return new IfcSpace(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType, ElevationWithFlooring);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ElevationWithFlooring);\n    ;\n    return args;\n  }\n};\nvar IfcSpaceHeater = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSpaceHeater(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSpaceHeaterType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSpaceHeaterType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSpaceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcSpaceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcSpatialElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcSpatialElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialStructureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    return new IfcSpatialStructureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialStructureElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcSpatialStructureElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialZone = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSpatialZone(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialZoneType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcSpatialZoneType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcSphere = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcSphere(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcSphericalSurface = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcSphericalSurface(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcStackTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStackTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStackTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStackTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStair = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStair(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStairFlight = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NumberOfRisers, NumberOfTreads, RiserHeight, TreadLength, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.NumberOfRisers = NumberOfRisers;\n    this.NumberOfTreads = NumberOfTreads;\n    this.RiserHeight = RiserHeight;\n    this.TreadLength = TreadLength;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let NumberOfRisers = tape[ptr++];\n    let NumberOfTreads = tape[ptr++];\n    let RiserHeight = tape[ptr++];\n    let TreadLength = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStairFlight(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NumberOfRisers, NumberOfTreads, RiserHeight, TreadLength, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.NumberOfRisers);\n    ;\n    args.push(this.NumberOfTreads);\n    ;\n    args.push(this.RiserHeight);\n    ;\n    args.push(this.TreadLength);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStairFlightType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStairFlightType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStairType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStairType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    return new IfcStructuralAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralActivity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    return new IfcStructuralActivity(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralAnalysisModel = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, OrientationOf2DPlane, LoadedBy, HasResults, SharedPlacement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.OrientationOf2DPlane = OrientationOf2DPlane;\n    this.LoadedBy = LoadedBy;\n    this.HasResults = HasResults;\n    this.SharedPlacement = SharedPlacement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OrientationOf2DPlane = tape[ptr++];\n    let LoadedBy = tape[ptr++];\n    let HasResults = tape[ptr++];\n    let SharedPlacement = tape[ptr++];\n    return new IfcStructuralAnalysisModel(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, OrientationOf2DPlane, LoadedBy, HasResults, SharedPlacement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OrientationOf2DPlane);\n    ;\n    args.push(this.LoadedBy);\n    ;\n    args.push(this.HasResults);\n    ;\n    args.push(this.SharedPlacement);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    return new IfcStructuralConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralConnectionCondition = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralConnectionCondition(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralCurveAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcStructuralCurveConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcStructuralCurveMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveMemberVarying = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcStructuralCurveMemberVarying(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralCurveReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralItem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcStructuralItem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLinearAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralLinearAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoad = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralLoad(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose, SelfWeightCoefficients) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.ActionType = ActionType;\n    this.ActionSource = ActionSource;\n    this.Coefficient = Coefficient;\n    this.Purpose = Purpose;\n    this.SelfWeightCoefficients = SelfWeightCoefficients;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ActionType = tape[ptr++];\n    let ActionSource = tape[ptr++];\n    let Coefficient = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let SelfWeightCoefficients = tape[ptr++];\n    return new IfcStructuralLoadCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose, SelfWeightCoefficients);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ActionType);\n    ;\n    args.push(this.ActionSource);\n    ;\n    args.push(this.Coefficient);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.SelfWeightCoefficients);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadConfiguration = class {\n  constructor(expressID, type, Name, Values, Locations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Values = Values;\n    this.Locations = Locations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Values = tape[ptr++];\n    let Locations = tape[ptr++];\n    return new IfcStructuralLoadConfiguration(expressID, type, Name, Values, Locations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Values);\n    ;\n    args.push(this.Locations);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.ActionType = ActionType;\n    this.ActionSource = ActionSource;\n    this.Coefficient = Coefficient;\n    this.Purpose = Purpose;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ActionType = tape[ptr++];\n    let ActionSource = tape[ptr++];\n    let Coefficient = tape[ptr++];\n    let Purpose = tape[ptr++];\n    return new IfcStructuralLoadGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ActionType);\n    ;\n    args.push(this.ActionSource);\n    ;\n    args.push(this.Coefficient);\n    ;\n    args.push(this.Purpose);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadLinearForce = class {\n  constructor(expressID, type, Name, LinearForceX, LinearForceY, LinearForceZ, LinearMomentX, LinearMomentY, LinearMomentZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LinearForceX = LinearForceX;\n    this.LinearForceY = LinearForceY;\n    this.LinearForceZ = LinearForceZ;\n    this.LinearMomentX = LinearMomentX;\n    this.LinearMomentY = LinearMomentY;\n    this.LinearMomentZ = LinearMomentZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LinearForceX = tape[ptr++];\n    let LinearForceY = tape[ptr++];\n    let LinearForceZ = tape[ptr++];\n    let LinearMomentX = tape[ptr++];\n    let LinearMomentY = tape[ptr++];\n    let LinearMomentZ = tape[ptr++];\n    return new IfcStructuralLoadLinearForce(expressID, type, Name, LinearForceX, LinearForceY, LinearForceZ, LinearMomentX, LinearMomentY, LinearMomentZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LinearForceX);\n    ;\n    args.push(this.LinearForceY);\n    ;\n    args.push(this.LinearForceZ);\n    ;\n    args.push(this.LinearMomentX);\n    ;\n    args.push(this.LinearMomentY);\n    ;\n    args.push(this.LinearMomentZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadOrResult = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralLoadOrResult(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadPlanarForce = class {\n  constructor(expressID, type, Name, PlanarForceX, PlanarForceY, PlanarForceZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.PlanarForceX = PlanarForceX;\n    this.PlanarForceY = PlanarForceY;\n    this.PlanarForceZ = PlanarForceZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let PlanarForceX = tape[ptr++];\n    let PlanarForceY = tape[ptr++];\n    let PlanarForceZ = tape[ptr++];\n    return new IfcStructuralLoadPlanarForce(expressID, type, Name, PlanarForceX, PlanarForceY, PlanarForceZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.PlanarForceX);\n    ;\n    args.push(this.PlanarForceY);\n    ;\n    args.push(this.PlanarForceZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleDisplacement = class {\n  constructor(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DisplacementX = DisplacementX;\n    this.DisplacementY = DisplacementY;\n    this.DisplacementZ = DisplacementZ;\n    this.RotationalDisplacementRX = RotationalDisplacementRX;\n    this.RotationalDisplacementRY = RotationalDisplacementRY;\n    this.RotationalDisplacementRZ = RotationalDisplacementRZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DisplacementX = tape[ptr++];\n    let DisplacementY = tape[ptr++];\n    let DisplacementZ = tape[ptr++];\n    let RotationalDisplacementRX = tape[ptr++];\n    let RotationalDisplacementRY = tape[ptr++];\n    let RotationalDisplacementRZ = tape[ptr++];\n    return new IfcStructuralLoadSingleDisplacement(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DisplacementX);\n    ;\n    args.push(this.DisplacementY);\n    ;\n    args.push(this.DisplacementZ);\n    ;\n    args.push(this.RotationalDisplacementRX);\n    ;\n    args.push(this.RotationalDisplacementRY);\n    ;\n    args.push(this.RotationalDisplacementRZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleDisplacementDistortion = class {\n  constructor(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ, Distortion) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DisplacementX = DisplacementX;\n    this.DisplacementY = DisplacementY;\n    this.DisplacementZ = DisplacementZ;\n    this.RotationalDisplacementRX = RotationalDisplacementRX;\n    this.RotationalDisplacementRY = RotationalDisplacementRY;\n    this.RotationalDisplacementRZ = RotationalDisplacementRZ;\n    this.Distortion = Distortion;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DisplacementX = tape[ptr++];\n    let DisplacementY = tape[ptr++];\n    let DisplacementZ = tape[ptr++];\n    let RotationalDisplacementRX = tape[ptr++];\n    let RotationalDisplacementRY = tape[ptr++];\n    let RotationalDisplacementRZ = tape[ptr++];\n    let Distortion = tape[ptr++];\n    return new IfcStructuralLoadSingleDisplacementDistortion(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ, Distortion);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DisplacementX);\n    ;\n    args.push(this.DisplacementY);\n    ;\n    args.push(this.DisplacementZ);\n    ;\n    args.push(this.RotationalDisplacementRX);\n    ;\n    args.push(this.RotationalDisplacementRY);\n    ;\n    args.push(this.RotationalDisplacementRZ);\n    ;\n    args.push(this.Distortion);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleForce = class {\n  constructor(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.ForceX = ForceX;\n    this.ForceY = ForceY;\n    this.ForceZ = ForceZ;\n    this.MomentX = MomentX;\n    this.MomentY = MomentY;\n    this.MomentZ = MomentZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let ForceX = tape[ptr++];\n    let ForceY = tape[ptr++];\n    let ForceZ = tape[ptr++];\n    let MomentX = tape[ptr++];\n    let MomentY = tape[ptr++];\n    let MomentZ = tape[ptr++];\n    return new IfcStructuralLoadSingleForce(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.ForceX);\n    ;\n    args.push(this.ForceY);\n    ;\n    args.push(this.ForceZ);\n    ;\n    args.push(this.MomentX);\n    ;\n    args.push(this.MomentY);\n    ;\n    args.push(this.MomentZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleForceWarping = class {\n  constructor(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ, WarpingMoment) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.ForceX = ForceX;\n    this.ForceY = ForceY;\n    this.ForceZ = ForceZ;\n    this.MomentX = MomentX;\n    this.MomentY = MomentY;\n    this.MomentZ = MomentZ;\n    this.WarpingMoment = WarpingMoment;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let ForceX = tape[ptr++];\n    let ForceY = tape[ptr++];\n    let ForceZ = tape[ptr++];\n    let MomentX = tape[ptr++];\n    let MomentY = tape[ptr++];\n    let MomentZ = tape[ptr++];\n    let WarpingMoment = tape[ptr++];\n    return new IfcStructuralLoadSingleForceWarping(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ, WarpingMoment);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.ForceX);\n    ;\n    args.push(this.ForceY);\n    ;\n    args.push(this.ForceZ);\n    ;\n    args.push(this.MomentX);\n    ;\n    args.push(this.MomentY);\n    ;\n    args.push(this.MomentZ);\n    ;\n    args.push(this.WarpingMoment);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadStatic = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralLoadStatic(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadTemperature = class {\n  constructor(expressID, type, Name, DeltaTConstant, DeltaTY, DeltaTZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DeltaTConstant = DeltaTConstant;\n    this.DeltaTY = DeltaTY;\n    this.DeltaTZ = DeltaTZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DeltaTConstant = tape[ptr++];\n    let DeltaTY = tape[ptr++];\n    let DeltaTZ = tape[ptr++];\n    return new IfcStructuralLoadTemperature(expressID, type, Name, DeltaTConstant, DeltaTY, DeltaTZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DeltaTConstant);\n    ;\n    args.push(this.DeltaTY);\n    ;\n    args.push(this.DeltaTZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcStructuralMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPlanarAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralPlanarAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPointAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    return new IfcStructuralPointAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPointConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, ConditionCoordinateSystem) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n    this.ConditionCoordinateSystem = ConditionCoordinateSystem;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let ConditionCoordinateSystem = tape[ptr++];\n    return new IfcStructuralPointConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, ConditionCoordinateSystem);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.ConditionCoordinateSystem);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPointReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    return new IfcStructuralPointReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    return new IfcStructuralReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralResultGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheoryType, ResultForLoadGroup, IsLinear) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.TheoryType = TheoryType;\n    this.ResultForLoadGroup = ResultForLoadGroup;\n    this.IsLinear = IsLinear;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let TheoryType = tape[ptr++];\n    let ResultForLoadGroup = tape[ptr++];\n    let IsLinear = tape[ptr++];\n    return new IfcStructuralResultGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheoryType, ResultForLoadGroup, IsLinear);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.TheoryType);\n    ;\n    args.push(this.ResultForLoadGroup);\n    ;\n    args.push(this.IsLinear);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralSurfaceAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    return new IfcStructuralSurfaceConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Thickness = Thickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Thickness = tape[ptr++];\n    return new IfcStructuralSurfaceMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Thickness);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceMemberVarying = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Thickness = Thickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Thickness = tape[ptr++];\n    return new IfcStructuralSurfaceMemberVarying(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Thickness);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralSurfaceReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStyleModel = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcStyleModel(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcStyledItem = class {\n  constructor(expressID, type, Item, Styles, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Item = Item;\n    this.Styles = Styles;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Item = tape[ptr++];\n    let Styles = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcStyledItem(expressID, type, Item, Styles, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Item);\n    ;\n    args.push(this.Styles);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStyledRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcStyledRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcSubContractResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSubContractResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSubContractResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSubContractResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSubedge = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd, ParentEdge) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n    this.ParentEdge = ParentEdge;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    let ParentEdge = tape[ptr++];\n    return new IfcSubedge(expressID, type, EdgeStart, EdgeEnd, ParentEdge);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    args.push(this.ParentEdge);\n    ;\n    return args;\n  }\n};\nvar IfcSurface = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcSurface(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcSurfaceCurve = class {\n  constructor(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Curve3D = Curve3D;\n    this.AssociatedGeometry = AssociatedGeometry;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Curve3D = tape[ptr++];\n    let AssociatedGeometry = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcSurfaceCurve(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Curve3D);\n    ;\n    args.push(this.AssociatedGeometry);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceCurveSweptAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, ReferenceSurface) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Directrix = Directrix;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n    this.ReferenceSurface = ReferenceSurface;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Directrix = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    let ReferenceSurface = tape[ptr++];\n    return new IfcSurfaceCurveSweptAreaSolid(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, ReferenceSurface);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Directrix);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    args.push(this.ReferenceSurface);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceFeature = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSurfaceFeature(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceOfLinearExtrusion = class {\n  constructor(expressID, type, SweptCurve, Position, ExtrudedDirection, Depth) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptCurve = SweptCurve;\n    this.Position = Position;\n    this.ExtrudedDirection = ExtrudedDirection;\n    this.Depth = Depth;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptCurve = tape[ptr++];\n    let Position = tape[ptr++];\n    let ExtrudedDirection = tape[ptr++];\n    let Depth = tape[ptr++];\n    return new IfcSurfaceOfLinearExtrusion(expressID, type, SweptCurve, Position, ExtrudedDirection, Depth);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptCurve);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ExtrudedDirection);\n    ;\n    args.push(this.Depth);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceOfRevolution = class {\n  constructor(expressID, type, SweptCurve, Position, AxisPosition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptCurve = SweptCurve;\n    this.Position = Position;\n    this.AxisPosition = AxisPosition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptCurve = tape[ptr++];\n    let Position = tape[ptr++];\n    let AxisPosition = tape[ptr++];\n    return new IfcSurfaceOfRevolution(expressID, type, SweptCurve, Position, AxisPosition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptCurve);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.AxisPosition);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceReinforcementArea = class {\n  constructor(expressID, type, Name, SurfaceReinforcement1, SurfaceReinforcement2, ShearReinforcement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.SurfaceReinforcement1 = SurfaceReinforcement1;\n    this.SurfaceReinforcement2 = SurfaceReinforcement2;\n    this.ShearReinforcement = ShearReinforcement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let SurfaceReinforcement1 = tape[ptr++];\n    let SurfaceReinforcement2 = tape[ptr++];\n    let ShearReinforcement = tape[ptr++];\n    return new IfcSurfaceReinforcementArea(expressID, type, Name, SurfaceReinforcement1, SurfaceReinforcement2, ShearReinforcement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.SurfaceReinforcement1);\n    ;\n    args.push(this.SurfaceReinforcement2);\n    ;\n    args.push(this.ShearReinforcement);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyle = class {\n  constructor(expressID, type, Name, Side, Styles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Side = Side;\n    this.Styles = Styles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Side = tape[ptr++];\n    let Styles = tape[ptr++];\n    return new IfcSurfaceStyle(expressID, type, Name, Side, Styles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Side);\n    ;\n    args.push(this.Styles);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleLighting = class {\n  constructor(expressID, type, DiffuseTransmissionColour, DiffuseReflectionColour, TransmissionColour, ReflectanceColour) {\n    this.expressID = expressID;\n    this.type = type;\n    this.DiffuseTransmissionColour = DiffuseTransmissionColour;\n    this.DiffuseReflectionColour = DiffuseReflectionColour;\n    this.TransmissionColour = TransmissionColour;\n    this.ReflectanceColour = ReflectanceColour;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let DiffuseTransmissionColour = tape[ptr++];\n    let DiffuseReflectionColour = tape[ptr++];\n    let TransmissionColour = tape[ptr++];\n    let ReflectanceColour = tape[ptr++];\n    return new IfcSurfaceStyleLighting(expressID, type, DiffuseTransmissionColour, DiffuseReflectionColour, TransmissionColour, ReflectanceColour);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.DiffuseTransmissionColour);\n    ;\n    args.push(this.DiffuseReflectionColour);\n    ;\n    args.push(this.TransmissionColour);\n    ;\n    args.push(this.ReflectanceColour);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleRefraction = class {\n  constructor(expressID, type, RefractionIndex, DispersionFactor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RefractionIndex = RefractionIndex;\n    this.DispersionFactor = DispersionFactor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RefractionIndex = tape[ptr++];\n    let DispersionFactor = tape[ptr++];\n    return new IfcSurfaceStyleRefraction(expressID, type, RefractionIndex, DispersionFactor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RefractionIndex);\n    ;\n    args.push(this.DispersionFactor);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleRendering = class {\n  constructor(expressID, type, SurfaceColour, Transparency, DiffuseColour, TransmissionColour, DiffuseTransmissionColour, ReflectionColour, SpecularColour, SpecularHighlight, ReflectanceMethod) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SurfaceColour = SurfaceColour;\n    this.Transparency = Transparency;\n    this.DiffuseColour = DiffuseColour;\n    this.TransmissionColour = TransmissionColour;\n    this.DiffuseTransmissionColour = DiffuseTransmissionColour;\n    this.ReflectionColour = ReflectionColour;\n    this.SpecularColour = SpecularColour;\n    this.SpecularHighlight = SpecularHighlight;\n    this.ReflectanceMethod = ReflectanceMethod;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SurfaceColour = tape[ptr++];\n    let Transparency = tape[ptr++];\n    let DiffuseColour = tape[ptr++];\n    let TransmissionColour = tape[ptr++];\n    let DiffuseTransmissionColour = tape[ptr++];\n    let ReflectionColour = tape[ptr++];\n    let SpecularColour = tape[ptr++];\n    let SpecularHighlight = tape[ptr++];\n    let ReflectanceMethod = tape[ptr++];\n    return new IfcSurfaceStyleRendering(expressID, type, SurfaceColour, Transparency, DiffuseColour, TransmissionColour, DiffuseTransmissionColour, ReflectionColour, SpecularColour, SpecularHighlight, ReflectanceMethod);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SurfaceColour);\n    ;\n    args.push(this.Transparency);\n    ;\n    args.push(this.DiffuseColour);\n    ;\n    args.push(this.TransmissionColour);\n    ;\n    args.push(this.DiffuseTransmissionColour);\n    ;\n    args.push(this.ReflectionColour);\n    ;\n    args.push(this.SpecularColour);\n    ;\n    args.push(this.SpecularHighlight);\n    ;\n    args.push(this.ReflectanceMethod);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleShading = class {\n  constructor(expressID, type, SurfaceColour, Transparency) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SurfaceColour = SurfaceColour;\n    this.Transparency = Transparency;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SurfaceColour = tape[ptr++];\n    let Transparency = tape[ptr++];\n    return new IfcSurfaceStyleShading(expressID, type, SurfaceColour, Transparency);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SurfaceColour);\n    ;\n    args.push(this.Transparency);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleWithTextures = class {\n  constructor(expressID, type, Textures) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Textures = Textures;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Textures = tape[ptr++];\n    return new IfcSurfaceStyleWithTextures(expressID, type, Textures);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Textures);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    return new IfcSurfaceTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    return args;\n  }\n};\nvar IfcSweptAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    return new IfcSweptAreaSolid(expressID, type, SweptArea, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcSweptDiskSolid = class {\n  constructor(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.Radius = Radius;\n    this.InnerRadius = InnerRadius;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let Radius = tape[ptr++];\n    let InnerRadius = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    return new IfcSweptDiskSolid(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.InnerRadius);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    return args;\n  }\n};\nvar IfcSweptDiskSolidPolygonal = class {\n  constructor(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam, FilletRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.Radius = Radius;\n    this.InnerRadius = InnerRadius;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n    this.FilletRadius = FilletRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let Radius = tape[ptr++];\n    let InnerRadius = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    return new IfcSweptDiskSolidPolygonal(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam, FilletRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.InnerRadius);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    return args;\n  }\n};\nvar IfcSweptSurface = class {\n  constructor(expressID, type, SweptCurve, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptCurve = SweptCurve;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptCurve = tape[ptr++];\n    let Position = tape[ptr++];\n    return new IfcSweptSurface(expressID, type, SweptCurve, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptCurve);\n    ;\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcSwitchingDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSwitchingDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSwitchingDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSwitchingDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSystem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    return new IfcSystem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    return args;\n  }\n};\nvar IfcSystemFurnitureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSystemFurnitureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSystemFurnitureElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSystemFurnitureElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, WebEdgeRadius, WebSlope, FlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.FlangeWidth = FlangeWidth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.FlangeEdgeRadius = FlangeEdgeRadius;\n    this.WebEdgeRadius = WebEdgeRadius;\n    this.WebSlope = WebSlope;\n    this.FlangeSlope = FlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let FlangeWidth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let FlangeEdgeRadius = tape[ptr++];\n    let WebEdgeRadius = tape[ptr++];\n    let WebSlope = tape[ptr++];\n    let FlangeSlope = tape[ptr++];\n    return new IfcTShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, WebEdgeRadius, WebSlope, FlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.FlangeWidth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.FlangeEdgeRadius);\n    ;\n    args.push(this.WebEdgeRadius);\n    ;\n    args.push(this.WebSlope);\n    ;\n    args.push(this.FlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcTable = class {\n  constructor(expressID, type, Name, Rows, Columns) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Rows = Rows;\n    this.Columns = Columns;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Rows = tape[ptr++];\n    let Columns = tape[ptr++];\n    return new IfcTable(expressID, type, Name, Rows, Columns);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Rows);\n    ;\n    args.push(this.Columns);\n    ;\n    return args;\n  }\n};\nvar IfcTableColumn = class {\n  constructor(expressID, type, Identifier, Name, Description, Unit, ReferencePath) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identifier = Identifier;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.ReferencePath = ReferencePath;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identifier = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let ReferencePath = tape[ptr++];\n    return new IfcTableColumn(expressID, type, Identifier, Name, Description, Unit, ReferencePath);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identifier);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.ReferencePath);\n    ;\n    return args;\n  }\n};\nvar IfcTableRow = class {\n  constructor(expressID, type, RowCells, IsHeading) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RowCells = RowCells;\n    this.IsHeading = IsHeading;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RowCells = tape[ptr++];\n    let IsHeading = tape[ptr++];\n    return new IfcTableRow(expressID, type, RowCells, IsHeading);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RowCells);\n    ;\n    args.push(this.IsHeading);\n    ;\n    return args;\n  }\n};\nvar IfcTank = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTank(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTankType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTankType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTask = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Status, WorkMethod, IsMilestone, Priority, TaskTime, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Status = Status;\n    this.WorkMethod = WorkMethod;\n    this.IsMilestone = IsMilestone;\n    this.Priority = Priority;\n    this.TaskTime = TaskTime;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Status = tape[ptr++];\n    let WorkMethod = tape[ptr++];\n    let IsMilestone = tape[ptr++];\n    let Priority = tape[ptr++];\n    let TaskTime = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTask(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Status, WorkMethod, IsMilestone, Priority, TaskTime, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.WorkMethod);\n    ;\n    args.push(this.IsMilestone);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.TaskTime);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTaskTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.DurationType = DurationType;\n    this.ScheduleDuration = ScheduleDuration;\n    this.ScheduleStart = ScheduleStart;\n    this.ScheduleFinish = ScheduleFinish;\n    this.EarlyStart = EarlyStart;\n    this.EarlyFinish = EarlyFinish;\n    this.LateStart = LateStart;\n    this.LateFinish = LateFinish;\n    this.FreeFloat = FreeFloat;\n    this.TotalFloat = TotalFloat;\n    this.IsCritical = IsCritical;\n    this.StatusTime = StatusTime;\n    this.ActualDuration = ActualDuration;\n    this.ActualStart = ActualStart;\n    this.ActualFinish = ActualFinish;\n    this.RemainingTime = RemainingTime;\n    this.Completion = Completion;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let DurationType = tape[ptr++];\n    let ScheduleDuration = tape[ptr++];\n    let ScheduleStart = tape[ptr++];\n    let ScheduleFinish = tape[ptr++];\n    let EarlyStart = tape[ptr++];\n    let EarlyFinish = tape[ptr++];\n    let LateStart = tape[ptr++];\n    let LateFinish = tape[ptr++];\n    let FreeFloat = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let IsCritical = tape[ptr++];\n    let StatusTime = tape[ptr++];\n    let ActualDuration = tape[ptr++];\n    let ActualStart = tape[ptr++];\n    let ActualFinish = tape[ptr++];\n    let RemainingTime = tape[ptr++];\n    let Completion = tape[ptr++];\n    return new IfcTaskTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.DurationType);\n    ;\n    args.push(this.ScheduleDuration);\n    ;\n    args.push(this.ScheduleStart);\n    ;\n    args.push(this.ScheduleFinish);\n    ;\n    args.push(this.EarlyStart);\n    ;\n    args.push(this.EarlyFinish);\n    ;\n    args.push(this.LateStart);\n    ;\n    args.push(this.LateFinish);\n    ;\n    args.push(this.FreeFloat);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.IsCritical);\n    ;\n    args.push(this.StatusTime);\n    ;\n    args.push(this.ActualDuration);\n    ;\n    args.push(this.ActualStart);\n    ;\n    args.push(this.ActualFinish);\n    ;\n    args.push(this.RemainingTime);\n    ;\n    args.push(this.Completion);\n    ;\n    return args;\n  }\n};\nvar IfcTaskTimeRecurring = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion, Recurrence) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.DurationType = DurationType;\n    this.ScheduleDuration = ScheduleDuration;\n    this.ScheduleStart = ScheduleStart;\n    this.ScheduleFinish = ScheduleFinish;\n    this.EarlyStart = EarlyStart;\n    this.EarlyFinish = EarlyFinish;\n    this.LateStart = LateStart;\n    this.LateFinish = LateFinish;\n    this.FreeFloat = FreeFloat;\n    this.TotalFloat = TotalFloat;\n    this.IsCritical = IsCritical;\n    this.StatusTime = StatusTime;\n    this.ActualDuration = ActualDuration;\n    this.ActualStart = ActualStart;\n    this.ActualFinish = ActualFinish;\n    this.RemainingTime = RemainingTime;\n    this.Completion = Completion;\n    this.Recurrence = Recurrence;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let DurationType = tape[ptr++];\n    let ScheduleDuration = tape[ptr++];\n    let ScheduleStart = tape[ptr++];\n    let ScheduleFinish = tape[ptr++];\n    let EarlyStart = tape[ptr++];\n    let EarlyFinish = tape[ptr++];\n    let LateStart = tape[ptr++];\n    let LateFinish = tape[ptr++];\n    let FreeFloat = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let IsCritical = tape[ptr++];\n    let StatusTime = tape[ptr++];\n    let ActualDuration = tape[ptr++];\n    let ActualStart = tape[ptr++];\n    let ActualFinish = tape[ptr++];\n    let RemainingTime = tape[ptr++];\n    let Completion = tape[ptr++];\n    let Recurrence = tape[ptr++];\n    return new IfcTaskTimeRecurring(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion, Recurrence);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.DurationType);\n    ;\n    args.push(this.ScheduleDuration);\n    ;\n    args.push(this.ScheduleStart);\n    ;\n    args.push(this.ScheduleFinish);\n    ;\n    args.push(this.EarlyStart);\n    ;\n    args.push(this.EarlyFinish);\n    ;\n    args.push(this.LateStart);\n    ;\n    args.push(this.LateFinish);\n    ;\n    args.push(this.FreeFloat);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.IsCritical);\n    ;\n    args.push(this.StatusTime);\n    ;\n    args.push(this.ActualDuration);\n    ;\n    args.push(this.ActualStart);\n    ;\n    args.push(this.ActualFinish);\n    ;\n    args.push(this.RemainingTime);\n    ;\n    args.push(this.Completion);\n    ;\n    args.push(this.Recurrence);\n    ;\n    return args;\n  }\n};\nvar IfcTaskType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, WorkMethod) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n    this.PredefinedType = PredefinedType;\n    this.WorkMethod = WorkMethod;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let WorkMethod = tape[ptr++];\n    return new IfcTaskType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, WorkMethod);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.WorkMethod);\n    ;\n    return args;\n  }\n};\nvar IfcTelecomAddress = class {\n  constructor(expressID, type, Purpose, Description, UserDefinedPurpose, TelephoneNumbers, FacsimileNumbers, PagerNumber, ElectronicMailAddresses, WWWHomePageURL, MessagingIDs) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Purpose = Purpose;\n    this.Description = Description;\n    this.UserDefinedPurpose = UserDefinedPurpose;\n    this.TelephoneNumbers = TelephoneNumbers;\n    this.FacsimileNumbers = FacsimileNumbers;\n    this.PagerNumber = PagerNumber;\n    this.ElectronicMailAddresses = ElectronicMailAddresses;\n    this.WWWHomePageURL = WWWHomePageURL;\n    this.MessagingIDs = MessagingIDs;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Purpose = tape[ptr++];\n    let Description = tape[ptr++];\n    let UserDefinedPurpose = tape[ptr++];\n    let TelephoneNumbers = tape[ptr++];\n    let FacsimileNumbers = tape[ptr++];\n    let PagerNumber = tape[ptr++];\n    let ElectronicMailAddresses = tape[ptr++];\n    let WWWHomePageURL = tape[ptr++];\n    let MessagingIDs = tape[ptr++];\n    return new IfcTelecomAddress(expressID, type, Purpose, Description, UserDefinedPurpose, TelephoneNumbers, FacsimileNumbers, PagerNumber, ElectronicMailAddresses, WWWHomePageURL, MessagingIDs);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Purpose);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UserDefinedPurpose);\n    ;\n    args.push(this.TelephoneNumbers);\n    ;\n    args.push(this.FacsimileNumbers);\n    ;\n    args.push(this.PagerNumber);\n    ;\n    args.push(this.ElectronicMailAddresses);\n    ;\n    args.push(this.WWWHomePageURL);\n    ;\n    args.push(this.MessagingIDs);\n    ;\n    return args;\n  }\n};\nvar IfcTendon = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType, NominalDiameter, CrossSectionArea, TensionForce, PreStress, FrictionCoefficient, AnchorageSlip, MinCurvatureRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.TensionForce = TensionForce;\n    this.PreStress = PreStress;\n    this.FrictionCoefficient = FrictionCoefficient;\n    this.AnchorageSlip = AnchorageSlip;\n    this.MinCurvatureRadius = MinCurvatureRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let TensionForce = tape[ptr++];\n    let PreStress = tape[ptr++];\n    let FrictionCoefficient = tape[ptr++];\n    let AnchorageSlip = tape[ptr++];\n    let MinCurvatureRadius = tape[ptr++];\n    return new IfcTendon(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType, NominalDiameter, CrossSectionArea, TensionForce, PreStress, FrictionCoefficient, AnchorageSlip, MinCurvatureRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.TensionForce);\n    ;\n    args.push(this.PreStress);\n    ;\n    args.push(this.FrictionCoefficient);\n    ;\n    args.push(this.AnchorageSlip);\n    ;\n    args.push(this.MinCurvatureRadius);\n    ;\n    return args;\n  }\n};\nvar IfcTendonAnchor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonAnchor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonAnchorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonAnchorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonConduit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonConduit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonConduitType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonConduitType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, SheathDiameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.SheathDiameter = SheathDiameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let SheathDiameter = tape[ptr++];\n    return new IfcTendonType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, SheathDiameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.SheathDiameter);\n    ;\n    return args;\n  }\n};\nvar IfcTessellatedFaceSet = class {\n  constructor(expressID, type, Coordinates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    return new IfcTessellatedFaceSet(expressID, type, Coordinates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    return args;\n  }\n};\nvar IfcTessellatedItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcTessellatedItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcTextLiteral = class {\n  constructor(expressID, type, Literal, Placement, Path) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Literal = Literal;\n    this.Placement = Placement;\n    this.Path = Path;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Literal = tape[ptr++];\n    let Placement = tape[ptr++];\n    let Path = tape[ptr++];\n    return new IfcTextLiteral(expressID, type, Literal, Placement, Path);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Literal);\n    ;\n    args.push(this.Placement);\n    ;\n    args.push(this.Path);\n    ;\n    return args;\n  }\n};\nvar IfcTextLiteralWithExtent = class {\n  constructor(expressID, type, Literal, Placement, Path, Extent, BoxAlignment) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Literal = Literal;\n    this.Placement = Placement;\n    this.Path = Path;\n    this.Extent = Extent;\n    this.BoxAlignment = BoxAlignment;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Literal = tape[ptr++];\n    let Placement = tape[ptr++];\n    let Path = tape[ptr++];\n    let Extent = tape[ptr++];\n    let BoxAlignment = tape[ptr++];\n    return new IfcTextLiteralWithExtent(expressID, type, Literal, Placement, Path, Extent, BoxAlignment);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Literal);\n    ;\n    args.push(this.Placement);\n    ;\n    args.push(this.Path);\n    ;\n    args.push(this.Extent);\n    ;\n    args.push(this.BoxAlignment);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyle = class {\n  constructor(expressID, type, Name, TextCharacterAppearance, TextStyle, TextFontStyle, ModelOrDraughting) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TextCharacterAppearance = TextCharacterAppearance;\n    this.TextStyle = TextStyle;\n    this.TextFontStyle = TextFontStyle;\n    this.ModelOrDraughting = ModelOrDraughting;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TextCharacterAppearance = tape[ptr++];\n    let TextStyle = tape[ptr++];\n    let TextFontStyle = tape[ptr++];\n    let ModelOrDraughting = tape[ptr++];\n    return new IfcTextStyle(expressID, type, Name, TextCharacterAppearance, TextStyle, TextFontStyle, ModelOrDraughting);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TextCharacterAppearance);\n    ;\n    args.push(this.TextStyle);\n    ;\n    args.push(this.TextFontStyle);\n    ;\n    args.push(this.ModelOrDraughting);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyleFontModel = class {\n  constructor(expressID, type, Name, FontFamily, FontStyle, FontVariant, FontWeight, FontSize) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.FontFamily = FontFamily;\n    this.FontStyle = FontStyle;\n    this.FontVariant = FontVariant;\n    this.FontWeight = FontWeight;\n    this.FontSize = FontSize;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let FontFamily = tape[ptr++];\n    let FontStyle = tape[ptr++];\n    let FontVariant = tape[ptr++];\n    let FontWeight = tape[ptr++];\n    let FontSize = tape[ptr++];\n    return new IfcTextStyleFontModel(expressID, type, Name, FontFamily, FontStyle, FontVariant, FontWeight, FontSize);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.FontFamily);\n    ;\n    args.push(this.FontStyle);\n    ;\n    args.push(this.FontVariant);\n    ;\n    args.push(this.FontWeight);\n    ;\n    args.push(this.FontSize);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyleForDefinedFont = class {\n  constructor(expressID, type, Colour, BackgroundColour) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Colour = Colour;\n    this.BackgroundColour = BackgroundColour;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Colour = tape[ptr++];\n    let BackgroundColour = tape[ptr++];\n    return new IfcTextStyleForDefinedFont(expressID, type, Colour, BackgroundColour);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Colour);\n    ;\n    args.push(this.BackgroundColour);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyleTextModel = class {\n  constructor(expressID, type, TextIndent, TextAlign, TextDecoration, LetterSpacing, WordSpacing, TextTransform, LineHeight) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TextIndent = TextIndent;\n    this.TextAlign = TextAlign;\n    this.TextDecoration = TextDecoration;\n    this.LetterSpacing = LetterSpacing;\n    this.WordSpacing = WordSpacing;\n    this.TextTransform = TextTransform;\n    this.LineHeight = LineHeight;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TextIndent = tape[ptr++];\n    let TextAlign = tape[ptr++];\n    let TextDecoration = tape[ptr++];\n    let LetterSpacing = tape[ptr++];\n    let WordSpacing = tape[ptr++];\n    let TextTransform = tape[ptr++];\n    let LineHeight = tape[ptr++];\n    return new IfcTextStyleTextModel(expressID, type, TextIndent, TextAlign, TextDecoration, LetterSpacing, WordSpacing, TextTransform, LineHeight);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TextIndent);\n    ;\n    args.push(this.TextAlign);\n    ;\n    args.push(this.TextDecoration);\n    ;\n    args.push(this.LetterSpacing);\n    ;\n    args.push(this.WordSpacing);\n    ;\n    args.push(this.TextTransform);\n    ;\n    args.push(this.LineHeight);\n    ;\n    return args;\n  }\n};\nvar IfcTextureCoordinate = class {\n  constructor(expressID, type, Maps) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    return new IfcTextureCoordinate(expressID, type, Maps);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    return args;\n  }\n};\nvar IfcTextureCoordinateGenerator = class {\n  constructor(expressID, type, Maps, Mode, Parameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.Mode = Mode;\n    this.Parameter = Parameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let Mode = tape[ptr++];\n    let Parameter = tape[ptr++];\n    return new IfcTextureCoordinateGenerator(expressID, type, Maps, Mode, Parameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.Parameter);\n    ;\n    return args;\n  }\n};\nvar IfcTextureMap = class {\n  constructor(expressID, type, Maps, Vertices, MappedTo) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.Vertices = Vertices;\n    this.MappedTo = MappedTo;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let Vertices = tape[ptr++];\n    let MappedTo = tape[ptr++];\n    return new IfcTextureMap(expressID, type, Maps, Vertices, MappedTo);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.Vertices);\n    ;\n    args.push(this.MappedTo);\n    ;\n    return args;\n  }\n};\nvar IfcTextureVertex = class {\n  constructor(expressID, type, Coordinates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    return new IfcTextureVertex(expressID, type, Coordinates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    return args;\n  }\n};\nvar IfcTextureVertexList = class {\n  constructor(expressID, type, TexCoordsList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TexCoordsList = TexCoordsList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TexCoordsList = tape[ptr++];\n    return new IfcTextureVertexList(expressID, type, TexCoordsList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TexCoordsList);\n    ;\n    return args;\n  }\n};\nvar IfcTimePeriod = class {\n  constructor(expressID, type, StartTime, EndTime) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    return new IfcTimePeriod(expressID, type, StartTime, EndTime);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    return args;\n  }\n};\nvar IfcTimeSeries = class {\n  constructor(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n    this.TimeSeriesDataType = TimeSeriesDataType;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    let TimeSeriesDataType = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcTimeSeries(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    args.push(this.TimeSeriesDataType);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcTimeSeriesValue = class {\n  constructor(expressID, type, ListValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ListValues = ListValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ListValues = tape[ptr++];\n    return new IfcTimeSeriesValue(expressID, type, ListValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ListValues);\n    ;\n    return args;\n  }\n};\nvar IfcTopologicalRepresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcTopologicalRepresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcTopologyRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcTopologyRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcToroidalSurface = class {\n  constructor(expressID, type, Position, MajorRadius, MinorRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.MajorRadius = MajorRadius;\n    this.MinorRadius = MinorRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let MajorRadius = tape[ptr++];\n    let MinorRadius = tape[ptr++];\n    return new IfcToroidalSurface(expressID, type, Position, MajorRadius, MinorRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.MajorRadius);\n    ;\n    args.push(this.MinorRadius);\n    ;\n    return args;\n  }\n};\nvar IfcTransformer = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransformer(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTransformerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransformerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTransitionCurveSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength, StartRadius, EndRadius, IsStartRadiusCCW, IsEndRadiusCCW, TransitionCurveType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n    this.StartRadius = StartRadius;\n    this.EndRadius = EndRadius;\n    this.IsStartRadiusCCW = IsStartRadiusCCW;\n    this.IsEndRadiusCCW = IsEndRadiusCCW;\n    this.TransitionCurveType = TransitionCurveType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    let StartRadius = tape[ptr++];\n    let EndRadius = tape[ptr++];\n    let IsStartRadiusCCW = tape[ptr++];\n    let IsEndRadiusCCW = tape[ptr++];\n    let TransitionCurveType = tape[ptr++];\n    return new IfcTransitionCurveSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength, StartRadius, EndRadius, IsStartRadiusCCW, IsEndRadiusCCW, TransitionCurveType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    args.push(this.StartRadius);\n    ;\n    args.push(this.EndRadius);\n    ;\n    args.push(this.IsStartRadiusCCW);\n    ;\n    args.push(this.IsEndRadiusCCW);\n    ;\n    args.push(this.TransitionCurveType);\n    ;\n    return args;\n  }\n};\nvar IfcTransportElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransportElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTransportElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransportElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTrapeziumProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, BottomXDim, TopXDim, YDim, TopXOffset) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.BottomXDim = BottomXDim;\n    this.TopXDim = TopXDim;\n    this.YDim = YDim;\n    this.TopXOffset = TopXOffset;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let BottomXDim = tape[ptr++];\n    let TopXDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let TopXOffset = tape[ptr++];\n    return new IfcTrapeziumProfileDef(expressID, type, ProfileType, ProfileName, Position, BottomXDim, TopXDim, YDim, TopXOffset);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.BottomXDim);\n    ;\n    args.push(this.TopXDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.TopXOffset);\n    ;\n    return args;\n  }\n};\nvar IfcTriangulatedFaceSet = class {\n  constructor(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n    this.Normals = Normals;\n    this.Closed = Closed;\n    this.CoordIndex = CoordIndex;\n    this.PnIndex = PnIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    let Normals = tape[ptr++];\n    let Closed = tape[ptr++];\n    let CoordIndex = tape[ptr++];\n    let PnIndex = tape[ptr++];\n    return new IfcTriangulatedFaceSet(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    args.push(this.Normals);\n    ;\n    args.push(this.Closed);\n    ;\n    args.push(this.CoordIndex);\n    ;\n    args.push(this.PnIndex);\n    ;\n    return args;\n  }\n};\nvar IfcTriangulatedIrregularNetwork = class {\n  constructor(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex, Flags) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n    this.Normals = Normals;\n    this.Closed = Closed;\n    this.CoordIndex = CoordIndex;\n    this.PnIndex = PnIndex;\n    this.Flags = Flags;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    let Normals = tape[ptr++];\n    let Closed = tape[ptr++];\n    let CoordIndex = tape[ptr++];\n    let PnIndex = tape[ptr++];\n    let Flags = tape[ptr++];\n    return new IfcTriangulatedIrregularNetwork(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex, Flags);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    args.push(this.Normals);\n    ;\n    args.push(this.Closed);\n    ;\n    args.push(this.CoordIndex);\n    ;\n    args.push(this.PnIndex);\n    ;\n    args.push(this.Flags);\n    ;\n    return args;\n  }\n};\nvar IfcTrimmedCurve = class {\n  constructor(expressID, type, BasisCurve, Trim1, Trim2, SenseAgreement, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.Trim1 = Trim1;\n    this.Trim2 = Trim2;\n    this.SenseAgreement = SenseAgreement;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let Trim1 = tape[ptr++];\n    let Trim2 = tape[ptr++];\n    let SenseAgreement = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcTrimmedCurve(expressID, type, BasisCurve, Trim1, Trim2, SenseAgreement, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.Trim1);\n    ;\n    args.push(this.Trim2);\n    ;\n    args.push(this.SenseAgreement);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcTubeBundle = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTubeBundle(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTubeBundleType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTubeBundleType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTypeObject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    return new IfcTypeObject(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    return args;\n  }\n};\nvar IfcTypeProcess = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    return new IfcTypeProcess(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    return args;\n  }\n};\nvar IfcTypeProduct = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcTypeProduct(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcTypeResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    return new IfcTypeResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    return args;\n  }\n};\nvar IfcUShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius, FlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.FlangeWidth = FlangeWidth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.EdgeRadius = EdgeRadius;\n    this.FlangeSlope = FlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let FlangeWidth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let EdgeRadius = tape[ptr++];\n    let FlangeSlope = tape[ptr++];\n    return new IfcUShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius, FlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.FlangeWidth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.EdgeRadius);\n    ;\n    args.push(this.FlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcUnitAssignment = class {\n  constructor(expressID, type, Units) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Units = Units;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Units = tape[ptr++];\n    return new IfcUnitAssignment(expressID, type, Units);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Units);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryControlElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryControlElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryControlElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryControlElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryEquipment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryEquipment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryEquipmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryEquipmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcValve = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcValve(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcValveType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcValveType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVector = class {\n  constructor(expressID, type, Orientation, Magnitude) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Orientation = Orientation;\n    this.Magnitude = Magnitude;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Orientation = tape[ptr++];\n    let Magnitude = tape[ptr++];\n    return new IfcVector(expressID, type, Orientation, Magnitude);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Orientation);\n    ;\n    args.push(this.Magnitude);\n    ;\n    return args;\n  }\n};\nvar IfcVertex = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcVertex(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcVertexLoop = class {\n  constructor(expressID, type, LoopVertex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LoopVertex = LoopVertex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LoopVertex = tape[ptr++];\n    return new IfcVertexLoop(expressID, type, LoopVertex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LoopVertex);\n    ;\n    return args;\n  }\n};\nvar IfcVertexPoint = class {\n  constructor(expressID, type, VertexGeometry) {\n    this.expressID = expressID;\n    this.type = type;\n    this.VertexGeometry = VertexGeometry;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let VertexGeometry = tape[ptr++];\n    return new IfcVertexPoint(expressID, type, VertexGeometry);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.VertexGeometry);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationDamper = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationDamper(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationDamperType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationDamperType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationIsolator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationIsolator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationIsolatorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationIsolatorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVirtualElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcVirtualElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcVirtualGridIntersection = class {\n  constructor(expressID, type, IntersectingAxes, OffsetDistances) {\n    this.expressID = expressID;\n    this.type = type;\n    this.IntersectingAxes = IntersectingAxes;\n    this.OffsetDistances = OffsetDistances;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let IntersectingAxes = tape[ptr++];\n    let OffsetDistances = tape[ptr++];\n    return new IfcVirtualGridIntersection(expressID, type, IntersectingAxes, OffsetDistances);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.IntersectingAxes);\n    ;\n    args.push(this.OffsetDistances);\n    ;\n    return args;\n  }\n};\nvar IfcVoidingFeature = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVoidingFeature(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWall = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWall(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWallElementedCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWallElementedCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWallStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWallStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWallType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWallType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWasteTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWasteTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWasteTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWasteTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWindow = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.PartitioningType = PartitioningType;\n    this.UserDefinedPartitioningType = UserDefinedPartitioningType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let PartitioningType = tape[ptr++];\n    let UserDefinedPartitioningType = tape[ptr++];\n    return new IfcWindow(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.PartitioningType);\n    ;\n    args.push(this.UserDefinedPartitioningType);\n    ;\n    return args;\n  }\n};\nvar IfcWindowLiningProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, TransomThickness, MullionThickness, FirstTransomOffset, SecondTransomOffset, FirstMullionOffset, SecondMullionOffset, ShapeAspectStyle, LiningOffset, LiningToPanelOffsetX, LiningToPanelOffsetY) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.LiningDepth = LiningDepth;\n    this.LiningThickness = LiningThickness;\n    this.TransomThickness = TransomThickness;\n    this.MullionThickness = MullionThickness;\n    this.FirstTransomOffset = FirstTransomOffset;\n    this.SecondTransomOffset = SecondTransomOffset;\n    this.FirstMullionOffset = FirstMullionOffset;\n    this.SecondMullionOffset = SecondMullionOffset;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n    this.LiningOffset = LiningOffset;\n    this.LiningToPanelOffsetX = LiningToPanelOffsetX;\n    this.LiningToPanelOffsetY = LiningToPanelOffsetY;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let LiningDepth = tape[ptr++];\n    let LiningThickness = tape[ptr++];\n    let TransomThickness = tape[ptr++];\n    let MullionThickness = tape[ptr++];\n    let FirstTransomOffset = tape[ptr++];\n    let SecondTransomOffset = tape[ptr++];\n    let FirstMullionOffset = tape[ptr++];\n    let SecondMullionOffset = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    let LiningOffset = tape[ptr++];\n    let LiningToPanelOffsetX = tape[ptr++];\n    let LiningToPanelOffsetY = tape[ptr++];\n    return new IfcWindowLiningProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, TransomThickness, MullionThickness, FirstTransomOffset, SecondTransomOffset, FirstMullionOffset, SecondMullionOffset, ShapeAspectStyle, LiningOffset, LiningToPanelOffsetX, LiningToPanelOffsetY);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.LiningDepth);\n    ;\n    args.push(this.LiningThickness);\n    ;\n    args.push(this.TransomThickness);\n    ;\n    args.push(this.MullionThickness);\n    ;\n    args.push(this.FirstTransomOffset);\n    ;\n    args.push(this.SecondTransomOffset);\n    ;\n    args.push(this.FirstMullionOffset);\n    ;\n    args.push(this.SecondMullionOffset);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    args.push(this.LiningOffset);\n    ;\n    args.push(this.LiningToPanelOffsetX);\n    ;\n    args.push(this.LiningToPanelOffsetY);\n    ;\n    return args;\n  }\n};\nvar IfcWindowPanelProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.OperationType = OperationType;\n    this.PanelPosition = PanelPosition;\n    this.FrameDepth = FrameDepth;\n    this.FrameThickness = FrameThickness;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let PanelPosition = tape[ptr++];\n    let FrameDepth = tape[ptr++];\n    let FrameThickness = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    return new IfcWindowPanelProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.PanelPosition);\n    ;\n    args.push(this.FrameDepth);\n    ;\n    args.push(this.FrameThickness);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    return args;\n  }\n};\nvar IfcWindowStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.PartitioningType = PartitioningType;\n    this.UserDefinedPartitioningType = UserDefinedPartitioningType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let PartitioningType = tape[ptr++];\n    let UserDefinedPartitioningType = tape[ptr++];\n    return new IfcWindowStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.PartitioningType);\n    ;\n    args.push(this.UserDefinedPartitioningType);\n    ;\n    return args;\n  }\n};\nvar IfcWindowStyle = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ConstructionType, OperationType, ParameterTakesPrecedence, Sizeable) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ConstructionType = ConstructionType;\n    this.OperationType = OperationType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.Sizeable = Sizeable;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ConstructionType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let Sizeable = tape[ptr++];\n    return new IfcWindowStyle(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ConstructionType, OperationType, ParameterTakesPrecedence, Sizeable);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ConstructionType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.Sizeable);\n    ;\n    return args;\n  }\n};\nvar IfcWindowType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, PartitioningType, ParameterTakesPrecedence, UserDefinedPartitioningType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.PartitioningType = PartitioningType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.UserDefinedPartitioningType = UserDefinedPartitioningType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let PartitioningType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let UserDefinedPartitioningType = tape[ptr++];\n    return new IfcWindowType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, PartitioningType, ParameterTakesPrecedence, UserDefinedPartitioningType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.PartitioningType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.UserDefinedPartitioningType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkCalendar = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, WorkingTimes, ExceptionTimes, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.WorkingTimes = WorkingTimes;\n    this.ExceptionTimes = ExceptionTimes;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let WorkingTimes = tape[ptr++];\n    let ExceptionTimes = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWorkCalendar(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, WorkingTimes, ExceptionTimes, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.WorkingTimes);\n    ;\n    args.push(this.ExceptionTimes);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.CreationDate = CreationDate;\n    this.Creators = Creators;\n    this.Purpose = Purpose;\n    this.Duration = Duration;\n    this.TotalFloat = TotalFloat;\n    this.StartTime = StartTime;\n    this.FinishTime = FinishTime;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    let Creators = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let Duration = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let FinishTime = tape[ptr++];\n    return new IfcWorkControl(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.CreationDate);\n    ;\n    args.push(this.Creators);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.Duration);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.FinishTime);\n    ;\n    return args;\n  }\n};\nvar IfcWorkPlan = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.CreationDate = CreationDate;\n    this.Creators = Creators;\n    this.Purpose = Purpose;\n    this.Duration = Duration;\n    this.TotalFloat = TotalFloat;\n    this.StartTime = StartTime;\n    this.FinishTime = FinishTime;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    let Creators = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let Duration = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let FinishTime = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWorkPlan(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.CreationDate);\n    ;\n    args.push(this.Creators);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.Duration);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.FinishTime);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkSchedule = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.CreationDate = CreationDate;\n    this.Creators = Creators;\n    this.Purpose = Purpose;\n    this.Duration = Duration;\n    this.TotalFloat = TotalFloat;\n    this.StartTime = StartTime;\n    this.FinishTime = FinishTime;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    let Creators = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let Duration = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let FinishTime = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWorkSchedule(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.CreationDate);\n    ;\n    args.push(this.Creators);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.Duration);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.FinishTime);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, RecurrencePattern, Start, Finish) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.RecurrencePattern = RecurrencePattern;\n    this.Start = Start;\n    this.Finish = Finish;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let RecurrencePattern = tape[ptr++];\n    let Start = tape[ptr++];\n    let Finish = tape[ptr++];\n    return new IfcWorkTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, RecurrencePattern, Start, Finish);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.RecurrencePattern);\n    ;\n    args.push(this.Start);\n    ;\n    args.push(this.Finish);\n    ;\n    return args;\n  }\n};\nvar IfcZShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.FlangeWidth = FlangeWidth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.EdgeRadius = EdgeRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let FlangeWidth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let EdgeRadius = tape[ptr++];\n    return new IfcZShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.FlangeWidth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.EdgeRadius);\n    ;\n    return args;\n  }\n};\nvar IfcZone = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcZone(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\n\n// dist/helpers/ifc-elements.ts\nvar IfcElements2 = {\n  103090709: \"IFCPROJECT\",\n  4097777520: \"IFCSITE\",\n  4031249490: \"IFCBUILDING\",\n  3124254112: \"IFCBUILDINGSTOREY\",\n  3856911033: \"IFCSPACE\",\n  1674181508: \"IFCANNOTATION\",\n  25142252: \"IFCCONTROLLER\",\n  32344328: \"IFCBOILER\",\n  76236018: \"IFCLAMP\",\n  90941305: \"IFCPUMP\",\n  177149247: \"IFCAIRTERMINALBOX\",\n  182646315: \"IFCFLOWINSTRUMENT\",\n  263784265: \"IFCFURNISHINGELEMENT\",\n  264262732: \"IFCELECTRICGENERATOR\",\n  277319702: \"IFCAUDIOVISUALAPPLIANCE\",\n  310824031: \"IFCPIPEFITTING\",\n  331165859: \"IFCSTAIR\",\n  342316401: \"IFCDUCTFITTING\",\n  377706215: \"IFCMECHANICALFASTENER\",\n  395920057: \"IFCDOOR\",\n  402227799: \"IFCELECTRICMOTOR\",\n  413509423: \"IFCSYSTEMFURNITUREELEMENT\",\n  484807127: \"IFCEVAPORATOR\",\n  486154966: \"IFCWINDOWSTANDARDCASE\",\n  629592764: \"IFCLIGHTFIXTURE\",\n  630975310: \"IFCUNITARYCONTROLELEMENT\",\n  635142910: \"IFCCABLECARRIERFITTING\",\n  639361253: \"IFCCOIL\",\n  647756555: \"IFCFASTENER\",\n  707683696: \"IFCFLOWSTORAGEDEVICE\",\n  738039164: \"IFCPROTECTIVEDEVICE\",\n  753842376: \"IFCBEAM\",\n  812556717: \"IFCTANK\",\n  819412036: \"IFCFILTER\",\n  843113511: \"IFCCOLUMN\",\n  862014818: \"IFCELECTRICDISTRIBUTIONBOARD\",\n  900683007: \"IFCFOOTING\",\n  905975707: \"IFCCOLUMNSTANDARDCASE\",\n  926996030: \"IFCVOIDINGFEATURE\",\n  979691226: \"IFCREINFORCINGBAR\",\n  987401354: \"IFCFLOWSEGMENT\",\n  1003880860: \"IFCELECTRICTIMECONTROL\",\n  1051757585: \"IFCCABLEFITTING\",\n  1052013943: \"IFCDISTRIBUTIONCHAMBERELEMENT\",\n  1062813311: \"IFCDISTRIBUTIONCONTROLELEMENT\",\n  1073191201: \"IFCMEMBER\",\n  1095909175: \"IFCBUILDINGELEMENTPROXY\",\n  1156407060: \"IFCPLATESTANDARDCASE\",\n  1162798199: \"IFCSWITCHINGDEVICE\",\n  1329646415: \"IFCSHADINGDEVICE\",\n  1335981549: \"IFCDISCRETEACCESSORY\",\n  1360408905: \"IFCDUCTSILENCER\",\n  1404847402: \"IFCSTACKTERMINAL\",\n  1426591983: \"IFCFIRESUPPRESSIONTERMINAL\",\n  1437502449: \"IFCMEDICALDEVICE\",\n  1509553395: \"IFCFURNITURE\",\n  1529196076: \"IFCSLAB\",\n  1620046519: \"IFCTRANSPORTELEMENT\",\n  1634111441: \"IFCAIRTERMINAL\",\n  1658829314: \"IFCENERGYCONVERSIONDEVICE\",\n  1677625105: \"IFCCIVILELEMENT\",\n  1687234759: \"IFCPILE\",\n  1904799276: \"IFCELECTRICAPPLIANCE\",\n  1911478936: \"IFCMEMBERSTANDARDCASE\",\n  1945004755: \"IFCDISTRIBUTIONELEMENT\",\n  1973544240: \"IFCCOVERING\",\n  1999602285: \"IFCSPACEHEATER\",\n  2016517767: \"IFCROOF\",\n  2056796094: \"IFCAIRTOAIRHEATRECOVERY\",\n  2058353004: \"IFCFLOWCONTROLLER\",\n  2068733104: \"IFCHUMIDIFIER\",\n  2176052936: \"IFCJUNCTIONBOX\",\n  2188021234: \"IFCFLOWMETER\",\n  2223149337: \"IFCFLOWTERMINAL\",\n  2262370178: \"IFCRAILING\",\n  2272882330: \"IFCCONDENSER\",\n  2295281155: \"IFCPROTECTIVEDEVICETRIPPINGUNIT\",\n  2320036040: \"IFCREINFORCINGMESH\",\n  2347447852: \"IFCTENDONANCHOR\",\n  2391383451: \"IFCVIBRATIONISOLATOR\",\n  2391406946: \"IFCWALL\",\n  2474470126: \"IFCMOTORCONNECTION\",\n  2769231204: \"IFCVIRTUALELEMENT\",\n  2814081492: \"IFCENGINE\",\n  2906023776: \"IFCBEAMSTANDARDCASE\",\n  2938176219: \"IFCBURNER\",\n  2979338954: \"IFCBUILDINGELEMENTPART\",\n  3024970846: \"IFCRAMP\",\n  3026737570: \"IFCTUBEBUNDLE\",\n  3027962421: \"IFCSLABSTANDARDCASE\",\n  3040386961: \"IFCDISTRIBUTIONFLOWELEMENT\",\n  3053780830: \"IFCSANITARYTERMINAL\",\n  3079942009: \"IFCOPENINGSTANDARDCASE\",\n  3087945054: \"IFCALARM\",\n  3101698114: \"IFCSURFACEFEATURE\",\n  3127900445: \"IFCSLABELEMENTEDCASE\",\n  3132237377: \"IFCFLOWMOVINGDEVICE\",\n  3171933400: \"IFCPLATE\",\n  3221913625: \"IFCCOMMUNICATIONSAPPLIANCE\",\n  3242481149: \"IFCDOORSTANDARDCASE\",\n  3283111854: \"IFCRAMPFLIGHT\",\n  3296154744: \"IFCCHIMNEY\",\n  3304561284: \"IFCWINDOW\",\n  3310460725: \"IFCELECTRICFLOWSTORAGEDEVICE\",\n  3319311131: \"IFCHEATEXCHANGER\",\n  3415622556: \"IFCFAN\",\n  3420628829: \"IFCSOLARDEVICE\",\n  3493046030: \"IFCGEOGRAPHICELEMENT\",\n  3495092785: \"IFCCURTAINWALL\",\n  3508470533: \"IFCFLOWTREATMENTDEVICE\",\n  3512223829: \"IFCWALLSTANDARDCASE\",\n  3518393246: \"IFCDUCTSEGMENT\",\n  3571504051: \"IFCCOMPRESSOR\",\n  3588315303: \"IFCOPENINGELEMENT\",\n  3612865200: \"IFCPIPESEGMENT\",\n  3640358203: \"IFCCOOLINGTOWER\",\n  3651124850: \"IFCPROJECTIONELEMENT\",\n  3694346114: \"IFCOUTLET\",\n  3747195512: \"IFCEVAPORATIVECOOLER\",\n  3758799889: \"IFCCABLECARRIERSEGMENT\",\n  3824725483: \"IFCTENDON\",\n  3825984169: \"IFCTRANSFORMER\",\n  3902619387: \"IFCCHILLER\",\n  4074379575: \"IFCDAMPER\",\n  4086658281: \"IFCSENSOR\",\n  4123344466: \"IFCELEMENTASSEMBLY\",\n  4136498852: \"IFCCOOLEDBEAM\",\n  4156078855: \"IFCWALLELEMENTEDCASE\",\n  4175244083: \"IFCINTERCEPTOR\",\n  4207607924: \"IFCVALVE\",\n  4217484030: \"IFCCABLESEGMENT\",\n  4237592921: \"IFCWASTETERMINAL\",\n  4252922144: \"IFCSTAIRFLIGHT\",\n  4278956645: \"IFCFLOWFITTING\",\n  4288193352: \"IFCACTUATOR\",\n  4292641817: \"IFCUNITARYEQUIPMENT\",\n  3009204131: \"IFCGRID\"\n};\n\n// dist/helpers/types-map.ts\nvar IfcTypesMap = {\n  3821786052: \"IFCACTIONREQUEST\",\n  2296667514: \"IFCACTOR\",\n  3630933823: \"IFCACTORROLE\",\n  4288193352: \"IFCACTUATOR\",\n  2874132201: \"IFCACTUATORTYPE\",\n  618182010: \"IFCADDRESS\",\n  1635779807: \"IFCADVANCEDBREP\",\n  2603310189: \"IFCADVANCEDBREPWITHVOIDS\",\n  3406155212: \"IFCADVANCEDFACE\",\n  1634111441: \"IFCAIRTERMINAL\",\n  177149247: \"IFCAIRTERMINALBOX\",\n  1411407467: \"IFCAIRTERMINALBOXTYPE\",\n  3352864051: \"IFCAIRTERMINALTYPE\",\n  2056796094: \"IFCAIRTOAIRHEATRECOVERY\",\n  1871374353: \"IFCAIRTOAIRHEATRECOVERYTYPE\",\n  3087945054: \"IFCALARM\",\n  3001207471: \"IFCALARMTYPE\",\n  325726236: \"IFCALIGNMENT\",\n  749761778: \"IFCALIGNMENT2DHORIZONTAL\",\n  3199563722: \"IFCALIGNMENT2DHORIZONTALSEGMENT\",\n  2483840362: \"IFCALIGNMENT2DSEGMENT\",\n  3379348081: \"IFCALIGNMENT2DVERSEGCIRCULARARC\",\n  3239324667: \"IFCALIGNMENT2DVERSEGLINE\",\n  4263986512: \"IFCALIGNMENT2DVERSEGPARABOLICARC\",\n  53199957: \"IFCALIGNMENT2DVERTICAL\",\n  2029264950: \"IFCALIGNMENT2DVERTICALSEGMENT\",\n  3512275521: \"IFCALIGNMENTCURVE\",\n  1674181508: \"IFCANNOTATION\",\n  669184980: \"IFCANNOTATIONFILLAREA\",\n  639542469: \"IFCAPPLICATION\",\n  411424972: \"IFCAPPLIEDVALUE\",\n  130549933: \"IFCAPPROVAL\",\n  3869604511: \"IFCAPPROVALRELATIONSHIP\",\n  3798115385: \"IFCARBITRARYCLOSEDPROFILEDEF\",\n  1310608509: \"IFCARBITRARYOPENPROFILEDEF\",\n  2705031697: \"IFCARBITRARYPROFILEDEFWITHVOIDS\",\n  3460190687: \"IFCASSET\",\n  3207858831: \"IFCASYMMETRICISHAPEPROFILEDEF\",\n  277319702: \"IFCAUDIOVISUALAPPLIANCE\",\n  1532957894: \"IFCAUDIOVISUALAPPLIANCETYPE\",\n  4261334040: \"IFCAXIS1PLACEMENT\",\n  3125803723: \"IFCAXIS2PLACEMENT2D\",\n  2740243338: \"IFCAXIS2PLACEMENT3D\",\n  1967976161: \"IFCBSPLINECURVE\",\n  2461110595: \"IFCBSPLINECURVEWITHKNOTS\",\n  2887950389: \"IFCBSPLINESURFACE\",\n  167062518: \"IFCBSPLINESURFACEWITHKNOTS\",\n  753842376: \"IFCBEAM\",\n  2906023776: \"IFCBEAMSTANDARDCASE\",\n  819618141: \"IFCBEAMTYPE\",\n  4196446775: \"IFCBEARING\",\n  3649138523: \"IFCBEARINGTYPE\",\n  616511568: \"IFCBLOBTEXTURE\",\n  1334484129: \"IFCBLOCK\",\n  32344328: \"IFCBOILER\",\n  231477066: \"IFCBOILERTYPE\",\n  3649129432: \"IFCBOOLEANCLIPPINGRESULT\",\n  2736907675: \"IFCBOOLEANRESULT\",\n  4037036970: \"IFCBOUNDARYCONDITION\",\n  1136057603: \"IFCBOUNDARYCURVE\",\n  1560379544: \"IFCBOUNDARYEDGECONDITION\",\n  3367102660: \"IFCBOUNDARYFACECONDITION\",\n  1387855156: \"IFCBOUNDARYNODECONDITION\",\n  2069777674: \"IFCBOUNDARYNODECONDITIONWARPING\",\n  1260505505: \"IFCBOUNDEDCURVE\",\n  4182860854: \"IFCBOUNDEDSURFACE\",\n  2581212453: \"IFCBOUNDINGBOX\",\n  2713105998: \"IFCBOXEDHALFSPACE\",\n  644574406: \"IFCBRIDGE\",\n  963979645: \"IFCBRIDGEPART\",\n  4031249490: \"IFCBUILDING\",\n  3299480353: \"IFCBUILDINGELEMENT\",\n  2979338954: \"IFCBUILDINGELEMENTPART\",\n  39481116: \"IFCBUILDINGELEMENTPARTTYPE\",\n  1095909175: \"IFCBUILDINGELEMENTPROXY\",\n  1909888760: \"IFCBUILDINGELEMENTPROXYTYPE\",\n  1950629157: \"IFCBUILDINGELEMENTTYPE\",\n  3124254112: \"IFCBUILDINGSTOREY\",\n  1177604601: \"IFCBUILDINGSYSTEM\",\n  2938176219: \"IFCBURNER\",\n  2188180465: \"IFCBURNERTYPE\",\n  2898889636: \"IFCCSHAPEPROFILEDEF\",\n  635142910: \"IFCCABLECARRIERFITTING\",\n  395041908: \"IFCCABLECARRIERFITTINGTYPE\",\n  3758799889: \"IFCCABLECARRIERSEGMENT\",\n  3293546465: \"IFCCABLECARRIERSEGMENTTYPE\",\n  1051757585: \"IFCCABLEFITTING\",\n  2674252688: \"IFCCABLEFITTINGTYPE\",\n  4217484030: \"IFCCABLESEGMENT\",\n  1285652485: \"IFCCABLESEGMENTTYPE\",\n  3999819293: \"IFCCAISSONFOUNDATION\",\n  3203706013: \"IFCCAISSONFOUNDATIONTYPE\",\n  1123145078: \"IFCCARTESIANPOINT\",\n  574549367: \"IFCCARTESIANPOINTLIST\",\n  1675464909: \"IFCCARTESIANPOINTLIST2D\",\n  2059837836: \"IFCCARTESIANPOINTLIST3D\",\n  59481748: \"IFCCARTESIANTRANSFORMATIONOPERATOR\",\n  3749851601: \"IFCCARTESIANTRANSFORMATIONOPERATOR2D\",\n  3486308946: \"IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM\",\n  3331915920: \"IFCCARTESIANTRANSFORMATIONOPERATOR3D\",\n  1416205885: \"IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM\",\n  3150382593: \"IFCCENTERLINEPROFILEDEF\",\n  3902619387: \"IFCCHILLER\",\n  2951183804: \"IFCCHILLERTYPE\",\n  3296154744: \"IFCCHIMNEY\",\n  2197970202: \"IFCCHIMNEYTYPE\",\n  2611217952: \"IFCCIRCLE\",\n  2937912522: \"IFCCIRCLEHOLLOWPROFILEDEF\",\n  1383045692: \"IFCCIRCLEPROFILEDEF\",\n  1062206242: \"IFCCIRCULARARCSEGMENT2D\",\n  1677625105: \"IFCCIVILELEMENT\",\n  3893394355: \"IFCCIVILELEMENTTYPE\",\n  747523909: \"IFCCLASSIFICATION\",\n  647927063: \"IFCCLASSIFICATIONREFERENCE\",\n  2205249479: \"IFCCLOSEDSHELL\",\n  639361253: \"IFCCOIL\",\n  2301859152: \"IFCCOILTYPE\",\n  776857604: \"IFCCOLOURRGB\",\n  3285139300: \"IFCCOLOURRGBLIST\",\n  3264961684: \"IFCCOLOURSPECIFICATION\",\n  843113511: \"IFCCOLUMN\",\n  905975707: \"IFCCOLUMNSTANDARDCASE\",\n  300633059: \"IFCCOLUMNTYPE\",\n  3221913625: \"IFCCOMMUNICATIONSAPPLIANCE\",\n  400855858: \"IFCCOMMUNICATIONSAPPLIANCETYPE\",\n  2542286263: \"IFCCOMPLEXPROPERTY\",\n  3875453745: \"IFCCOMPLEXPROPERTYTEMPLATE\",\n  3732776249: \"IFCCOMPOSITECURVE\",\n  15328376: \"IFCCOMPOSITECURVEONSURFACE\",\n  2485617015: \"IFCCOMPOSITECURVESEGMENT\",\n  1485152156: \"IFCCOMPOSITEPROFILEDEF\",\n  3571504051: \"IFCCOMPRESSOR\",\n  3850581409: \"IFCCOMPRESSORTYPE\",\n  2272882330: \"IFCCONDENSER\",\n  2816379211: \"IFCCONDENSERTYPE\",\n  2510884976: \"IFCCONIC\",\n  370225590: \"IFCCONNECTEDFACESET\",\n  1981873012: \"IFCCONNECTIONCURVEGEOMETRY\",\n  2859738748: \"IFCCONNECTIONGEOMETRY\",\n  45288368: \"IFCCONNECTIONPOINTECCENTRICITY\",\n  2614616156: \"IFCCONNECTIONPOINTGEOMETRY\",\n  2732653382: \"IFCCONNECTIONSURFACEGEOMETRY\",\n  775493141: \"IFCCONNECTIONVOLUMEGEOMETRY\",\n  1959218052: \"IFCCONSTRAINT\",\n  3898045240: \"IFCCONSTRUCTIONEQUIPMENTRESOURCE\",\n  2185764099: \"IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE\",\n  1060000209: \"IFCCONSTRUCTIONMATERIALRESOURCE\",\n  4105962743: \"IFCCONSTRUCTIONMATERIALRESOURCETYPE\",\n  488727124: \"IFCCONSTRUCTIONPRODUCTRESOURCE\",\n  1525564444: \"IFCCONSTRUCTIONPRODUCTRESOURCETYPE\",\n  2559216714: \"IFCCONSTRUCTIONRESOURCE\",\n  2574617495: \"IFCCONSTRUCTIONRESOURCETYPE\",\n  3419103109: \"IFCCONTEXT\",\n  3050246964: \"IFCCONTEXTDEPENDENTUNIT\",\n  3293443760: \"IFCCONTROL\",\n  25142252: \"IFCCONTROLLER\",\n  578613899: \"IFCCONTROLLERTYPE\",\n  2889183280: \"IFCCONVERSIONBASEDUNIT\",\n  2713554722: \"IFCCONVERSIONBASEDUNITWITHOFFSET\",\n  4136498852: \"IFCCOOLEDBEAM\",\n  335055490: \"IFCCOOLEDBEAMTYPE\",\n  3640358203: \"IFCCOOLINGTOWER\",\n  2954562838: \"IFCCOOLINGTOWERTYPE\",\n  1785450214: \"IFCCOORDINATEOPERATION\",\n  1466758467: \"IFCCOORDINATEREFERENCESYSTEM\",\n  3895139033: \"IFCCOSTITEM\",\n  1419761937: \"IFCCOSTSCHEDULE\",\n  602808272: \"IFCCOSTVALUE\",\n  1973544240: \"IFCCOVERING\",\n  1916426348: \"IFCCOVERINGTYPE\",\n  3295246426: \"IFCCREWRESOURCE\",\n  1815067380: \"IFCCREWRESOURCETYPE\",\n  2506170314: \"IFCCSGPRIMITIVE3D\",\n  2147822146: \"IFCCSGSOLID\",\n  539742890: \"IFCCURRENCYRELATIONSHIP\",\n  3495092785: \"IFCCURTAINWALL\",\n  1457835157: \"IFCCURTAINWALLTYPE\",\n  2601014836: \"IFCCURVE\",\n  2827736869: \"IFCCURVEBOUNDEDPLANE\",\n  2629017746: \"IFCCURVEBOUNDEDSURFACE\",\n  1186437898: \"IFCCURVESEGMENT2D\",\n  3800577675: \"IFCCURVESTYLE\",\n  1105321065: \"IFCCURVESTYLEFONT\",\n  2367409068: \"IFCCURVESTYLEFONTANDSCALING\",\n  3510044353: \"IFCCURVESTYLEFONTPATTERN\",\n  1213902940: \"IFCCYLINDRICALSURFACE\",\n  4074379575: \"IFCDAMPER\",\n  3961806047: \"IFCDAMPERTYPE\",\n  3426335179: \"IFCDEEPFOUNDATION\",\n  1306400036: \"IFCDEEPFOUNDATIONTYPE\",\n  3632507154: \"IFCDERIVEDPROFILEDEF\",\n  1765591967: \"IFCDERIVEDUNIT\",\n  1045800335: \"IFCDERIVEDUNITELEMENT\",\n  2949456006: \"IFCDIMENSIONALEXPONENTS\",\n  32440307: \"IFCDIRECTION\",\n  1335981549: \"IFCDISCRETEACCESSORY\",\n  2635815018: \"IFCDISCRETEACCESSORYTYPE\",\n  1945343521: \"IFCDISTANCEEXPRESSION\",\n  1052013943: \"IFCDISTRIBUTIONCHAMBERELEMENT\",\n  1599208980: \"IFCDISTRIBUTIONCHAMBERELEMENTTYPE\",\n  562808652: \"IFCDISTRIBUTIONCIRCUIT\",\n  1062813311: \"IFCDISTRIBUTIONCONTROLELEMENT\",\n  2063403501: \"IFCDISTRIBUTIONCONTROLELEMENTTYPE\",\n  1945004755: \"IFCDISTRIBUTIONELEMENT\",\n  3256556792: \"IFCDISTRIBUTIONELEMENTTYPE\",\n  3040386961: \"IFCDISTRIBUTIONFLOWELEMENT\",\n  3849074793: \"IFCDISTRIBUTIONFLOWELEMENTTYPE\",\n  3041715199: \"IFCDISTRIBUTIONPORT\",\n  3205830791: \"IFCDISTRIBUTIONSYSTEM\",\n  1154170062: \"IFCDOCUMENTINFORMATION\",\n  770865208: \"IFCDOCUMENTINFORMATIONRELATIONSHIP\",\n  3732053477: \"IFCDOCUMENTREFERENCE\",\n  395920057: \"IFCDOOR\",\n  2963535650: \"IFCDOORLININGPROPERTIES\",\n  1714330368: \"IFCDOORPANELPROPERTIES\",\n  3242481149: \"IFCDOORSTANDARDCASE\",\n  526551008: \"IFCDOORSTYLE\",\n  2323601079: \"IFCDOORTYPE\",\n  445594917: \"IFCDRAUGHTINGPREDEFINEDCOLOUR\",\n  4006246654: \"IFCDRAUGHTINGPREDEFINEDCURVEFONT\",\n  342316401: \"IFCDUCTFITTING\",\n  869906466: \"IFCDUCTFITTINGTYPE\",\n  3518393246: \"IFCDUCTSEGMENT\",\n  3760055223: \"IFCDUCTSEGMENTTYPE\",\n  1360408905: \"IFCDUCTSILENCER\",\n  2030761528: \"IFCDUCTSILENCERTYPE\",\n  3900360178: \"IFCEDGE\",\n  476780140: \"IFCEDGECURVE\",\n  1472233963: \"IFCEDGELOOP\",\n  1904799276: \"IFCELECTRICAPPLIANCE\",\n  663422040: \"IFCELECTRICAPPLIANCETYPE\",\n  862014818: \"IFCELECTRICDISTRIBUTIONBOARD\",\n  2417008758: \"IFCELECTRICDISTRIBUTIONBOARDTYPE\",\n  3310460725: \"IFCELECTRICFLOWSTORAGEDEVICE\",\n  3277789161: \"IFCELECTRICFLOWSTORAGEDEVICETYPE\",\n  264262732: \"IFCELECTRICGENERATOR\",\n  1534661035: \"IFCELECTRICGENERATORTYPE\",\n  402227799: \"IFCELECTRICMOTOR\",\n  1217240411: \"IFCELECTRICMOTORTYPE\",\n  1003880860: \"IFCELECTRICTIMECONTROL\",\n  712377611: \"IFCELECTRICTIMECONTROLTYPE\",\n  1758889154: \"IFCELEMENT\",\n  4123344466: \"IFCELEMENTASSEMBLY\",\n  2397081782: \"IFCELEMENTASSEMBLYTYPE\",\n  1623761950: \"IFCELEMENTCOMPONENT\",\n  2590856083: \"IFCELEMENTCOMPONENTTYPE\",\n  1883228015: \"IFCELEMENTQUANTITY\",\n  339256511: \"IFCELEMENTTYPE\",\n  2777663545: \"IFCELEMENTARYSURFACE\",\n  1704287377: \"IFCELLIPSE\",\n  2835456948: \"IFCELLIPSEPROFILEDEF\",\n  1658829314: \"IFCENERGYCONVERSIONDEVICE\",\n  2107101300: \"IFCENERGYCONVERSIONDEVICETYPE\",\n  2814081492: \"IFCENGINE\",\n  132023988: \"IFCENGINETYPE\",\n  3747195512: \"IFCEVAPORATIVECOOLER\",\n  3174744832: \"IFCEVAPORATIVECOOLERTYPE\",\n  484807127: \"IFCEVAPORATOR\",\n  3390157468: \"IFCEVAPORATORTYPE\",\n  4148101412: \"IFCEVENT\",\n  211053100: \"IFCEVENTTIME\",\n  4024345920: \"IFCEVENTTYPE\",\n  297599258: \"IFCEXTENDEDPROPERTIES\",\n  4294318154: \"IFCEXTERNALINFORMATION\",\n  3200245327: \"IFCEXTERNALREFERENCE\",\n  1437805879: \"IFCEXTERNALREFERENCERELATIONSHIP\",\n  1209101575: \"IFCEXTERNALSPATIALELEMENT\",\n  2853485674: \"IFCEXTERNALSPATIALSTRUCTUREELEMENT\",\n  2242383968: \"IFCEXTERNALLYDEFINEDHATCHSTYLE\",\n  1040185647: \"IFCEXTERNALLYDEFINEDSURFACESTYLE\",\n  3548104201: \"IFCEXTERNALLYDEFINEDTEXTFONT\",\n  477187591: \"IFCEXTRUDEDAREASOLID\",\n  2804161546: \"IFCEXTRUDEDAREASOLIDTAPERED\",\n  2556980723: \"IFCFACE\",\n  2047409740: \"IFCFACEBASEDSURFACEMODEL\",\n  1809719519: \"IFCFACEBOUND\",\n  803316827: \"IFCFACEOUTERBOUND\",\n  3008276851: \"IFCFACESURFACE\",\n  807026263: \"IFCFACETEDBREP\",\n  3737207727: \"IFCFACETEDBREPWITHVOIDS\",\n  24185140: \"IFCFACILITY\",\n  1310830890: \"IFCFACILITYPART\",\n  4219587988: \"IFCFAILURECONNECTIONCONDITION\",\n  3415622556: \"IFCFAN\",\n  346874300: \"IFCFANTYPE\",\n  647756555: \"IFCFASTENER\",\n  2489546625: \"IFCFASTENERTYPE\",\n  2827207264: \"IFCFEATUREELEMENT\",\n  2143335405: \"IFCFEATUREELEMENTADDITION\",\n  1287392070: \"IFCFEATUREELEMENTSUBTRACTION\",\n  738692330: \"IFCFILLAREASTYLE\",\n  374418227: \"IFCFILLAREASTYLEHATCHING\",\n  315944413: \"IFCFILLAREASTYLETILES\",\n  819412036: \"IFCFILTER\",\n  1810631287: \"IFCFILTERTYPE\",\n  1426591983: \"IFCFIRESUPPRESSIONTERMINAL\",\n  4222183408: \"IFCFIRESUPPRESSIONTERMINALTYPE\",\n  2652556860: \"IFCFIXEDREFERENCESWEPTAREASOLID\",\n  2058353004: \"IFCFLOWCONTROLLER\",\n  3907093117: \"IFCFLOWCONTROLLERTYPE\",\n  4278956645: \"IFCFLOWFITTING\",\n  3198132628: \"IFCFLOWFITTINGTYPE\",\n  182646315: \"IFCFLOWINSTRUMENT\",\n  4037862832: \"IFCFLOWINSTRUMENTTYPE\",\n  2188021234: \"IFCFLOWMETER\",\n  3815607619: \"IFCFLOWMETERTYPE\",\n  3132237377: \"IFCFLOWMOVINGDEVICE\",\n  1482959167: \"IFCFLOWMOVINGDEVICETYPE\",\n  987401354: \"IFCFLOWSEGMENT\",\n  1834744321: \"IFCFLOWSEGMENTTYPE\",\n  707683696: \"IFCFLOWSTORAGEDEVICE\",\n  1339347760: \"IFCFLOWSTORAGEDEVICETYPE\",\n  2223149337: \"IFCFLOWTERMINAL\",\n  2297155007: \"IFCFLOWTERMINALTYPE\",\n  3508470533: \"IFCFLOWTREATMENTDEVICE\",\n  3009222698: \"IFCFLOWTREATMENTDEVICETYPE\",\n  900683007: \"IFCFOOTING\",\n  1893162501: \"IFCFOOTINGTYPE\",\n  263784265: \"IFCFURNISHINGELEMENT\",\n  4238390223: \"IFCFURNISHINGELEMENTTYPE\",\n  1509553395: \"IFCFURNITURE\",\n  1268542332: \"IFCFURNITURETYPE\",\n  3493046030: \"IFCGEOGRAPHICELEMENT\",\n  4095422895: \"IFCGEOGRAPHICELEMENTTYPE\",\n  987898635: \"IFCGEOMETRICCURVESET\",\n  3448662350: \"IFCGEOMETRICREPRESENTATIONCONTEXT\",\n  2453401579: \"IFCGEOMETRICREPRESENTATIONITEM\",\n  4142052618: \"IFCGEOMETRICREPRESENTATIONSUBCONTEXT\",\n  3590301190: \"IFCGEOMETRICSET\",\n  3009204131: \"IFCGRID\",\n  852622518: \"IFCGRIDAXIS\",\n  178086475: \"IFCGRIDPLACEMENT\",\n  2706460486: \"IFCGROUP\",\n  812098782: \"IFCHALFSPACESOLID\",\n  3319311131: \"IFCHEATEXCHANGER\",\n  1251058090: \"IFCHEATEXCHANGERTYPE\",\n  2068733104: \"IFCHUMIDIFIER\",\n  1806887404: \"IFCHUMIDIFIERTYPE\",\n  1484403080: \"IFCISHAPEPROFILEDEF\",\n  3905492369: \"IFCIMAGETEXTURE\",\n  3570813810: \"IFCINDEXEDCOLOURMAP\",\n  2571569899: \"IFCINDEXEDPOLYCURVE\",\n  178912537: \"IFCINDEXEDPOLYGONALFACE\",\n  2294589976: \"IFCINDEXEDPOLYGONALFACEWITHVOIDS\",\n  1437953363: \"IFCINDEXEDTEXTUREMAP\",\n  2133299955: \"IFCINDEXEDTRIANGLETEXTUREMAP\",\n  4175244083: \"IFCINTERCEPTOR\",\n  3946677679: \"IFCINTERCEPTORTYPE\",\n  3113134337: \"IFCINTERSECTIONCURVE\",\n  2391368822: \"IFCINVENTORY\",\n  3741457305: \"IFCIRREGULARTIMESERIES\",\n  3020489413: \"IFCIRREGULARTIMESERIESVALUE\",\n  2176052936: \"IFCJUNCTIONBOX\",\n  4288270099: \"IFCJUNCTIONBOXTYPE\",\n  572779678: \"IFCLSHAPEPROFILEDEF\",\n  3827777499: \"IFCLABORRESOURCE\",\n  428585644: \"IFCLABORRESOURCETYPE\",\n  1585845231: \"IFCLAGTIME\",\n  76236018: \"IFCLAMP\",\n  1051575348: \"IFCLAMPTYPE\",\n  2655187982: \"IFCLIBRARYINFORMATION\",\n  3452421091: \"IFCLIBRARYREFERENCE\",\n  4162380809: \"IFCLIGHTDISTRIBUTIONDATA\",\n  629592764: \"IFCLIGHTFIXTURE\",\n  1161773419: \"IFCLIGHTFIXTURETYPE\",\n  1566485204: \"IFCLIGHTINTENSITYDISTRIBUTION\",\n  1402838566: \"IFCLIGHTSOURCE\",\n  125510826: \"IFCLIGHTSOURCEAMBIENT\",\n  2604431987: \"IFCLIGHTSOURCEDIRECTIONAL\",\n  4266656042: \"IFCLIGHTSOURCEGONIOMETRIC\",\n  1520743889: \"IFCLIGHTSOURCEPOSITIONAL\",\n  3422422726: \"IFCLIGHTSOURCESPOT\",\n  1281925730: \"IFCLINE\",\n  3092502836: \"IFCLINESEGMENT2D\",\n  388784114: \"IFCLINEARPLACEMENT\",\n  1154579445: \"IFCLINEARPOSITIONINGELEMENT\",\n  2624227202: \"IFCLOCALPLACEMENT\",\n  1008929658: \"IFCLOOP\",\n  1425443689: \"IFCMANIFOLDSOLIDBREP\",\n  3057273783: \"IFCMAPCONVERSION\",\n  2347385850: \"IFCMAPPEDITEM\",\n  1838606355: \"IFCMATERIAL\",\n  1847130766: \"IFCMATERIALCLASSIFICATIONRELATIONSHIP\",\n  3708119e3: \"IFCMATERIALCONSTITUENT\",\n  2852063980: \"IFCMATERIALCONSTITUENTSET\",\n  760658860: \"IFCMATERIALDEFINITION\",\n  2022407955: \"IFCMATERIALDEFINITIONREPRESENTATION\",\n  248100487: \"IFCMATERIALLAYER\",\n  3303938423: \"IFCMATERIALLAYERSET\",\n  1303795690: \"IFCMATERIALLAYERSETUSAGE\",\n  1847252529: \"IFCMATERIALLAYERWITHOFFSETS\",\n  2199411900: \"IFCMATERIALLIST\",\n  2235152071: \"IFCMATERIALPROFILE\",\n  164193824: \"IFCMATERIALPROFILESET\",\n  3079605661: \"IFCMATERIALPROFILESETUSAGE\",\n  3404854881: \"IFCMATERIALPROFILESETUSAGETAPERING\",\n  552965576: \"IFCMATERIALPROFILEWITHOFFSETS\",\n  3265635763: \"IFCMATERIALPROPERTIES\",\n  853536259: \"IFCMATERIALRELATIONSHIP\",\n  1507914824: \"IFCMATERIALUSAGEDEFINITION\",\n  2597039031: \"IFCMEASUREWITHUNIT\",\n  377706215: \"IFCMECHANICALFASTENER\",\n  2108223431: \"IFCMECHANICALFASTENERTYPE\",\n  1437502449: \"IFCMEDICALDEVICE\",\n  1114901282: \"IFCMEDICALDEVICETYPE\",\n  1073191201: \"IFCMEMBER\",\n  1911478936: \"IFCMEMBERSTANDARDCASE\",\n  3181161470: \"IFCMEMBERTYPE\",\n  3368373690: \"IFCMETRIC\",\n  2998442950: \"IFCMIRROREDPROFILEDEF\",\n  2706619895: \"IFCMONETARYUNIT\",\n  2474470126: \"IFCMOTORCONNECTION\",\n  977012517: \"IFCMOTORCONNECTIONTYPE\",\n  1918398963: \"IFCNAMEDUNIT\",\n  3888040117: \"IFCOBJECT\",\n  219451334: \"IFCOBJECTDEFINITION\",\n  3701648758: \"IFCOBJECTPLACEMENT\",\n  2251480897: \"IFCOBJECTIVE\",\n  4143007308: \"IFCOCCUPANT\",\n  590820931: \"IFCOFFSETCURVE\",\n  3388369263: \"IFCOFFSETCURVE2D\",\n  3505215534: \"IFCOFFSETCURVE3D\",\n  2485787929: \"IFCOFFSETCURVEBYDISTANCES\",\n  2665983363: \"IFCOPENSHELL\",\n  3588315303: \"IFCOPENINGELEMENT\",\n  3079942009: \"IFCOPENINGSTANDARDCASE\",\n  4251960020: \"IFCORGANIZATION\",\n  1411181986: \"IFCORGANIZATIONRELATIONSHIP\",\n  643959842: \"IFCORIENTATIONEXPRESSION\",\n  1029017970: \"IFCORIENTEDEDGE\",\n  144952367: \"IFCOUTERBOUNDARYCURVE\",\n  3694346114: \"IFCOUTLET\",\n  2837617999: \"IFCOUTLETTYPE\",\n  1207048766: \"IFCOWNERHISTORY\",\n  2529465313: \"IFCPARAMETERIZEDPROFILEDEF\",\n  2519244187: \"IFCPATH\",\n  1682466193: \"IFCPCURVE\",\n  2382730787: \"IFCPERFORMANCEHISTORY\",\n  3566463478: \"IFCPERMEABLECOVERINGPROPERTIES\",\n  3327091369: \"IFCPERMIT\",\n  2077209135: \"IFCPERSON\",\n  101040310: \"IFCPERSONANDORGANIZATION\",\n  3021840470: \"IFCPHYSICALCOMPLEXQUANTITY\",\n  2483315170: \"IFCPHYSICALQUANTITY\",\n  2226359599: \"IFCPHYSICALSIMPLEQUANTITY\",\n  1687234759: \"IFCPILE\",\n  1158309216: \"IFCPILETYPE\",\n  310824031: \"IFCPIPEFITTING\",\n  804291784: \"IFCPIPEFITTINGTYPE\",\n  3612865200: \"IFCPIPESEGMENT\",\n  4231323485: \"IFCPIPESEGMENTTYPE\",\n  597895409: \"IFCPIXELTEXTURE\",\n  2004835150: \"IFCPLACEMENT\",\n  603570806: \"IFCPLANARBOX\",\n  1663979128: \"IFCPLANAREXTENT\",\n  220341763: \"IFCPLANE\",\n  3171933400: \"IFCPLATE\",\n  1156407060: \"IFCPLATESTANDARDCASE\",\n  4017108033: \"IFCPLATETYPE\",\n  2067069095: \"IFCPOINT\",\n  4022376103: \"IFCPOINTONCURVE\",\n  1423911732: \"IFCPOINTONSURFACE\",\n  2924175390: \"IFCPOLYLOOP\",\n  2775532180: \"IFCPOLYGONALBOUNDEDHALFSPACE\",\n  2839578677: \"IFCPOLYGONALFACESET\",\n  3724593414: \"IFCPOLYLINE\",\n  3740093272: \"IFCPORT\",\n  1946335990: \"IFCPOSITIONINGELEMENT\",\n  3355820592: \"IFCPOSTALADDRESS\",\n  759155922: \"IFCPREDEFINEDCOLOUR\",\n  2559016684: \"IFCPREDEFINEDCURVEFONT\",\n  3727388367: \"IFCPREDEFINEDITEM\",\n  3778827333: \"IFCPREDEFINEDPROPERTIES\",\n  3967405729: \"IFCPREDEFINEDPROPERTYSET\",\n  1775413392: \"IFCPREDEFINEDTEXTFONT\",\n  677532197: \"IFCPRESENTATIONITEM\",\n  2022622350: \"IFCPRESENTATIONLAYERASSIGNMENT\",\n  1304840413: \"IFCPRESENTATIONLAYERWITHSTYLE\",\n  3119450353: \"IFCPRESENTATIONSTYLE\",\n  2417041796: \"IFCPRESENTATIONSTYLEASSIGNMENT\",\n  2744685151: \"IFCPROCEDURE\",\n  569719735: \"IFCPROCEDURETYPE\",\n  2945172077: \"IFCPROCESS\",\n  4208778838: \"IFCPRODUCT\",\n  673634403: \"IFCPRODUCTDEFINITIONSHAPE\",\n  2095639259: \"IFCPRODUCTREPRESENTATION\",\n  3958567839: \"IFCPROFILEDEF\",\n  2802850158: \"IFCPROFILEPROPERTIES\",\n  103090709: \"IFCPROJECT\",\n  653396225: \"IFCPROJECTLIBRARY\",\n  2904328755: \"IFCPROJECTORDER\",\n  3843373140: \"IFCPROJECTEDCRS\",\n  3651124850: \"IFCPROJECTIONELEMENT\",\n  2598011224: \"IFCPROPERTY\",\n  986844984: \"IFCPROPERTYABSTRACTION\",\n  871118103: \"IFCPROPERTYBOUNDEDVALUE\",\n  1680319473: \"IFCPROPERTYDEFINITION\",\n  148025276: \"IFCPROPERTYDEPENDENCYRELATIONSHIP\",\n  4166981789: \"IFCPROPERTYENUMERATEDVALUE\",\n  3710013099: \"IFCPROPERTYENUMERATION\",\n  2752243245: \"IFCPROPERTYLISTVALUE\",\n  941946838: \"IFCPROPERTYREFERENCEVALUE\",\n  1451395588: \"IFCPROPERTYSET\",\n  3357820518: \"IFCPROPERTYSETDEFINITION\",\n  492091185: \"IFCPROPERTYSETTEMPLATE\",\n  3650150729: \"IFCPROPERTYSINGLEVALUE\",\n  110355661: \"IFCPROPERTYTABLEVALUE\",\n  3521284610: \"IFCPROPERTYTEMPLATE\",\n  1482703590: \"IFCPROPERTYTEMPLATEDEFINITION\",\n  738039164: \"IFCPROTECTIVEDEVICE\",\n  2295281155: \"IFCPROTECTIVEDEVICETRIPPINGUNIT\",\n  655969474: \"IFCPROTECTIVEDEVICETRIPPINGUNITTYPE\",\n  1842657554: \"IFCPROTECTIVEDEVICETYPE\",\n  3219374653: \"IFCPROXY\",\n  90941305: \"IFCPUMP\",\n  2250791053: \"IFCPUMPTYPE\",\n  2044713172: \"IFCQUANTITYAREA\",\n  2093928680: \"IFCQUANTITYCOUNT\",\n  931644368: \"IFCQUANTITYLENGTH\",\n  2090586900: \"IFCQUANTITYSET\",\n  3252649465: \"IFCQUANTITYTIME\",\n  2405470396: \"IFCQUANTITYVOLUME\",\n  825690147: \"IFCQUANTITYWEIGHT\",\n  2262370178: \"IFCRAILING\",\n  2893384427: \"IFCRAILINGTYPE\",\n  3024970846: \"IFCRAMP\",\n  3283111854: \"IFCRAMPFLIGHT\",\n  2324767716: \"IFCRAMPFLIGHTTYPE\",\n  1469900589: \"IFCRAMPTYPE\",\n  1232101972: \"IFCRATIONALBSPLINECURVEWITHKNOTS\",\n  683857671: \"IFCRATIONALBSPLINESURFACEWITHKNOTS\",\n  2770003689: \"IFCRECTANGLEHOLLOWPROFILEDEF\",\n  3615266464: \"IFCRECTANGLEPROFILEDEF\",\n  2798486643: \"IFCRECTANGULARPYRAMID\",\n  3454111270: \"IFCRECTANGULARTRIMMEDSURFACE\",\n  3915482550: \"IFCRECURRENCEPATTERN\",\n  2433181523: \"IFCREFERENCE\",\n  4021432810: \"IFCREFERENT\",\n  3413951693: \"IFCREGULARTIMESERIES\",\n  1580146022: \"IFCREINFORCEMENTBARPROPERTIES\",\n  3765753017: \"IFCREINFORCEMENTDEFINITIONPROPERTIES\",\n  979691226: \"IFCREINFORCINGBAR\",\n  2572171363: \"IFCREINFORCINGBARTYPE\",\n  3027567501: \"IFCREINFORCINGELEMENT\",\n  964333572: \"IFCREINFORCINGELEMENTTYPE\",\n  2320036040: \"IFCREINFORCINGMESH\",\n  2310774935: \"IFCREINFORCINGMESHTYPE\",\n  160246688: \"IFCRELAGGREGATES\",\n  3939117080: \"IFCRELASSIGNS\",\n  1683148259: \"IFCRELASSIGNSTOACTOR\",\n  2495723537: \"IFCRELASSIGNSTOCONTROL\",\n  1307041759: \"IFCRELASSIGNSTOGROUP\",\n  1027710054: \"IFCRELASSIGNSTOGROUPBYFACTOR\",\n  4278684876: \"IFCRELASSIGNSTOPROCESS\",\n  2857406711: \"IFCRELASSIGNSTOPRODUCT\",\n  205026976: \"IFCRELASSIGNSTORESOURCE\",\n  1865459582: \"IFCRELASSOCIATES\",\n  4095574036: \"IFCRELASSOCIATESAPPROVAL\",\n  919958153: \"IFCRELASSOCIATESCLASSIFICATION\",\n  2728634034: \"IFCRELASSOCIATESCONSTRAINT\",\n  982818633: \"IFCRELASSOCIATESDOCUMENT\",\n  3840914261: \"IFCRELASSOCIATESLIBRARY\",\n  2655215786: \"IFCRELASSOCIATESMATERIAL\",\n  826625072: \"IFCRELCONNECTS\",\n  1204542856: \"IFCRELCONNECTSELEMENTS\",\n  3945020480: \"IFCRELCONNECTSPATHELEMENTS\",\n  4201705270: \"IFCRELCONNECTSPORTTOELEMENT\",\n  3190031847: \"IFCRELCONNECTSPORTS\",\n  2127690289: \"IFCRELCONNECTSSTRUCTURALACTIVITY\",\n  1638771189: \"IFCRELCONNECTSSTRUCTURALMEMBER\",\n  504942748: \"IFCRELCONNECTSWITHECCENTRICITY\",\n  3678494232: \"IFCRELCONNECTSWITHREALIZINGELEMENTS\",\n  3242617779: \"IFCRELCONTAINEDINSPATIALSTRUCTURE\",\n  886880790: \"IFCRELCOVERSBLDGELEMENTS\",\n  2802773753: \"IFCRELCOVERSSPACES\",\n  2565941209: \"IFCRELDECLARES\",\n  2551354335: \"IFCRELDECOMPOSES\",\n  693640335: \"IFCRELDEFINES\",\n  1462361463: \"IFCRELDEFINESBYOBJECT\",\n  4186316022: \"IFCRELDEFINESBYPROPERTIES\",\n  307848117: \"IFCRELDEFINESBYTEMPLATE\",\n  781010003: \"IFCRELDEFINESBYTYPE\",\n  3940055652: \"IFCRELFILLSELEMENT\",\n  279856033: \"IFCRELFLOWCONTROLELEMENTS\",\n  427948657: \"IFCRELINTERFERESELEMENTS\",\n  3268803585: \"IFCRELNESTS\",\n  1441486842: \"IFCRELPOSITIONS\",\n  750771296: \"IFCRELPROJECTSELEMENT\",\n  1245217292: \"IFCRELREFERENCEDINSPATIALSTRUCTURE\",\n  4122056220: \"IFCRELSEQUENCE\",\n  366585022: \"IFCRELSERVICESBUILDINGS\",\n  3451746338: \"IFCRELSPACEBOUNDARY\",\n  3523091289: \"IFCRELSPACEBOUNDARY1STLEVEL\",\n  1521410863: \"IFCRELSPACEBOUNDARY2NDLEVEL\",\n  1401173127: \"IFCRELVOIDSELEMENT\",\n  478536968: \"IFCRELATIONSHIP\",\n  816062949: \"IFCREPARAMETRISEDCOMPOSITECURVESEGMENT\",\n  1076942058: \"IFCREPRESENTATION\",\n  3377609919: \"IFCREPRESENTATIONCONTEXT\",\n  3008791417: \"IFCREPRESENTATIONITEM\",\n  1660063152: \"IFCREPRESENTATIONMAP\",\n  2914609552: \"IFCRESOURCE\",\n  2943643501: \"IFCRESOURCEAPPROVALRELATIONSHIP\",\n  1608871552: \"IFCRESOURCECONSTRAINTRELATIONSHIP\",\n  2439245199: \"IFCRESOURCELEVELRELATIONSHIP\",\n  1042787934: \"IFCRESOURCETIME\",\n  1856042241: \"IFCREVOLVEDAREASOLID\",\n  3243963512: \"IFCREVOLVEDAREASOLIDTAPERED\",\n  4158566097: \"IFCRIGHTCIRCULARCONE\",\n  3626867408: \"IFCRIGHTCIRCULARCYLINDER\",\n  2016517767: \"IFCROOF\",\n  2781568857: \"IFCROOFTYPE\",\n  2341007311: \"IFCROOT\",\n  2778083089: \"IFCROUNDEDRECTANGLEPROFILEDEF\",\n  448429030: \"IFCSIUNIT\",\n  3053780830: \"IFCSANITARYTERMINAL\",\n  1768891740: \"IFCSANITARYTERMINALTYPE\",\n  1054537805: \"IFCSCHEDULINGTIME\",\n  2157484638: \"IFCSEAMCURVE\",\n  2042790032: \"IFCSECTIONPROPERTIES\",\n  4165799628: \"IFCSECTIONREINFORCEMENTPROPERTIES\",\n  1862484736: \"IFCSECTIONEDSOLID\",\n  1290935644: \"IFCSECTIONEDSOLIDHORIZONTAL\",\n  1509187699: \"IFCSECTIONEDSPINE\",\n  4086658281: \"IFCSENSOR\",\n  1783015770: \"IFCSENSORTYPE\",\n  1329646415: \"IFCSHADINGDEVICE\",\n  4074543187: \"IFCSHADINGDEVICETYPE\",\n  867548509: \"IFCSHAPEASPECT\",\n  3982875396: \"IFCSHAPEMODEL\",\n  4240577450: \"IFCSHAPEREPRESENTATION\",\n  4124623270: \"IFCSHELLBASEDSURFACEMODEL\",\n  3692461612: \"IFCSIMPLEPROPERTY\",\n  3663146110: \"IFCSIMPLEPROPERTYTEMPLATE\",\n  4097777520: \"IFCSITE\",\n  1529196076: \"IFCSLAB\",\n  3127900445: \"IFCSLABELEMENTEDCASE\",\n  3027962421: \"IFCSLABSTANDARDCASE\",\n  2533589738: \"IFCSLABTYPE\",\n  2609359061: \"IFCSLIPPAGECONNECTIONCONDITION\",\n  3420628829: \"IFCSOLARDEVICE\",\n  1072016465: \"IFCSOLARDEVICETYPE\",\n  723233188: \"IFCSOLIDMODEL\",\n  3856911033: \"IFCSPACE\",\n  1999602285: \"IFCSPACEHEATER\",\n  1305183839: \"IFCSPACEHEATERTYPE\",\n  3812236995: \"IFCSPACETYPE\",\n  1412071761: \"IFCSPATIALELEMENT\",\n  710998568: \"IFCSPATIALELEMENTTYPE\",\n  2706606064: \"IFCSPATIALSTRUCTUREELEMENT\",\n  3893378262: \"IFCSPATIALSTRUCTUREELEMENTTYPE\",\n  463610769: \"IFCSPATIALZONE\",\n  2481509218: \"IFCSPATIALZONETYPE\",\n  451544542: \"IFCSPHERE\",\n  4015995234: \"IFCSPHERICALSURFACE\",\n  1404847402: \"IFCSTACKTERMINAL\",\n  3112655638: \"IFCSTACKTERMINALTYPE\",\n  331165859: \"IFCSTAIR\",\n  4252922144: \"IFCSTAIRFLIGHT\",\n  1039846685: \"IFCSTAIRFLIGHTTYPE\",\n  338393293: \"IFCSTAIRTYPE\",\n  682877961: \"IFCSTRUCTURALACTION\",\n  3544373492: \"IFCSTRUCTURALACTIVITY\",\n  2515109513: \"IFCSTRUCTURALANALYSISMODEL\",\n  1179482911: \"IFCSTRUCTURALCONNECTION\",\n  2273995522: \"IFCSTRUCTURALCONNECTIONCONDITION\",\n  1004757350: \"IFCSTRUCTURALCURVEACTION\",\n  4243806635: \"IFCSTRUCTURALCURVECONNECTION\",\n  214636428: \"IFCSTRUCTURALCURVEMEMBER\",\n  2445595289: \"IFCSTRUCTURALCURVEMEMBERVARYING\",\n  2757150158: \"IFCSTRUCTURALCURVEREACTION\",\n  3136571912: \"IFCSTRUCTURALITEM\",\n  1807405624: \"IFCSTRUCTURALLINEARACTION\",\n  2162789131: \"IFCSTRUCTURALLOAD\",\n  385403989: \"IFCSTRUCTURALLOADCASE\",\n  3478079324: \"IFCSTRUCTURALLOADCONFIGURATION\",\n  1252848954: \"IFCSTRUCTURALLOADGROUP\",\n  1595516126: \"IFCSTRUCTURALLOADLINEARFORCE\",\n  609421318: \"IFCSTRUCTURALLOADORRESULT\",\n  2668620305: \"IFCSTRUCTURALLOADPLANARFORCE\",\n  2473145415: \"IFCSTRUCTURALLOADSINGLEDISPLACEMENT\",\n  1973038258: \"IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION\",\n  1597423693: \"IFCSTRUCTURALLOADSINGLEFORCE\",\n  1190533807: \"IFCSTRUCTURALLOADSINGLEFORCEWARPING\",\n  2525727697: \"IFCSTRUCTURALLOADSTATIC\",\n  3408363356: \"IFCSTRUCTURALLOADTEMPERATURE\",\n  530289379: \"IFCSTRUCTURALMEMBER\",\n  1621171031: \"IFCSTRUCTURALPLANARACTION\",\n  2082059205: \"IFCSTRUCTURALPOINTACTION\",\n  734778138: \"IFCSTRUCTURALPOINTCONNECTION\",\n  1235345126: \"IFCSTRUCTURALPOINTREACTION\",\n  3689010777: \"IFCSTRUCTURALREACTION\",\n  2986769608: \"IFCSTRUCTURALRESULTGROUP\",\n  3657597509: \"IFCSTRUCTURALSURFACEACTION\",\n  1975003073: \"IFCSTRUCTURALSURFACECONNECTION\",\n  3979015343: \"IFCSTRUCTURALSURFACEMEMBER\",\n  2218152070: \"IFCSTRUCTURALSURFACEMEMBERVARYING\",\n  603775116: \"IFCSTRUCTURALSURFACEREACTION\",\n  2830218821: \"IFCSTYLEMODEL\",\n  3958052878: \"IFCSTYLEDITEM\",\n  3049322572: \"IFCSTYLEDREPRESENTATION\",\n  148013059: \"IFCSUBCONTRACTRESOURCE\",\n  4095615324: \"IFCSUBCONTRACTRESOURCETYPE\",\n  2233826070: \"IFCSUBEDGE\",\n  2513912981: \"IFCSURFACE\",\n  699246055: \"IFCSURFACECURVE\",\n  2028607225: \"IFCSURFACECURVESWEPTAREASOLID\",\n  3101698114: \"IFCSURFACEFEATURE\",\n  2809605785: \"IFCSURFACEOFLINEAREXTRUSION\",\n  4124788165: \"IFCSURFACEOFREVOLUTION\",\n  2934153892: \"IFCSURFACEREINFORCEMENTAREA\",\n  1300840506: \"IFCSURFACESTYLE\",\n  3303107099: \"IFCSURFACESTYLELIGHTING\",\n  1607154358: \"IFCSURFACESTYLEREFRACTION\",\n  1878645084: \"IFCSURFACESTYLERENDERING\",\n  846575682: \"IFCSURFACESTYLESHADING\",\n  1351298697: \"IFCSURFACESTYLEWITHTEXTURES\",\n  626085974: \"IFCSURFACETEXTURE\",\n  2247615214: \"IFCSWEPTAREASOLID\",\n  1260650574: \"IFCSWEPTDISKSOLID\",\n  1096409881: \"IFCSWEPTDISKSOLIDPOLYGONAL\",\n  230924584: \"IFCSWEPTSURFACE\",\n  1162798199: \"IFCSWITCHINGDEVICE\",\n  2315554128: \"IFCSWITCHINGDEVICETYPE\",\n  2254336722: \"IFCSYSTEM\",\n  413509423: \"IFCSYSTEMFURNITUREELEMENT\",\n  1580310250: \"IFCSYSTEMFURNITUREELEMENTTYPE\",\n  3071757647: \"IFCTSHAPEPROFILEDEF\",\n  985171141: \"IFCTABLE\",\n  2043862942: \"IFCTABLECOLUMN\",\n  531007025: \"IFCTABLEROW\",\n  812556717: \"IFCTANK\",\n  5716631: \"IFCTANKTYPE\",\n  3473067441: \"IFCTASK\",\n  1549132990: \"IFCTASKTIME\",\n  2771591690: \"IFCTASKTIMERECURRING\",\n  3206491090: \"IFCTASKTYPE\",\n  912023232: \"IFCTELECOMADDRESS\",\n  3824725483: \"IFCTENDON\",\n  2347447852: \"IFCTENDONANCHOR\",\n  3081323446: \"IFCTENDONANCHORTYPE\",\n  3663046924: \"IFCTENDONCONDUIT\",\n  2281632017: \"IFCTENDONCONDUITTYPE\",\n  2415094496: \"IFCTENDONTYPE\",\n  2387106220: \"IFCTESSELLATEDFACESET\",\n  901063453: \"IFCTESSELLATEDITEM\",\n  4282788508: \"IFCTEXTLITERAL\",\n  3124975700: \"IFCTEXTLITERALWITHEXTENT\",\n  1447204868: \"IFCTEXTSTYLE\",\n  1983826977: \"IFCTEXTSTYLEFONTMODEL\",\n  2636378356: \"IFCTEXTSTYLEFORDEFINEDFONT\",\n  1640371178: \"IFCTEXTSTYLETEXTMODEL\",\n  280115917: \"IFCTEXTURECOORDINATE\",\n  1742049831: \"IFCTEXTURECOORDINATEGENERATOR\",\n  2552916305: \"IFCTEXTUREMAP\",\n  1210645708: \"IFCTEXTUREVERTEX\",\n  3611470254: \"IFCTEXTUREVERTEXLIST\",\n  1199560280: \"IFCTIMEPERIOD\",\n  3101149627: \"IFCTIMESERIES\",\n  581633288: \"IFCTIMESERIESVALUE\",\n  1377556343: \"IFCTOPOLOGICALREPRESENTATIONITEM\",\n  1735638870: \"IFCTOPOLOGYREPRESENTATION\",\n  1935646853: \"IFCTOROIDALSURFACE\",\n  3825984169: \"IFCTRANSFORMER\",\n  1692211062: \"IFCTRANSFORMERTYPE\",\n  2595432518: \"IFCTRANSITIONCURVESEGMENT2D\",\n  1620046519: \"IFCTRANSPORTELEMENT\",\n  2097647324: \"IFCTRANSPORTELEMENTTYPE\",\n  2715220739: \"IFCTRAPEZIUMPROFILEDEF\",\n  2916149573: \"IFCTRIANGULATEDFACESET\",\n  1229763772: \"IFCTRIANGULATEDIRREGULARNETWORK\",\n  3593883385: \"IFCTRIMMEDCURVE\",\n  3026737570: \"IFCTUBEBUNDLE\",\n  1600972822: \"IFCTUBEBUNDLETYPE\",\n  1628702193: \"IFCTYPEOBJECT\",\n  3736923433: \"IFCTYPEPROCESS\",\n  2347495698: \"IFCTYPEPRODUCT\",\n  3698973494: \"IFCTYPERESOURCE\",\n  427810014: \"IFCUSHAPEPROFILEDEF\",\n  180925521: \"IFCUNITASSIGNMENT\",\n  630975310: \"IFCUNITARYCONTROLELEMENT\",\n  3179687236: \"IFCUNITARYCONTROLELEMENTTYPE\",\n  4292641817: \"IFCUNITARYEQUIPMENT\",\n  1911125066: \"IFCUNITARYEQUIPMENTTYPE\",\n  4207607924: \"IFCVALVE\",\n  728799441: \"IFCVALVETYPE\",\n  1417489154: \"IFCVECTOR\",\n  2799835756: \"IFCVERTEX\",\n  2759199220: \"IFCVERTEXLOOP\",\n  1907098498: \"IFCVERTEXPOINT\",\n  1530820697: \"IFCVIBRATIONDAMPER\",\n  3956297820: \"IFCVIBRATIONDAMPERTYPE\",\n  2391383451: \"IFCVIBRATIONISOLATOR\",\n  3313531582: \"IFCVIBRATIONISOLATORTYPE\",\n  2769231204: \"IFCVIRTUALELEMENT\",\n  891718957: \"IFCVIRTUALGRIDINTERSECTION\",\n  926996030: \"IFCVOIDINGFEATURE\",\n  2391406946: \"IFCWALL\",\n  4156078855: \"IFCWALLELEMENTEDCASE\",\n  3512223829: \"IFCWALLSTANDARDCASE\",\n  1898987631: \"IFCWALLTYPE\",\n  4237592921: \"IFCWASTETERMINAL\",\n  1133259667: \"IFCWASTETERMINALTYPE\",\n  3304561284: \"IFCWINDOW\",\n  336235671: \"IFCWINDOWLININGPROPERTIES\",\n  512836454: \"IFCWINDOWPANELPROPERTIES\",\n  486154966: \"IFCWINDOWSTANDARDCASE\",\n  1299126871: \"IFCWINDOWSTYLE\",\n  4009809668: \"IFCWINDOWTYPE\",\n  4088093105: \"IFCWORKCALENDAR\",\n  1028945134: \"IFCWORKCONTROL\",\n  4218914973: \"IFCWORKPLAN\",\n  3342526732: \"IFCWORKSCHEDULE\",\n  1236880293: \"IFCWORKTIME\",\n  2543172580: \"IFCZSHAPEPROFILEDEF\",\n  1033361043: \"IFCZONE\"\n};\n\n// dist/helpers/properties.ts\nvar PropsNames = {\n  aggregates: {\n    name: IFCRELAGGREGATES,\n    relating: \"RelatingObject\",\n    related: \"RelatedObjects\",\n    key: \"children\"\n  },\n  spatial: {\n    name: IFCRELCONTAINEDINSPATIALSTRUCTURE,\n    relating: \"RelatingStructure\",\n    related: \"RelatedElements\",\n    key: \"children\"\n  },\n  psets: {\n    name: IFCRELDEFINESBYPROPERTIES,\n    relating: \"RelatingPropertyDefinition\",\n    related: \"RelatedObjects\",\n    key: \"hasPsets\"\n  },\n  materials: {\n    name: IFCRELASSOCIATESMATERIAL,\n    relating: \"RelatingMaterial\",\n    related: \"RelatedObjects\",\n    key: \"hasMaterial\"\n  },\n  type: {\n    name: IFCRELDEFINESBYTYPE,\n    relating: \"RelatingType\",\n    related: \"RelatedObjects\",\n    key: \"hasType\"\n  }\n};\nvar Properties = class {\n  constructor(api) {\n    this.api = api;\n  }\n  getIfcType(type) {\n    return IfcTypesMap[type];\n  }\n  getItemProperties(modelID, id, recursive = false) {\n    return __async(this, null, function* () {\n      return this.api.GetLine(modelID, id, recursive);\n    });\n  }\n  getPropertySets(modelID, elementID, recursive = false) {\n    return __async(this, null, function* () {\n      return yield this.getProperty(modelID, elementID, recursive, PropsNames.psets);\n    });\n  }\n  getTypeProperties(modelID, elementID, recursive = false) {\n    return __async(this, null, function* () {\n      return yield this.getProperty(modelID, elementID, recursive, PropsNames.type);\n    });\n  }\n  getMaterialsProperties(modelID, elementID, recursive = false) {\n    return __async(this, null, function* () {\n      return yield this.getProperty(modelID, elementID, recursive, PropsNames.materials);\n    });\n  }\n  getSpatialStructure(modelID, includeProperties) {\n    return __async(this, null, function* () {\n      yield this.getAllTypesOfModel(modelID);\n      const chunks = yield this.getSpatialTreeChunks(modelID);\n      const allLines = yield this.api.GetLineIDsWithType(modelID, IFCPROJECT);\n      const projectID = allLines.get(0);\n      const project = Properties.newIfcProject(projectID);\n      yield this.getSpatialNode(modelID, project, chunks, includeProperties);\n      this.cleanupTypes();\n      return project;\n    });\n  }\n  getAllItemsOfType(modelID, type, verbose) {\n    return __async(this, null, function* () {\n      let items = [];\n      const lines = yield this.api.GetLineIDsWithType(modelID, type);\n      for (let i = 0; i < lines.size(); i++)\n        items.push(lines.get(i));\n      if (!verbose)\n        return items;\n      const result = [];\n      for (let i = 0; i < items.length; i++) {\n        result.push(yield this.api.GetLine(modelID, items[i]));\n      }\n      return result;\n    });\n  }\n  getProperty(modelID, elementID, recursive = false, propName) {\n    return __async(this, null, function* () {\n      const propSetIds = yield this.getAllRelatedItemsOfType(modelID, elementID, propName);\n      const result = [];\n      for (let i = 0; i < propSetIds.length; i++) {\n        result.push(yield this.api.GetLine(modelID, propSetIds[i], recursive));\n      }\n      return result;\n    });\n  }\n  getChunks(modelID, chunks, propNames) {\n    return __async(this, null, function* () {\n      const relation = yield this.api.GetLineIDsWithType(modelID, propNames.name);\n      for (let i = 0; i < relation.size(); i++) {\n        const rel = yield this.api.GetLine(modelID, relation.get(i), false);\n        this.saveChunk(chunks, propNames, rel);\n      }\n    });\n  }\n  static isRelated(id, rel, propNames) {\n    const relatedItems = rel[propNames.related];\n    if (Array.isArray(relatedItems)) {\n      const values = relatedItems.map((item) => item.value);\n      return values.includes(id);\n    }\n    return relatedItems.value === id;\n  }\n  static newIfcProject(id) {\n    return {\n      expressID: id,\n      type: \"IFCPROJECT\",\n      children: []\n    };\n  }\n  getSpatialNode(modelID, node, treeChunks, includeProperties) {\n    return __async(this, null, function* () {\n      yield this.getChildren(modelID, node, treeChunks, PropsNames.aggregates, includeProperties);\n      yield this.getChildren(modelID, node, treeChunks, PropsNames.spatial, includeProperties);\n    });\n  }\n  getChildren(modelID, node, treeChunks, propNames, includeProperties) {\n    return __async(this, null, function* () {\n      const children = treeChunks[node.expressID];\n      if (children == void 0)\n        return;\n      const prop = propNames.key;\n      const nodes = [];\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        let node2 = this.newNode(child);\n        if (includeProperties) {\n          const properties = yield this.getItemProperties(modelID, node2.expressID);\n          node2 = __spreadValues(__spreadValues({}, properties), node2);\n        }\n        yield this.getSpatialNode(modelID, node2, treeChunks, includeProperties);\n        nodes.push(node2);\n      }\n      node[prop] = nodes;\n    });\n  }\n  newNode(id) {\n    const typeName = this.getNodeType(id);\n    return {\n      expressID: id,\n      type: typeName,\n      children: []\n    };\n  }\n  getNodeType(id) {\n    const typeID = this.types[id];\n    return IfcElements2[typeID];\n  }\n  getSpatialTreeChunks(modelID) {\n    return __async(this, null, function* () {\n      const treeChunks = {};\n      yield this.getChunks(modelID, treeChunks, PropsNames.aggregates);\n      yield this.getChunks(modelID, treeChunks, PropsNames.spatial);\n      return treeChunks;\n    });\n  }\n  saveChunk(chunks, propNames, rel) {\n    const relating = rel[propNames.relating].value;\n    const related = rel[propNames.related].map((r) => r.value);\n    if (chunks[relating] == void 0) {\n      chunks[relating] = related;\n    } else {\n      chunks[relating] = chunks[relating].concat(related);\n    }\n  }\n  getRelated(rel, propNames, IDs) {\n    const element = rel[propNames.relating];\n    if (!Array.isArray(element))\n      IDs.push(element.value);\n    else\n      element.forEach((ele) => IDs.push(ele.value));\n  }\n  getAllRelatedItemsOfType(modelID, id, propNames) {\n    return __async(this, null, function* () {\n      const lines = yield this.api.GetLineIDsWithType(modelID, propNames.name);\n      const IDs = [];\n      for (let i = 0; i < lines.size(); i++) {\n        const rel = yield this.api.GetLine(modelID, lines.get(i));\n        const isRelated = Properties.isRelated(id, rel, propNames);\n        if (isRelated)\n          this.getRelated(rel, propNames, IDs);\n      }\n      return IDs;\n    });\n  }\n  cleanupTypes() {\n    this.types = {};\n  }\n  getAllTypesOfModel(modelID) {\n    return __async(this, null, function* () {\n      const result = {};\n      const elements = Object.keys(IfcElements2).map((e) => parseInt(e));\n      for (let i = 0; i < elements.length; i++) {\n        const element = elements[i];\n        const lines = yield this.api.GetLineIDsWithType(modelID, element);\n        const size = lines.size();\n        for (let i2 = 0; i2 < size; i2++)\n          result[lines.get(i2)] = element;\n      }\n      this.types = result;\n    });\n  }\n};\n\n// dist/web-ifc-api.ts\nvar WebIFCWasm;\nif (typeof self !== \"undefined\" && self.crossOriginIsolated) {\n  WebIFCWasm = require_web_ifc_mt();\n} else {\n  WebIFCWasm = require_web_ifc();\n}\nvar UNKNOWN = 0;\nvar STRING = 1;\nvar LABEL = 2;\nvar ENUM = 3;\nvar REAL = 4;\nvar REF = 5;\nvar EMPTY = 6;\nvar SET_BEGIN = 7;\nvar SET_END = 8;\nvar LINE_END = 9;\nfunction ms() {\n  return new Date().getTime();\n}\nvar IfcAPI2 = class {\n  constructor() {\n    this.wasmModule = void 0;\n    this.fs = void 0;\n    this.wasmPath = \"\";\n    this.isWasmPathAbsolute = false;\n    this.ifcGuidMap = new Map();\n    this.properties = new Properties(this);\n  }\n  Init(customLocateFileHandler) {\n    return __async(this, null, function* () {\n      if (WebIFCWasm) {\n        let locateFileHandler = (path, prefix) => {\n          if (path.endsWith(\".wasm\")) {\n            if (this.isWasmPathAbsolute) {\n              return this.wasmPath + path;\n            }\n            return prefix + this.wasmPath + path;\n          }\n          return prefix + path;\n        };\n        this.wasmModule = yield WebIFCWasm({ noInitialRun: true, locateFile: customLocateFileHandler || locateFileHandler });\n        this.fs = this.wasmModule.FS;\n      } else {\n        console.error(`Could not find wasm module at './web-ifc' from web-ifc-api.ts`);\n      }\n    });\n  }\n  OpenModel(data, settings) {\n    let s = __spreadValues({\n      COORDINATE_TO_ORIGIN: false,\n      USE_FAST_BOOLS: false,\n      CIRCLE_SEGMENTS_LOW: 5,\n      CIRCLE_SEGMENTS_MEDIUM: 8,\n      CIRCLE_SEGMENTS_HIGH: 12,\n      BOOL_ABORT_THRESHOLD: 1e4\n    }, settings);\n    let offsetInSrc = 0;\n    let result = this.wasmModule.OpenModel(s, (destPtr, destSize) => {\n      let srcSize = Math.min(data.byteLength - offsetInSrc, destSize);\n      let dest = this.wasmModule.HEAPU8.subarray(destPtr, destPtr + destSize);\n      let src = data.subarray(offsetInSrc, offsetInSrc + srcSize);\n      dest.set(src);\n      offsetInSrc += srcSize;\n      return srcSize;\n    });\n    return result;\n  }\n  CreateModel(settings) {\n    let s = __spreadValues({\n      COORDINATE_TO_ORIGIN: false,\n      USE_FAST_BOOLS: false,\n      CIRCLE_SEGMENTS_LOW: 5,\n      CIRCLE_SEGMENTS_MEDIUM: 8,\n      CIRCLE_SEGMENTS_HIGH: 12,\n      BOOL_ABORT_THRESHOLD: 1e4\n    }, settings);\n    let result = this.wasmModule.CreateModel(s);\n    return result;\n  }\n  ExportFileAsIFC(modelID) {\n    this.wasmModule.ExportFileAsIFC(modelID);\n    let result = this.fs.readFile(\"/export.ifc\");\n    this.wasmModule[\"FS_unlink\"](\"/export.ifc\");\n    return result;\n  }\n  GetGeometry(modelID, geometryExpressID) {\n    return this.wasmModule.GetGeometry(modelID, geometryExpressID);\n  }\n  GetLine(modelID, expressID, flatten = false) {\n    let rawLineData = this.GetRawLineData(modelID, expressID);\n    let lineData = FromRawLineData[rawLineData.type](rawLineData);\n    if (flatten) {\n      this.FlattenLine(modelID, lineData);\n    }\n    return lineData;\n  }\n  GetAndClearErrors(modelID) {\n    return this.wasmModule.GetAndClearErrors(modelID);\n  }\n  WriteLine(modelID, lineObject) {\n    Object.keys(lineObject).forEach((propertyName) => {\n      let property = lineObject[propertyName];\n      if (property && property.expressID !== void 0) {\n        this.WriteLine(modelID, property);\n        lineObject[propertyName] = {\n          type: 5,\n          value: property.expressID\n        };\n      } else if (Array.isArray(property) && property.length > 0) {\n        for (let i = 0; i < property.length; i++) {\n          if (property[i].expressID !== void 0) {\n            this.WriteLine(modelID, property[i]);\n            lineObject[propertyName][i] = {\n              type: 5,\n              value: property[i].expressID\n            };\n          }\n        }\n      }\n    });\n    let rawLineData = {\n      ID: lineObject.expressID,\n      type: lineObject.type,\n      arguments: lineObject.ToTape()\n    };\n    this.WriteRawLineData(modelID, rawLineData);\n  }\n  FlattenLine(modelID, line) {\n    Object.keys(line).forEach((propertyName) => {\n      let property = line[propertyName];\n      if (property && property.type === 5) {\n        line[propertyName] = this.GetLine(modelID, property.value, true);\n      } else if (Array.isArray(property) && property.length > 0 && property[0].type === 5) {\n        for (let i = 0; i < property.length; i++) {\n          line[propertyName][i] = this.GetLine(modelID, property[i].value, true);\n        }\n      }\n    });\n  }\n  GetRawLineData(modelID, expressID) {\n    return this.wasmModule.GetLine(modelID, expressID);\n  }\n  WriteRawLineData(modelID, data) {\n    return this.wasmModule.WriteLine(modelID, data.ID, data.type, data.arguments);\n  }\n  GetLineIDsWithType(modelID, type) {\n    return this.wasmModule.GetLineIDsWithType(modelID, type);\n  }\n  GetAllLines(modelID) {\n    return this.wasmModule.GetAllLines(modelID);\n  }\n  SetGeometryTransformation(modelID, transformationMatrix) {\n    if (transformationMatrix.length != 16) {\n      console.log(`Bad transformation matrix size: ${transformationMatrix.length}`);\n      return;\n    }\n    this.wasmModule.SetGeometryTransformation(modelID, transformationMatrix);\n  }\n  GetCoordinationMatrix(modelID) {\n    return this.wasmModule.GetCoordinationMatrix(modelID);\n  }\n  GetVertexArray(ptr, size) {\n    return this.getSubArray(this.wasmModule.HEAPF32, ptr, size);\n  }\n  GetIndexArray(ptr, size) {\n    return this.getSubArray(this.wasmModule.HEAPU32, ptr, size);\n  }\n  getSubArray(heap, startPtr, sizeBytes) {\n    return heap.subarray(startPtr / 4, startPtr / 4 + sizeBytes).slice(0);\n  }\n  CloseModel(modelID) {\n    this.ifcGuidMap.delete(modelID);\n    this.wasmModule.CloseModel(modelID);\n  }\n  StreamAllMeshes(modelID, meshCallback) {\n    this.wasmModule.StreamAllMeshes(modelID, meshCallback);\n  }\n  StreamAllMeshesWithTypes(modelID, types, meshCallback) {\n    this.wasmModule.StreamAllMeshesWithTypes(modelID, types, meshCallback);\n  }\n  IsModelOpen(modelID) {\n    return this.wasmModule.IsModelOpen(modelID);\n  }\n  LoadAllGeometry(modelID) {\n    return this.wasmModule.LoadAllGeometry(modelID);\n  }\n  GetFlatMesh(modelID, expressID) {\n    return this.wasmModule.GetFlatMesh(modelID, expressID);\n  }\n  CreateIfcGuidToExpressIdMapping(modelID) {\n    const map = new Map();\n    for (let x = 0; x < IfcElements.length; x++) {\n      const type = IfcElements[x];\n      const lines = this.GetLineIDsWithType(modelID, type);\n      const size = lines.size();\n      for (let y = 0; y < size; y++) {\n        const expressID = lines.get(y);\n        const info = this.GetLine(modelID, expressID);\n        const globalID = info.GlobalId.value;\n        map.set(expressID, globalID);\n        map.set(globalID, expressID);\n      }\n    }\n    this.ifcGuidMap.set(modelID, map);\n  }\n  SetWasmPath(path, absolute = false) {\n    this.wasmPath = path;\n    this.isWasmPathAbsolute = absolute;\n  }\n};\nexport {\n  EMPTY,\n  ENUM,\n  FromRawLineData,\n  Handle,\n  IFCACTIONREQUEST,\n  IFCACTOR,\n  IFCACTORROLE,\n  IFCACTUATOR,\n  IFCACTUATORTYPE,\n  IFCADDRESS,\n  IFCADVANCEDBREP,\n  IFCADVANCEDBREPWITHVOIDS,\n  IFCADVANCEDFACE,\n  IFCAIRTERMINAL,\n  IFCAIRTERMINALBOX,\n  IFCAIRTERMINALBOXTYPE,\n  IFCAIRTERMINALTYPE,\n  IFCAIRTOAIRHEATRECOVERY,\n  IFCAIRTOAIRHEATRECOVERYTYPE,\n  IFCALARM,\n  IFCALARMTYPE,\n  IFCALIGNMENT,\n  IFCALIGNMENT2DHORIZONTAL,\n  IFCALIGNMENT2DHORIZONTALSEGMENT,\n  IFCALIGNMENT2DSEGMENT,\n  IFCALIGNMENT2DVERSEGCIRCULARARC,\n  IFCALIGNMENT2DVERSEGLINE,\n  IFCALIGNMENT2DVERSEGPARABOLICARC,\n  IFCALIGNMENT2DVERTICAL,\n  IFCALIGNMENT2DVERTICALSEGMENT,\n  IFCALIGNMENTCURVE,\n  IFCANNOTATION,\n  IFCANNOTATIONFILLAREA,\n  IFCAPPLICATION,\n  IFCAPPLIEDVALUE,\n  IFCAPPROVAL,\n  IFCAPPROVALRELATIONSHIP,\n  IFCARBITRARYCLOSEDPROFILEDEF,\n  IFCARBITRARYOPENPROFILEDEF,\n  IFCARBITRARYPROFILEDEFWITHVOIDS,\n  IFCASSET,\n  IFCASYMMETRICISHAPEPROFILEDEF,\n  IFCAUDIOVISUALAPPLIANCE,\n  IFCAUDIOVISUALAPPLIANCETYPE,\n  IFCAXIS1PLACEMENT,\n  IFCAXIS2PLACEMENT2D,\n  IFCAXIS2PLACEMENT3D,\n  IFCBEAM,\n  IFCBEAMSTANDARDCASE,\n  IFCBEAMTYPE,\n  IFCBEARING,\n  IFCBEARINGTYPE,\n  IFCBLOBTEXTURE,\n  IFCBLOCK,\n  IFCBOILER,\n  IFCBOILERTYPE,\n  IFCBOOLEANCLIPPINGRESULT,\n  IFCBOOLEANRESULT,\n  IFCBOUNDARYCONDITION,\n  IFCBOUNDARYCURVE,\n  IFCBOUNDARYEDGECONDITION,\n  IFCBOUNDARYFACECONDITION,\n  IFCBOUNDARYNODECONDITION,\n  IFCBOUNDARYNODECONDITIONWARPING,\n  IFCBOUNDEDCURVE,\n  IFCBOUNDEDSURFACE,\n  IFCBOUNDINGBOX,\n  IFCBOXEDHALFSPACE,\n  IFCBRIDGE,\n  IFCBRIDGEPART,\n  IFCBSPLINECURVE,\n  IFCBSPLINECURVEWITHKNOTS,\n  IFCBSPLINESURFACE,\n  IFCBSPLINESURFACEWITHKNOTS,\n  IFCBUILDING,\n  IFCBUILDINGELEMENT,\n  IFCBUILDINGELEMENTPART,\n  IFCBUILDINGELEMENTPARTTYPE,\n  IFCBUILDINGELEMENTPROXY,\n  IFCBUILDINGELEMENTPROXYTYPE,\n  IFCBUILDINGELEMENTTYPE,\n  IFCBUILDINGSTOREY,\n  IFCBUILDINGSYSTEM,\n  IFCBURNER,\n  IFCBURNERTYPE,\n  IFCCABLECARRIERFITTING,\n  IFCCABLECARRIERFITTINGTYPE,\n  IFCCABLECARRIERSEGMENT,\n  IFCCABLECARRIERSEGMENTTYPE,\n  IFCCABLEFITTING,\n  IFCCABLEFITTINGTYPE,\n  IFCCABLESEGMENT,\n  IFCCABLESEGMENTTYPE,\n  IFCCAISSONFOUNDATION,\n  IFCCAISSONFOUNDATIONTYPE,\n  IFCCARTESIANPOINT,\n  IFCCARTESIANPOINTLIST,\n  IFCCARTESIANPOINTLIST2D,\n  IFCCARTESIANPOINTLIST3D,\n  IFCCARTESIANTRANSFORMATIONOPERATOR,\n  IFCCARTESIANTRANSFORMATIONOPERATOR2D,\n  IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM,\n  IFCCARTESIANTRANSFORMATIONOPERATOR3D,\n  IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM,\n  IFCCENTERLINEPROFILEDEF,\n  IFCCHILLER,\n  IFCCHILLERTYPE,\n  IFCCHIMNEY,\n  IFCCHIMNEYTYPE,\n  IFCCIRCLE,\n  IFCCIRCLEHOLLOWPROFILEDEF,\n  IFCCIRCLEPROFILEDEF,\n  IFCCIRCULARARCSEGMENT2D,\n  IFCCIVILELEMENT,\n  IFCCIVILELEMENTTYPE,\n  IFCCLASSIFICATION,\n  IFCCLASSIFICATIONREFERENCE,\n  IFCCLOSEDSHELL,\n  IFCCOIL,\n  IFCCOILTYPE,\n  IFCCOLOURRGB,\n  IFCCOLOURRGBLIST,\n  IFCCOLOURSPECIFICATION,\n  IFCCOLUMN,\n  IFCCOLUMNSTANDARDCASE,\n  IFCCOLUMNTYPE,\n  IFCCOMMUNICATIONSAPPLIANCE,\n  IFCCOMMUNICATIONSAPPLIANCETYPE,\n  IFCCOMPLEXPROPERTY,\n  IFCCOMPLEXPROPERTYTEMPLATE,\n  IFCCOMPOSITECURVE,\n  IFCCOMPOSITECURVEONSURFACE,\n  IFCCOMPOSITECURVESEGMENT,\n  IFCCOMPOSITEPROFILEDEF,\n  IFCCOMPRESSOR,\n  IFCCOMPRESSORTYPE,\n  IFCCONDENSER,\n  IFCCONDENSERTYPE,\n  IFCCONIC,\n  IFCCONNECTEDFACESET,\n  IFCCONNECTIONCURVEGEOMETRY,\n  IFCCONNECTIONGEOMETRY,\n  IFCCONNECTIONPOINTECCENTRICITY,\n  IFCCONNECTIONPOINTGEOMETRY,\n  IFCCONNECTIONSURFACEGEOMETRY,\n  IFCCONNECTIONVOLUMEGEOMETRY,\n  IFCCONSTRAINT,\n  IFCCONSTRUCTIONEQUIPMENTRESOURCE,\n  IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE,\n  IFCCONSTRUCTIONMATERIALRESOURCE,\n  IFCCONSTRUCTIONMATERIALRESOURCETYPE,\n  IFCCONSTRUCTIONPRODUCTRESOURCE,\n  IFCCONSTRUCTIONPRODUCTRESOURCETYPE,\n  IFCCONSTRUCTIONRESOURCE,\n  IFCCONSTRUCTIONRESOURCETYPE,\n  IFCCONTEXT,\n  IFCCONTEXTDEPENDENTUNIT,\n  IFCCONTROL,\n  IFCCONTROLLER,\n  IFCCONTROLLERTYPE,\n  IFCCONVERSIONBASEDUNIT,\n  IFCCONVERSIONBASEDUNITWITHOFFSET,\n  IFCCOOLEDBEAM,\n  IFCCOOLEDBEAMTYPE,\n  IFCCOOLINGTOWER,\n  IFCCOOLINGTOWERTYPE,\n  IFCCOORDINATEOPERATION,\n  IFCCOORDINATEREFERENCESYSTEM,\n  IFCCOSTITEM,\n  IFCCOSTSCHEDULE,\n  IFCCOSTVALUE,\n  IFCCOVERING,\n  IFCCOVERINGTYPE,\n  IFCCREWRESOURCE,\n  IFCCREWRESOURCETYPE,\n  IFCCSGPRIMITIVE3D,\n  IFCCSGSOLID,\n  IFCCSHAPEPROFILEDEF,\n  IFCCURRENCYRELATIONSHIP,\n  IFCCURTAINWALL,\n  IFCCURTAINWALLTYPE,\n  IFCCURVE,\n  IFCCURVEBOUNDEDPLANE,\n  IFCCURVEBOUNDEDSURFACE,\n  IFCCURVESEGMENT2D,\n  IFCCURVESTYLE,\n  IFCCURVESTYLEFONT,\n  IFCCURVESTYLEFONTANDSCALING,\n  IFCCURVESTYLEFONTPATTERN,\n  IFCCYLINDRICALSURFACE,\n  IFCDAMPER,\n  IFCDAMPERTYPE,\n  IFCDEEPFOUNDATION,\n  IFCDEEPFOUNDATIONTYPE,\n  IFCDERIVEDPROFILEDEF,\n  IFCDERIVEDUNIT,\n  IFCDERIVEDUNITELEMENT,\n  IFCDIMENSIONALEXPONENTS,\n  IFCDIRECTION,\n  IFCDISCRETEACCESSORY,\n  IFCDISCRETEACCESSORYTYPE,\n  IFCDISTANCEEXPRESSION,\n  IFCDISTRIBUTIONCHAMBERELEMENT,\n  IFCDISTRIBUTIONCHAMBERELEMENTTYPE,\n  IFCDISTRIBUTIONCIRCUIT,\n  IFCDISTRIBUTIONCONTROLELEMENT,\n  IFCDISTRIBUTIONCONTROLELEMENTTYPE,\n  IFCDISTRIBUTIONELEMENT,\n  IFCDISTRIBUTIONELEMENTTYPE,\n  IFCDISTRIBUTIONFLOWELEMENT,\n  IFCDISTRIBUTIONFLOWELEMENTTYPE,\n  IFCDISTRIBUTIONPORT,\n  IFCDISTRIBUTIONSYSTEM,\n  IFCDOCUMENTINFORMATION,\n  IFCDOCUMENTINFORMATIONRELATIONSHIP,\n  IFCDOCUMENTREFERENCE,\n  IFCDOOR,\n  IFCDOORLININGPROPERTIES,\n  IFCDOORPANELPROPERTIES,\n  IFCDOORSTANDARDCASE,\n  IFCDOORSTYLE,\n  IFCDOORTYPE,\n  IFCDRAUGHTINGPREDEFINEDCOLOUR,\n  IFCDRAUGHTINGPREDEFINEDCURVEFONT,\n  IFCDUCTFITTING,\n  IFCDUCTFITTINGTYPE,\n  IFCDUCTSEGMENT,\n  IFCDUCTSEGMENTTYPE,\n  IFCDUCTSILENCER,\n  IFCDUCTSILENCERTYPE,\n  IFCEDGE,\n  IFCEDGECURVE,\n  IFCEDGELOOP,\n  IFCELECTRICAPPLIANCE,\n  IFCELECTRICAPPLIANCETYPE,\n  IFCELECTRICDISTRIBUTIONBOARD,\n  IFCELECTRICDISTRIBUTIONBOARDTYPE,\n  IFCELECTRICFLOWSTORAGEDEVICE,\n  IFCELECTRICFLOWSTORAGEDEVICETYPE,\n  IFCELECTRICGENERATOR,\n  IFCELECTRICGENERATORTYPE,\n  IFCELECTRICMOTOR,\n  IFCELECTRICMOTORTYPE,\n  IFCELECTRICTIMECONTROL,\n  IFCELECTRICTIMECONTROLTYPE,\n  IFCELEMENT,\n  IFCELEMENTARYSURFACE,\n  IFCELEMENTASSEMBLY,\n  IFCELEMENTASSEMBLYTYPE,\n  IFCELEMENTCOMPONENT,\n  IFCELEMENTCOMPONENTTYPE,\n  IFCELEMENTQUANTITY,\n  IFCELEMENTTYPE,\n  IFCELLIPSE,\n  IFCELLIPSEPROFILEDEF,\n  IFCENERGYCONVERSIONDEVICE,\n  IFCENERGYCONVERSIONDEVICETYPE,\n  IFCENGINE,\n  IFCENGINETYPE,\n  IFCEVAPORATIVECOOLER,\n  IFCEVAPORATIVECOOLERTYPE,\n  IFCEVAPORATOR,\n  IFCEVAPORATORTYPE,\n  IFCEVENT,\n  IFCEVENTTIME,\n  IFCEVENTTYPE,\n  IFCEXTENDEDPROPERTIES,\n  IFCEXTERNALINFORMATION,\n  IFCEXTERNALLYDEFINEDHATCHSTYLE,\n  IFCEXTERNALLYDEFINEDSURFACESTYLE,\n  IFCEXTERNALLYDEFINEDTEXTFONT,\n  IFCEXTERNALREFERENCE,\n  IFCEXTERNALREFERENCERELATIONSHIP,\n  IFCEXTERNALSPATIALELEMENT,\n  IFCEXTERNALSPATIALSTRUCTUREELEMENT,\n  IFCEXTRUDEDAREASOLID,\n  IFCEXTRUDEDAREASOLIDTAPERED,\n  IFCFACE,\n  IFCFACEBASEDSURFACEMODEL,\n  IFCFACEBOUND,\n  IFCFACEOUTERBOUND,\n  IFCFACESURFACE,\n  IFCFACETEDBREP,\n  IFCFACETEDBREPWITHVOIDS,\n  IFCFACILITY,\n  IFCFACILITYPART,\n  IFCFAILURECONNECTIONCONDITION,\n  IFCFAN,\n  IFCFANTYPE,\n  IFCFASTENER,\n  IFCFASTENERTYPE,\n  IFCFEATUREELEMENT,\n  IFCFEATUREELEMENTADDITION,\n  IFCFEATUREELEMENTSUBTRACTION,\n  IFCFILLAREASTYLE,\n  IFCFILLAREASTYLEHATCHING,\n  IFCFILLAREASTYLETILES,\n  IFCFILTER,\n  IFCFILTERTYPE,\n  IFCFIRESUPPRESSIONTERMINAL,\n  IFCFIRESUPPRESSIONTERMINALTYPE,\n  IFCFIXEDREFERENCESWEPTAREASOLID,\n  IFCFLOWCONTROLLER,\n  IFCFLOWCONTROLLERTYPE,\n  IFCFLOWFITTING,\n  IFCFLOWFITTINGTYPE,\n  IFCFLOWINSTRUMENT,\n  IFCFLOWINSTRUMENTTYPE,\n  IFCFLOWMETER,\n  IFCFLOWMETERTYPE,\n  IFCFLOWMOVINGDEVICE,\n  IFCFLOWMOVINGDEVICETYPE,\n  IFCFLOWSEGMENT,\n  IFCFLOWSEGMENTTYPE,\n  IFCFLOWSTORAGEDEVICE,\n  IFCFLOWSTORAGEDEVICETYPE,\n  IFCFLOWTERMINAL,\n  IFCFLOWTERMINALTYPE,\n  IFCFLOWTREATMENTDEVICE,\n  IFCFLOWTREATMENTDEVICETYPE,\n  IFCFOOTING,\n  IFCFOOTINGTYPE,\n  IFCFURNISHINGELEMENT,\n  IFCFURNISHINGELEMENTTYPE,\n  IFCFURNITURE,\n  IFCFURNITURETYPE,\n  IFCGEOGRAPHICELEMENT,\n  IFCGEOGRAPHICELEMENTTYPE,\n  IFCGEOMETRICCURVESET,\n  IFCGEOMETRICREPRESENTATIONCONTEXT,\n  IFCGEOMETRICREPRESENTATIONITEM,\n  IFCGEOMETRICREPRESENTATIONSUBCONTEXT,\n  IFCGEOMETRICSET,\n  IFCGRID,\n  IFCGRIDAXIS,\n  IFCGRIDPLACEMENT,\n  IFCGROUP,\n  IFCHALFSPACESOLID,\n  IFCHEATEXCHANGER,\n  IFCHEATEXCHANGERTYPE,\n  IFCHUMIDIFIER,\n  IFCHUMIDIFIERTYPE,\n  IFCIMAGETEXTURE,\n  IFCINDEXEDCOLOURMAP,\n  IFCINDEXEDPOLYCURVE,\n  IFCINDEXEDPOLYGONALFACE,\n  IFCINDEXEDPOLYGONALFACEWITHVOIDS,\n  IFCINDEXEDTEXTUREMAP,\n  IFCINDEXEDTRIANGLETEXTUREMAP,\n  IFCINTERCEPTOR,\n  IFCINTERCEPTORTYPE,\n  IFCINTERSECTIONCURVE,\n  IFCINVENTORY,\n  IFCIRREGULARTIMESERIES,\n  IFCIRREGULARTIMESERIESVALUE,\n  IFCISHAPEPROFILEDEF,\n  IFCJUNCTIONBOX,\n  IFCJUNCTIONBOXTYPE,\n  IFCLABORRESOURCE,\n  IFCLABORRESOURCETYPE,\n  IFCLAGTIME,\n  IFCLAMP,\n  IFCLAMPTYPE,\n  IFCLIBRARYINFORMATION,\n  IFCLIBRARYREFERENCE,\n  IFCLIGHTDISTRIBUTIONDATA,\n  IFCLIGHTFIXTURE,\n  IFCLIGHTFIXTURETYPE,\n  IFCLIGHTINTENSITYDISTRIBUTION,\n  IFCLIGHTSOURCE,\n  IFCLIGHTSOURCEAMBIENT,\n  IFCLIGHTSOURCEDIRECTIONAL,\n  IFCLIGHTSOURCEGONIOMETRIC,\n  IFCLIGHTSOURCEPOSITIONAL,\n  IFCLIGHTSOURCESPOT,\n  IFCLINE,\n  IFCLINEARPLACEMENT,\n  IFCLINEARPOSITIONINGELEMENT,\n  IFCLINESEGMENT2D,\n  IFCLOCALPLACEMENT,\n  IFCLOOP,\n  IFCLSHAPEPROFILEDEF,\n  IFCMANIFOLDSOLIDBREP,\n  IFCMAPCONVERSION,\n  IFCMAPPEDITEM,\n  IFCMATERIAL,\n  IFCMATERIALCLASSIFICATIONRELATIONSHIP,\n  IFCMATERIALCONSTITUENT,\n  IFCMATERIALCONSTITUENTSET,\n  IFCMATERIALDEFINITION,\n  IFCMATERIALDEFINITIONREPRESENTATION,\n  IFCMATERIALLAYER,\n  IFCMATERIALLAYERSET,\n  IFCMATERIALLAYERSETUSAGE,\n  IFCMATERIALLAYERWITHOFFSETS,\n  IFCMATERIALLIST,\n  IFCMATERIALPROFILE,\n  IFCMATERIALPROFILESET,\n  IFCMATERIALPROFILESETUSAGE,\n  IFCMATERIALPROFILESETUSAGETAPERING,\n  IFCMATERIALPROFILEWITHOFFSETS,\n  IFCMATERIALPROPERTIES,\n  IFCMATERIALRELATIONSHIP,\n  IFCMATERIALUSAGEDEFINITION,\n  IFCMEASUREWITHUNIT,\n  IFCMECHANICALFASTENER,\n  IFCMECHANICALFASTENERTYPE,\n  IFCMEDICALDEVICE,\n  IFCMEDICALDEVICETYPE,\n  IFCMEMBER,\n  IFCMEMBERSTANDARDCASE,\n  IFCMEMBERTYPE,\n  IFCMETRIC,\n  IFCMIRROREDPROFILEDEF,\n  IFCMONETARYUNIT,\n  IFCMOTORCONNECTION,\n  IFCMOTORCONNECTIONTYPE,\n  IFCNAMEDUNIT,\n  IFCOBJECT,\n  IFCOBJECTDEFINITION,\n  IFCOBJECTIVE,\n  IFCOBJECTPLACEMENT,\n  IFCOCCUPANT,\n  IFCOFFSETCURVE,\n  IFCOFFSETCURVE2D,\n  IFCOFFSETCURVE3D,\n  IFCOFFSETCURVEBYDISTANCES,\n  IFCOPENINGELEMENT,\n  IFCOPENINGSTANDARDCASE,\n  IFCOPENSHELL,\n  IFCORGANIZATION,\n  IFCORGANIZATIONRELATIONSHIP,\n  IFCORIENTATIONEXPRESSION,\n  IFCORIENTEDEDGE,\n  IFCOUTERBOUNDARYCURVE,\n  IFCOUTLET,\n  IFCOUTLETTYPE,\n  IFCOWNERHISTORY,\n  IFCPARAMETERIZEDPROFILEDEF,\n  IFCPATH,\n  IFCPCURVE,\n  IFCPERFORMANCEHISTORY,\n  IFCPERMEABLECOVERINGPROPERTIES,\n  IFCPERMIT,\n  IFCPERSON,\n  IFCPERSONANDORGANIZATION,\n  IFCPHYSICALCOMPLEXQUANTITY,\n  IFCPHYSICALQUANTITY,\n  IFCPHYSICALSIMPLEQUANTITY,\n  IFCPILE,\n  IFCPILETYPE,\n  IFCPIPEFITTING,\n  IFCPIPEFITTINGTYPE,\n  IFCPIPESEGMENT,\n  IFCPIPESEGMENTTYPE,\n  IFCPIXELTEXTURE,\n  IFCPLACEMENT,\n  IFCPLANARBOX,\n  IFCPLANAREXTENT,\n  IFCPLANE,\n  IFCPLATE,\n  IFCPLATESTANDARDCASE,\n  IFCPLATETYPE,\n  IFCPOINT,\n  IFCPOINTONCURVE,\n  IFCPOINTONSURFACE,\n  IFCPOLYGONALBOUNDEDHALFSPACE,\n  IFCPOLYGONALFACESET,\n  IFCPOLYLINE,\n  IFCPOLYLOOP,\n  IFCPORT,\n  IFCPOSITIONINGELEMENT,\n  IFCPOSTALADDRESS,\n  IFCPREDEFINEDCOLOUR,\n  IFCPREDEFINEDCURVEFONT,\n  IFCPREDEFINEDITEM,\n  IFCPREDEFINEDPROPERTIES,\n  IFCPREDEFINEDPROPERTYSET,\n  IFCPREDEFINEDTEXTFONT,\n  IFCPRESENTATIONITEM,\n  IFCPRESENTATIONLAYERASSIGNMENT,\n  IFCPRESENTATIONLAYERWITHSTYLE,\n  IFCPRESENTATIONSTYLE,\n  IFCPRESENTATIONSTYLEASSIGNMENT,\n  IFCPROCEDURE,\n  IFCPROCEDURETYPE,\n  IFCPROCESS,\n  IFCPRODUCT,\n  IFCPRODUCTDEFINITIONSHAPE,\n  IFCPRODUCTREPRESENTATION,\n  IFCPROFILEDEF,\n  IFCPROFILEPROPERTIES,\n  IFCPROJECT,\n  IFCPROJECTEDCRS,\n  IFCPROJECTIONELEMENT,\n  IFCPROJECTLIBRARY,\n  IFCPROJECTORDER,\n  IFCPROPERTY,\n  IFCPROPERTYABSTRACTION,\n  IFCPROPERTYBOUNDEDVALUE,\n  IFCPROPERTYDEFINITION,\n  IFCPROPERTYDEPENDENCYRELATIONSHIP,\n  IFCPROPERTYENUMERATEDVALUE,\n  IFCPROPERTYENUMERATION,\n  IFCPROPERTYLISTVALUE,\n  IFCPROPERTYREFERENCEVALUE,\n  IFCPROPERTYSET,\n  IFCPROPERTYSETDEFINITION,\n  IFCPROPERTYSETTEMPLATE,\n  IFCPROPERTYSINGLEVALUE,\n  IFCPROPERTYTABLEVALUE,\n  IFCPROPERTYTEMPLATE,\n  IFCPROPERTYTEMPLATEDEFINITION,\n  IFCPROTECTIVEDEVICE,\n  IFCPROTECTIVEDEVICETRIPPINGUNIT,\n  IFCPROTECTIVEDEVICETRIPPINGUNITTYPE,\n  IFCPROTECTIVEDEVICETYPE,\n  IFCPROXY,\n  IFCPUMP,\n  IFCPUMPTYPE,\n  IFCQUANTITYAREA,\n  IFCQUANTITYCOUNT,\n  IFCQUANTITYLENGTH,\n  IFCQUANTITYSET,\n  IFCQUANTITYTIME,\n  IFCQUANTITYVOLUME,\n  IFCQUANTITYWEIGHT,\n  IFCRAILING,\n  IFCRAILINGTYPE,\n  IFCRAMP,\n  IFCRAMPFLIGHT,\n  IFCRAMPFLIGHTTYPE,\n  IFCRAMPTYPE,\n  IFCRATIONALBSPLINECURVEWITHKNOTS,\n  IFCRATIONALBSPLINESURFACEWITHKNOTS,\n  IFCRECTANGLEHOLLOWPROFILEDEF,\n  IFCRECTANGLEPROFILEDEF,\n  IFCRECTANGULARPYRAMID,\n  IFCRECTANGULARTRIMMEDSURFACE,\n  IFCRECURRENCEPATTERN,\n  IFCREFERENCE,\n  IFCREFERENT,\n  IFCREGULARTIMESERIES,\n  IFCREINFORCEMENTBARPROPERTIES,\n  IFCREINFORCEMENTDEFINITIONPROPERTIES,\n  IFCREINFORCINGBAR,\n  IFCREINFORCINGBARTYPE,\n  IFCREINFORCINGELEMENT,\n  IFCREINFORCINGELEMENTTYPE,\n  IFCREINFORCINGMESH,\n  IFCREINFORCINGMESHTYPE,\n  IFCRELAGGREGATES,\n  IFCRELASSIGNS,\n  IFCRELASSIGNSTOACTOR,\n  IFCRELASSIGNSTOCONTROL,\n  IFCRELASSIGNSTOGROUP,\n  IFCRELASSIGNSTOGROUPBYFACTOR,\n  IFCRELASSIGNSTOPROCESS,\n  IFCRELASSIGNSTOPRODUCT,\n  IFCRELASSIGNSTORESOURCE,\n  IFCRELASSOCIATES,\n  IFCRELASSOCIATESAPPROVAL,\n  IFCRELASSOCIATESCLASSIFICATION,\n  IFCRELASSOCIATESCONSTRAINT,\n  IFCRELASSOCIATESDOCUMENT,\n  IFCRELASSOCIATESLIBRARY,\n  IFCRELASSOCIATESMATERIAL,\n  IFCRELATIONSHIP,\n  IFCRELCONNECTS,\n  IFCRELCONNECTSELEMENTS,\n  IFCRELCONNECTSPATHELEMENTS,\n  IFCRELCONNECTSPORTS,\n  IFCRELCONNECTSPORTTOELEMENT,\n  IFCRELCONNECTSSTRUCTURALACTIVITY,\n  IFCRELCONNECTSSTRUCTURALMEMBER,\n  IFCRELCONNECTSWITHECCENTRICITY,\n  IFCRELCONNECTSWITHREALIZINGELEMENTS,\n  IFCRELCONTAINEDINSPATIALSTRUCTURE,\n  IFCRELCOVERSBLDGELEMENTS,\n  IFCRELCOVERSSPACES,\n  IFCRELDECLARES,\n  IFCRELDECOMPOSES,\n  IFCRELDEFINES,\n  IFCRELDEFINESBYOBJECT,\n  IFCRELDEFINESBYPROPERTIES,\n  IFCRELDEFINESBYTEMPLATE,\n  IFCRELDEFINESBYTYPE,\n  IFCRELFILLSELEMENT,\n  IFCRELFLOWCONTROLELEMENTS,\n  IFCRELINTERFERESELEMENTS,\n  IFCRELNESTS,\n  IFCRELPOSITIONS,\n  IFCRELPROJECTSELEMENT,\n  IFCRELREFERENCEDINSPATIALSTRUCTURE,\n  IFCRELSEQUENCE,\n  IFCRELSERVICESBUILDINGS,\n  IFCRELSPACEBOUNDARY,\n  IFCRELSPACEBOUNDARY1STLEVEL,\n  IFCRELSPACEBOUNDARY2NDLEVEL,\n  IFCRELVOIDSELEMENT,\n  IFCREPARAMETRISEDCOMPOSITECURVESEGMENT,\n  IFCREPRESENTATION,\n  IFCREPRESENTATIONCONTEXT,\n  IFCREPRESENTATIONITEM,\n  IFCREPRESENTATIONMAP,\n  IFCRESOURCE,\n  IFCRESOURCEAPPROVALRELATIONSHIP,\n  IFCRESOURCECONSTRAINTRELATIONSHIP,\n  IFCRESOURCELEVELRELATIONSHIP,\n  IFCRESOURCETIME,\n  IFCREVOLVEDAREASOLID,\n  IFCREVOLVEDAREASOLIDTAPERED,\n  IFCRIGHTCIRCULARCONE,\n  IFCRIGHTCIRCULARCYLINDER,\n  IFCROOF,\n  IFCROOFTYPE,\n  IFCROOT,\n  IFCROUNDEDRECTANGLEPROFILEDEF,\n  IFCSANITARYTERMINAL,\n  IFCSANITARYTERMINALTYPE,\n  IFCSCHEDULINGTIME,\n  IFCSEAMCURVE,\n  IFCSECTIONEDSOLID,\n  IFCSECTIONEDSOLIDHORIZONTAL,\n  IFCSECTIONEDSPINE,\n  IFCSECTIONPROPERTIES,\n  IFCSECTIONREINFORCEMENTPROPERTIES,\n  IFCSENSOR,\n  IFCSENSORTYPE,\n  IFCSHADINGDEVICE,\n  IFCSHADINGDEVICETYPE,\n  IFCSHAPEASPECT,\n  IFCSHAPEMODEL,\n  IFCSHAPEREPRESENTATION,\n  IFCSHELLBASEDSURFACEMODEL,\n  IFCSIMPLEPROPERTY,\n  IFCSIMPLEPROPERTYTEMPLATE,\n  IFCSITE,\n  IFCSIUNIT,\n  IFCSLAB,\n  IFCSLABELEMENTEDCASE,\n  IFCSLABSTANDARDCASE,\n  IFCSLABTYPE,\n  IFCSLIPPAGECONNECTIONCONDITION,\n  IFCSOLARDEVICE,\n  IFCSOLARDEVICETYPE,\n  IFCSOLIDMODEL,\n  IFCSPACE,\n  IFCSPACEHEATER,\n  IFCSPACEHEATERTYPE,\n  IFCSPACETYPE,\n  IFCSPATIALELEMENT,\n  IFCSPATIALELEMENTTYPE,\n  IFCSPATIALSTRUCTUREELEMENT,\n  IFCSPATIALSTRUCTUREELEMENTTYPE,\n  IFCSPATIALZONE,\n  IFCSPATIALZONETYPE,\n  IFCSPHERE,\n  IFCSPHERICALSURFACE,\n  IFCSTACKTERMINAL,\n  IFCSTACKTERMINALTYPE,\n  IFCSTAIR,\n  IFCSTAIRFLIGHT,\n  IFCSTAIRFLIGHTTYPE,\n  IFCSTAIRTYPE,\n  IFCSTRUCTURALACTION,\n  IFCSTRUCTURALACTIVITY,\n  IFCSTRUCTURALANALYSISMODEL,\n  IFCSTRUCTURALCONNECTION,\n  IFCSTRUCTURALCONNECTIONCONDITION,\n  IFCSTRUCTURALCURVEACTION,\n  IFCSTRUCTURALCURVECONNECTION,\n  IFCSTRUCTURALCURVEMEMBER,\n  IFCSTRUCTURALCURVEMEMBERVARYING,\n  IFCSTRUCTURALCURVEREACTION,\n  IFCSTRUCTURALITEM,\n  IFCSTRUCTURALLINEARACTION,\n  IFCSTRUCTURALLOAD,\n  IFCSTRUCTURALLOADCASE,\n  IFCSTRUCTURALLOADCONFIGURATION,\n  IFCSTRUCTURALLOADGROUP,\n  IFCSTRUCTURALLOADLINEARFORCE,\n  IFCSTRUCTURALLOADORRESULT,\n  IFCSTRUCTURALLOADPLANARFORCE,\n  IFCSTRUCTURALLOADSINGLEDISPLACEMENT,\n  IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION,\n  IFCSTRUCTURALLOADSINGLEFORCE,\n  IFCSTRUCTURALLOADSINGLEFORCEWARPING,\n  IFCSTRUCTURALLOADSTATIC,\n  IFCSTRUCTURALLOADTEMPERATURE,\n  IFCSTRUCTURALMEMBER,\n  IFCSTRUCTURALPLANARACTION,\n  IFCSTRUCTURALPOINTACTION,\n  IFCSTRUCTURALPOINTCONNECTION,\n  IFCSTRUCTURALPOINTREACTION,\n  IFCSTRUCTURALREACTION,\n  IFCSTRUCTURALRESULTGROUP,\n  IFCSTRUCTURALSURFACEACTION,\n  IFCSTRUCTURALSURFACECONNECTION,\n  IFCSTRUCTURALSURFACEMEMBER,\n  IFCSTRUCTURALSURFACEMEMBERVARYING,\n  IFCSTRUCTURALSURFACEREACTION,\n  IFCSTYLEDITEM,\n  IFCSTYLEDREPRESENTATION,\n  IFCSTYLEMODEL,\n  IFCSUBCONTRACTRESOURCE,\n  IFCSUBCONTRACTRESOURCETYPE,\n  IFCSUBEDGE,\n  IFCSURFACE,\n  IFCSURFACECURVE,\n  IFCSURFACECURVESWEPTAREASOLID,\n  IFCSURFACEFEATURE,\n  IFCSURFACEOFLINEAREXTRUSION,\n  IFCSURFACEOFREVOLUTION,\n  IFCSURFACEREINFORCEMENTAREA,\n  IFCSURFACESTYLE,\n  IFCSURFACESTYLELIGHTING,\n  IFCSURFACESTYLEREFRACTION,\n  IFCSURFACESTYLERENDERING,\n  IFCSURFACESTYLESHADING,\n  IFCSURFACESTYLEWITHTEXTURES,\n  IFCSURFACETEXTURE,\n  IFCSWEPTAREASOLID,\n  IFCSWEPTDISKSOLID,\n  IFCSWEPTDISKSOLIDPOLYGONAL,\n  IFCSWEPTSURFACE,\n  IFCSWITCHINGDEVICE,\n  IFCSWITCHINGDEVICETYPE,\n  IFCSYSTEM,\n  IFCSYSTEMFURNITUREELEMENT,\n  IFCSYSTEMFURNITUREELEMENTTYPE,\n  IFCTABLE,\n  IFCTABLECOLUMN,\n  IFCTABLEROW,\n  IFCTANK,\n  IFCTANKTYPE,\n  IFCTASK,\n  IFCTASKTIME,\n  IFCTASKTIMERECURRING,\n  IFCTASKTYPE,\n  IFCTELECOMADDRESS,\n  IFCTENDON,\n  IFCTENDONANCHOR,\n  IFCTENDONANCHORTYPE,\n  IFCTENDONCONDUIT,\n  IFCTENDONCONDUITTYPE,\n  IFCTENDONTYPE,\n  IFCTESSELLATEDFACESET,\n  IFCTESSELLATEDITEM,\n  IFCTEXTLITERAL,\n  IFCTEXTLITERALWITHEXTENT,\n  IFCTEXTSTYLE,\n  IFCTEXTSTYLEFONTMODEL,\n  IFCTEXTSTYLEFORDEFINEDFONT,\n  IFCTEXTSTYLETEXTMODEL,\n  IFCTEXTURECOORDINATE,\n  IFCTEXTURECOORDINATEGENERATOR,\n  IFCTEXTUREMAP,\n  IFCTEXTUREVERTEX,\n  IFCTEXTUREVERTEXLIST,\n  IFCTIMEPERIOD,\n  IFCTIMESERIES,\n  IFCTIMESERIESVALUE,\n  IFCTOPOLOGICALREPRESENTATIONITEM,\n  IFCTOPOLOGYREPRESENTATION,\n  IFCTOROIDALSURFACE,\n  IFCTRANSFORMER,\n  IFCTRANSFORMERTYPE,\n  IFCTRANSITIONCURVESEGMENT2D,\n  IFCTRANSPORTELEMENT,\n  IFCTRANSPORTELEMENTTYPE,\n  IFCTRAPEZIUMPROFILEDEF,\n  IFCTRIANGULATEDFACESET,\n  IFCTRIANGULATEDIRREGULARNETWORK,\n  IFCTRIMMEDCURVE,\n  IFCTSHAPEPROFILEDEF,\n  IFCTUBEBUNDLE,\n  IFCTUBEBUNDLETYPE,\n  IFCTYPEOBJECT,\n  IFCTYPEPROCESS,\n  IFCTYPEPRODUCT,\n  IFCTYPERESOURCE,\n  IFCUNITARYCONTROLELEMENT,\n  IFCUNITARYCONTROLELEMENTTYPE,\n  IFCUNITARYEQUIPMENT,\n  IFCUNITARYEQUIPMENTTYPE,\n  IFCUNITASSIGNMENT,\n  IFCUSHAPEPROFILEDEF,\n  IFCVALVE,\n  IFCVALVETYPE,\n  IFCVECTOR,\n  IFCVERTEX,\n  IFCVERTEXLOOP,\n  IFCVERTEXPOINT,\n  IFCVIBRATIONDAMPER,\n  IFCVIBRATIONDAMPERTYPE,\n  IFCVIBRATIONISOLATOR,\n  IFCVIBRATIONISOLATORTYPE,\n  IFCVIRTUALELEMENT,\n  IFCVIRTUALGRIDINTERSECTION,\n  IFCVOIDINGFEATURE,\n  IFCWALL,\n  IFCWALLELEMENTEDCASE,\n  IFCWALLSTANDARDCASE,\n  IFCWALLTYPE,\n  IFCWASTETERMINAL,\n  IFCWASTETERMINALTYPE,\n  IFCWINDOW,\n  IFCWINDOWLININGPROPERTIES,\n  IFCWINDOWPANELPROPERTIES,\n  IFCWINDOWSTANDARDCASE,\n  IFCWINDOWSTYLE,\n  IFCWINDOWTYPE,\n  IFCWORKCALENDAR,\n  IFCWORKCONTROL,\n  IFCWORKPLAN,\n  IFCWORKSCHEDULE,\n  IFCWORKTIME,\n  IFCZONE,\n  IFCZSHAPEPROFILEDEF,\n  IfcAPI2 as IfcAPI,\n  IfcAbsorbedDoseMeasure,\n  IfcAccelerationMeasure,\n  IfcActionRequest,\n  IfcActionRequestTypeEnum,\n  IfcActionSourceTypeEnum,\n  IfcActionTypeEnum,\n  IfcActor,\n  IfcActorRole,\n  IfcActuator,\n  IfcActuatorType,\n  IfcActuatorTypeEnum,\n  IfcAddress,\n  IfcAddressTypeEnum,\n  IfcAdvancedBrep,\n  IfcAdvancedBrepWithVoids,\n  IfcAdvancedFace,\n  IfcAirTerminal,\n  IfcAirTerminalBox,\n  IfcAirTerminalBoxType,\n  IfcAirTerminalBoxTypeEnum,\n  IfcAirTerminalType,\n  IfcAirTerminalTypeEnum,\n  IfcAirToAirHeatRecovery,\n  IfcAirToAirHeatRecoveryType,\n  IfcAirToAirHeatRecoveryTypeEnum,\n  IfcAlarm,\n  IfcAlarmType,\n  IfcAlarmTypeEnum,\n  IfcAlignment,\n  IfcAlignment2DHorizontal,\n  IfcAlignment2DHorizontalSegment,\n  IfcAlignment2DSegment,\n  IfcAlignment2DVerSegCircularArc,\n  IfcAlignment2DVerSegLine,\n  IfcAlignment2DVerSegParabolicArc,\n  IfcAlignment2DVertical,\n  IfcAlignment2DVerticalSegment,\n  IfcAlignmentCurve,\n  IfcAlignmentTypeEnum,\n  IfcAmountOfSubstanceMeasure,\n  IfcAnalysisModelTypeEnum,\n  IfcAnalysisTheoryTypeEnum,\n  IfcAngularVelocityMeasure,\n  IfcAnnotation,\n  IfcAnnotationFillArea,\n  IfcApplication,\n  IfcAppliedValue,\n  IfcApproval,\n  IfcApprovalRelationship,\n  IfcArbitraryClosedProfileDef,\n  IfcArbitraryOpenProfileDef,\n  IfcArbitraryProfileDefWithVoids,\n  IfcAreaDensityMeasure,\n  IfcAreaMeasure,\n  IfcArithmeticOperatorEnum,\n  IfcAssemblyPlaceEnum,\n  IfcAsset,\n  IfcAsymmetricIShapeProfileDef,\n  IfcAudioVisualAppliance,\n  IfcAudioVisualApplianceType,\n  IfcAudioVisualApplianceTypeEnum,\n  IfcAxis1Placement,\n  IfcAxis2Placement2D,\n  IfcAxis2Placement3D,\n  IfcBSplineCurve,\n  IfcBSplineCurveForm,\n  IfcBSplineCurveWithKnots,\n  IfcBSplineSurface,\n  IfcBSplineSurfaceForm,\n  IfcBSplineSurfaceWithKnots,\n  IfcBeam,\n  IfcBeamStandardCase,\n  IfcBeamType,\n  IfcBeamTypeEnum,\n  IfcBearing,\n  IfcBearingType,\n  IfcBearingTypeDisplacementEnum,\n  IfcBearingTypeEnum,\n  IfcBenchmarkEnum,\n  IfcBinary,\n  IfcBlobTexture,\n  IfcBlock,\n  IfcBoiler,\n  IfcBoilerType,\n  IfcBoilerTypeEnum,\n  IfcBoolean,\n  IfcBooleanClippingResult,\n  IfcBooleanOperator,\n  IfcBooleanResult,\n  IfcBoundaryCondition,\n  IfcBoundaryCurve,\n  IfcBoundaryEdgeCondition,\n  IfcBoundaryFaceCondition,\n  IfcBoundaryNodeCondition,\n  IfcBoundaryNodeConditionWarping,\n  IfcBoundedCurve,\n  IfcBoundedSurface,\n  IfcBoundingBox,\n  IfcBoxAlignment,\n  IfcBoxedHalfSpace,\n  IfcBridge,\n  IfcBridgePart,\n  IfcBridgePartTypeEnum,\n  IfcBridgeTypeEnum,\n  IfcBuilding,\n  IfcBuildingElement,\n  IfcBuildingElementPart,\n  IfcBuildingElementPartType,\n  IfcBuildingElementPartTypeEnum,\n  IfcBuildingElementProxy,\n  IfcBuildingElementProxyType,\n  IfcBuildingElementProxyTypeEnum,\n  IfcBuildingElementType,\n  IfcBuildingStorey,\n  IfcBuildingSystem,\n  IfcBuildingSystemTypeEnum,\n  IfcBurner,\n  IfcBurnerType,\n  IfcBurnerTypeEnum,\n  IfcCShapeProfileDef,\n  IfcCableCarrierFitting,\n  IfcCableCarrierFittingType,\n  IfcCableCarrierFittingTypeEnum,\n  IfcCableCarrierSegment,\n  IfcCableCarrierSegmentType,\n  IfcCableCarrierSegmentTypeEnum,\n  IfcCableFitting,\n  IfcCableFittingType,\n  IfcCableFittingTypeEnum,\n  IfcCableSegment,\n  IfcCableSegmentType,\n  IfcCableSegmentTypeEnum,\n  IfcCaissonFoundation,\n  IfcCaissonFoundationType,\n  IfcCaissonFoundationTypeEnum,\n  IfcCardinalPointReference,\n  IfcCartesianPoint,\n  IfcCartesianPointList,\n  IfcCartesianPointList2D,\n  IfcCartesianPointList3D,\n  IfcCartesianTransformationOperator,\n  IfcCartesianTransformationOperator2D,\n  IfcCartesianTransformationOperator2DnonUniform,\n  IfcCartesianTransformationOperator3D,\n  IfcCartesianTransformationOperator3DnonUniform,\n  IfcCenterLineProfileDef,\n  IfcChangeActionEnum,\n  IfcChiller,\n  IfcChillerType,\n  IfcChillerTypeEnum,\n  IfcChimney,\n  IfcChimneyType,\n  IfcChimneyTypeEnum,\n  IfcCircle,\n  IfcCircleHollowProfileDef,\n  IfcCircleProfileDef,\n  IfcCircularArcSegment2D,\n  IfcCivilElement,\n  IfcCivilElementType,\n  IfcClassification,\n  IfcClassificationReference,\n  IfcClosedShell,\n  IfcCoil,\n  IfcCoilType,\n  IfcCoilTypeEnum,\n  IfcColourRgb,\n  IfcColourRgbList,\n  IfcColourSpecification,\n  IfcColumn,\n  IfcColumnStandardCase,\n  IfcColumnType,\n  IfcColumnTypeEnum,\n  IfcCommunicationsAppliance,\n  IfcCommunicationsApplianceType,\n  IfcCommunicationsApplianceTypeEnum,\n  IfcComplexProperty,\n  IfcComplexPropertyTemplate,\n  IfcComplexPropertyTemplateTypeEnum,\n  IfcCompositeCurve,\n  IfcCompositeCurveOnSurface,\n  IfcCompositeCurveSegment,\n  IfcCompositeProfileDef,\n  IfcCompressor,\n  IfcCompressorType,\n  IfcCompressorTypeEnum,\n  IfcCondenser,\n  IfcCondenserType,\n  IfcCondenserTypeEnum,\n  IfcConic,\n  IfcConnectedFaceSet,\n  IfcConnectionCurveGeometry,\n  IfcConnectionGeometry,\n  IfcConnectionPointEccentricity,\n  IfcConnectionPointGeometry,\n  IfcConnectionSurfaceGeometry,\n  IfcConnectionTypeEnum,\n  IfcConnectionVolumeGeometry,\n  IfcConstraint,\n  IfcConstraintEnum,\n  IfcConstructionEquipmentResource,\n  IfcConstructionEquipmentResourceType,\n  IfcConstructionEquipmentResourceTypeEnum,\n  IfcConstructionMaterialResource,\n  IfcConstructionMaterialResourceType,\n  IfcConstructionMaterialResourceTypeEnum,\n  IfcConstructionProductResource,\n  IfcConstructionProductResourceType,\n  IfcConstructionProductResourceTypeEnum,\n  IfcConstructionResource,\n  IfcConstructionResourceType,\n  IfcContext,\n  IfcContextDependentMeasure,\n  IfcContextDependentUnit,\n  IfcControl,\n  IfcController,\n  IfcControllerType,\n  IfcControllerTypeEnum,\n  IfcConversionBasedUnit,\n  IfcConversionBasedUnitWithOffset,\n  IfcCooledBeam,\n  IfcCooledBeamType,\n  IfcCooledBeamTypeEnum,\n  IfcCoolingTower,\n  IfcCoolingTowerType,\n  IfcCoolingTowerTypeEnum,\n  IfcCoordinateOperation,\n  IfcCoordinateReferenceSystem,\n  IfcCostItem,\n  IfcCostItemTypeEnum,\n  IfcCostSchedule,\n  IfcCostScheduleTypeEnum,\n  IfcCostValue,\n  IfcCountMeasure,\n  IfcCovering,\n  IfcCoveringType,\n  IfcCoveringTypeEnum,\n  IfcCrewResource,\n  IfcCrewResourceType,\n  IfcCrewResourceTypeEnum,\n  IfcCsgPrimitive3D,\n  IfcCsgSolid,\n  IfcCurrencyRelationship,\n  IfcCurtainWall,\n  IfcCurtainWallType,\n  IfcCurtainWallTypeEnum,\n  IfcCurvatureMeasure,\n  IfcCurve,\n  IfcCurveBoundedPlane,\n  IfcCurveBoundedSurface,\n  IfcCurveInterpolationEnum,\n  IfcCurveSegment2D,\n  IfcCurveStyle,\n  IfcCurveStyleFont,\n  IfcCurveStyleFontAndScaling,\n  IfcCurveStyleFontPattern,\n  IfcCylindricalSurface,\n  IfcDamper,\n  IfcDamperType,\n  IfcDamperTypeEnum,\n  IfcDataOriginEnum,\n  IfcDate,\n  IfcDateTime,\n  IfcDayInMonthNumber,\n  IfcDayInWeekNumber,\n  IfcDeepFoundation,\n  IfcDeepFoundationType,\n  IfcDerivedProfileDef,\n  IfcDerivedUnit,\n  IfcDerivedUnitElement,\n  IfcDerivedUnitEnum,\n  IfcDescriptiveMeasure,\n  IfcDimensionCount,\n  IfcDimensionalExponents,\n  IfcDirection,\n  IfcDirectionSenseEnum,\n  IfcDiscreteAccessory,\n  IfcDiscreteAccessoryType,\n  IfcDiscreteAccessoryTypeEnum,\n  IfcDistanceExpression,\n  IfcDistributionChamberElement,\n  IfcDistributionChamberElementType,\n  IfcDistributionChamberElementTypeEnum,\n  IfcDistributionCircuit,\n  IfcDistributionControlElement,\n  IfcDistributionControlElementType,\n  IfcDistributionElement,\n  IfcDistributionElementType,\n  IfcDistributionFlowElement,\n  IfcDistributionFlowElementType,\n  IfcDistributionPort,\n  IfcDistributionPortTypeEnum,\n  IfcDistributionSystem,\n  IfcDistributionSystemEnum,\n  IfcDocumentConfidentialityEnum,\n  IfcDocumentInformation,\n  IfcDocumentInformationRelationship,\n  IfcDocumentReference,\n  IfcDocumentStatusEnum,\n  IfcDoor,\n  IfcDoorLiningProperties,\n  IfcDoorPanelOperationEnum,\n  IfcDoorPanelPositionEnum,\n  IfcDoorPanelProperties,\n  IfcDoorStandardCase,\n  IfcDoorStyle,\n  IfcDoorStyleConstructionEnum,\n  IfcDoorStyleOperationEnum,\n  IfcDoorType,\n  IfcDoorTypeEnum,\n  IfcDoorTypeOperationEnum,\n  IfcDoseEquivalentMeasure,\n  IfcDraughtingPreDefinedColour,\n  IfcDraughtingPreDefinedCurveFont,\n  IfcDuctFitting,\n  IfcDuctFittingType,\n  IfcDuctFittingTypeEnum,\n  IfcDuctSegment,\n  IfcDuctSegmentType,\n  IfcDuctSegmentTypeEnum,\n  IfcDuctSilencer,\n  IfcDuctSilencerType,\n  IfcDuctSilencerTypeEnum,\n  IfcDuration,\n  IfcDynamicViscosityMeasure,\n  IfcEdge,\n  IfcEdgeCurve,\n  IfcEdgeLoop,\n  IfcElectricAppliance,\n  IfcElectricApplianceType,\n  IfcElectricApplianceTypeEnum,\n  IfcElectricCapacitanceMeasure,\n  IfcElectricChargeMeasure,\n  IfcElectricConductanceMeasure,\n  IfcElectricCurrentMeasure,\n  IfcElectricDistributionBoard,\n  IfcElectricDistributionBoardType,\n  IfcElectricDistributionBoardTypeEnum,\n  IfcElectricFlowStorageDevice,\n  IfcElectricFlowStorageDeviceType,\n  IfcElectricFlowStorageDeviceTypeEnum,\n  IfcElectricGenerator,\n  IfcElectricGeneratorType,\n  IfcElectricGeneratorTypeEnum,\n  IfcElectricMotor,\n  IfcElectricMotorType,\n  IfcElectricMotorTypeEnum,\n  IfcElectricResistanceMeasure,\n  IfcElectricTimeControl,\n  IfcElectricTimeControlType,\n  IfcElectricTimeControlTypeEnum,\n  IfcElectricVoltageMeasure,\n  IfcElement,\n  IfcElementAssembly,\n  IfcElementAssemblyType,\n  IfcElementAssemblyTypeEnum,\n  IfcElementComponent,\n  IfcElementComponentType,\n  IfcElementCompositionEnum,\n  IfcElementQuantity,\n  IfcElementType,\n  IfcElementarySurface,\n  IfcElements,\n  IfcEllipse,\n  IfcEllipseProfileDef,\n  IfcEnergyConversionDevice,\n  IfcEnergyConversionDeviceType,\n  IfcEnergyMeasure,\n  IfcEngine,\n  IfcEngineType,\n  IfcEngineTypeEnum,\n  IfcEvaporativeCooler,\n  IfcEvaporativeCoolerType,\n  IfcEvaporativeCoolerTypeEnum,\n  IfcEvaporator,\n  IfcEvaporatorType,\n  IfcEvaporatorTypeEnum,\n  IfcEvent,\n  IfcEventTime,\n  IfcEventTriggerTypeEnum,\n  IfcEventType,\n  IfcEventTypeEnum,\n  IfcExtendedProperties,\n  IfcExternalInformation,\n  IfcExternalReference,\n  IfcExternalReferenceRelationship,\n  IfcExternalSpatialElement,\n  IfcExternalSpatialElementTypeEnum,\n  IfcExternalSpatialStructureElement,\n  IfcExternallyDefinedHatchStyle,\n  IfcExternallyDefinedSurfaceStyle,\n  IfcExternallyDefinedTextFont,\n  IfcExtrudedAreaSolid,\n  IfcExtrudedAreaSolidTapered,\n  IfcFace,\n  IfcFaceBasedSurfaceModel,\n  IfcFaceBound,\n  IfcFaceOuterBound,\n  IfcFaceSurface,\n  IfcFacetedBrep,\n  IfcFacetedBrepWithVoids,\n  IfcFacility,\n  IfcFacilityPart,\n  IfcFailureConnectionCondition,\n  IfcFan,\n  IfcFanType,\n  IfcFanTypeEnum,\n  IfcFastener,\n  IfcFastenerType,\n  IfcFastenerTypeEnum,\n  IfcFeatureElement,\n  IfcFeatureElementAddition,\n  IfcFeatureElementSubtraction,\n  IfcFillAreaStyle,\n  IfcFillAreaStyleHatching,\n  IfcFillAreaStyleTiles,\n  IfcFilter,\n  IfcFilterType,\n  IfcFilterTypeEnum,\n  IfcFireSuppressionTerminal,\n  IfcFireSuppressionTerminalType,\n  IfcFireSuppressionTerminalTypeEnum,\n  IfcFixedReferenceSweptAreaSolid,\n  IfcFlowController,\n  IfcFlowControllerType,\n  IfcFlowDirectionEnum,\n  IfcFlowFitting,\n  IfcFlowFittingType,\n  IfcFlowInstrument,\n  IfcFlowInstrumentType,\n  IfcFlowInstrumentTypeEnum,\n  IfcFlowMeter,\n  IfcFlowMeterType,\n  IfcFlowMeterTypeEnum,\n  IfcFlowMovingDevice,\n  IfcFlowMovingDeviceType,\n  IfcFlowSegment,\n  IfcFlowSegmentType,\n  IfcFlowStorageDevice,\n  IfcFlowStorageDeviceType,\n  IfcFlowTerminal,\n  IfcFlowTerminalType,\n  IfcFlowTreatmentDevice,\n  IfcFlowTreatmentDeviceType,\n  IfcFontStyle,\n  IfcFontVariant,\n  IfcFontWeight,\n  IfcFooting,\n  IfcFootingType,\n  IfcFootingTypeEnum,\n  IfcForceMeasure,\n  IfcFrequencyMeasure,\n  IfcFurnishingElement,\n  IfcFurnishingElementType,\n  IfcFurniture,\n  IfcFurnitureType,\n  IfcFurnitureTypeEnum,\n  IfcGeographicElement,\n  IfcGeographicElementType,\n  IfcGeographicElementTypeEnum,\n  IfcGeometricCurveSet,\n  IfcGeometricProjectionEnum,\n  IfcGeometricRepresentationContext,\n  IfcGeometricRepresentationItem,\n  IfcGeometricRepresentationSubContext,\n  IfcGeometricSet,\n  IfcGlobalOrLocalEnum,\n  IfcGloballyUniqueId,\n  IfcGrid,\n  IfcGridAxis,\n  IfcGridPlacement,\n  IfcGridTypeEnum,\n  IfcGroup,\n  IfcHalfSpaceSolid,\n  IfcHeatExchanger,\n  IfcHeatExchangerType,\n  IfcHeatExchangerTypeEnum,\n  IfcHeatFluxDensityMeasure,\n  IfcHeatingValueMeasure,\n  IfcHumidifier,\n  IfcHumidifierType,\n  IfcHumidifierTypeEnum,\n  IfcIShapeProfileDef,\n  IfcIdentifier,\n  IfcIlluminanceMeasure,\n  IfcImageTexture,\n  IfcIndexedColourMap,\n  IfcIndexedPolyCurve,\n  IfcIndexedPolygonalFace,\n  IfcIndexedPolygonalFaceWithVoids,\n  IfcIndexedTextureMap,\n  IfcIndexedTriangleTextureMap,\n  IfcInductanceMeasure,\n  IfcInteger,\n  IfcIntegerCountRateMeasure,\n  IfcInterceptor,\n  IfcInterceptorType,\n  IfcInterceptorTypeEnum,\n  IfcInternalOrExternalEnum,\n  IfcIntersectionCurve,\n  IfcInventory,\n  IfcInventoryTypeEnum,\n  IfcIonConcentrationMeasure,\n  IfcIrregularTimeSeries,\n  IfcIrregularTimeSeriesValue,\n  IfcIsothermalMoistureCapacityMeasure,\n  IfcJunctionBox,\n  IfcJunctionBoxType,\n  IfcJunctionBoxTypeEnum,\n  IfcKinematicViscosityMeasure,\n  IfcKnotType,\n  IfcLShapeProfileDef,\n  IfcLabel,\n  IfcLaborResource,\n  IfcLaborResourceType,\n  IfcLaborResourceTypeEnum,\n  IfcLagTime,\n  IfcLamp,\n  IfcLampType,\n  IfcLampTypeEnum,\n  IfcLanguageId,\n  IfcLayerSetDirectionEnum,\n  IfcLengthMeasure,\n  IfcLibraryInformation,\n  IfcLibraryReference,\n  IfcLightDistributionCurveEnum,\n  IfcLightDistributionData,\n  IfcLightEmissionSourceEnum,\n  IfcLightFixture,\n  IfcLightFixtureType,\n  IfcLightFixtureTypeEnum,\n  IfcLightIntensityDistribution,\n  IfcLightSource,\n  IfcLightSourceAmbient,\n  IfcLightSourceDirectional,\n  IfcLightSourceGoniometric,\n  IfcLightSourcePositional,\n  IfcLightSourceSpot,\n  IfcLine,\n  IfcLineSegment2D,\n  IfcLinearForceMeasure,\n  IfcLinearMomentMeasure,\n  IfcLinearPlacement,\n  IfcLinearPositioningElement,\n  IfcLinearStiffnessMeasure,\n  IfcLinearVelocityMeasure,\n  IfcLoadGroupTypeEnum,\n  IfcLocalPlacement,\n  IfcLogical,\n  IfcLogicalOperatorEnum,\n  IfcLoop,\n  IfcLuminousFluxMeasure,\n  IfcLuminousIntensityDistributionMeasure,\n  IfcLuminousIntensityMeasure,\n  IfcMagneticFluxDensityMeasure,\n  IfcMagneticFluxMeasure,\n  IfcManifoldSolidBrep,\n  IfcMapConversion,\n  IfcMappedItem,\n  IfcMassDensityMeasure,\n  IfcMassFlowRateMeasure,\n  IfcMassMeasure,\n  IfcMassPerLengthMeasure,\n  IfcMaterial,\n  IfcMaterialClassificationRelationship,\n  IfcMaterialConstituent,\n  IfcMaterialConstituentSet,\n  IfcMaterialDefinition,\n  IfcMaterialDefinitionRepresentation,\n  IfcMaterialLayer,\n  IfcMaterialLayerSet,\n  IfcMaterialLayerSetUsage,\n  IfcMaterialLayerWithOffsets,\n  IfcMaterialList,\n  IfcMaterialProfile,\n  IfcMaterialProfileSet,\n  IfcMaterialProfileSetUsage,\n  IfcMaterialProfileSetUsageTapering,\n  IfcMaterialProfileWithOffsets,\n  IfcMaterialProperties,\n  IfcMaterialRelationship,\n  IfcMaterialUsageDefinition,\n  IfcMeasureWithUnit,\n  IfcMechanicalFastener,\n  IfcMechanicalFastenerType,\n  IfcMechanicalFastenerTypeEnum,\n  IfcMedicalDevice,\n  IfcMedicalDeviceType,\n  IfcMedicalDeviceTypeEnum,\n  IfcMember,\n  IfcMemberStandardCase,\n  IfcMemberType,\n  IfcMemberTypeEnum,\n  IfcMetric,\n  IfcMirroredProfileDef,\n  IfcModulusOfElasticityMeasure,\n  IfcModulusOfLinearSubgradeReactionMeasure,\n  IfcModulusOfRotationalSubgradeReactionMeasure,\n  IfcModulusOfSubgradeReactionMeasure,\n  IfcMoistureDiffusivityMeasure,\n  IfcMolecularWeightMeasure,\n  IfcMomentOfInertiaMeasure,\n  IfcMonetaryMeasure,\n  IfcMonetaryUnit,\n  IfcMonthInYearNumber,\n  IfcMotorConnection,\n  IfcMotorConnectionType,\n  IfcMotorConnectionTypeEnum,\n  IfcNamedUnit,\n  IfcNonNegativeLengthMeasure,\n  IfcNormalisedRatioMeasure,\n  IfcNullStyle,\n  IfcNumericMeasure,\n  IfcObject,\n  IfcObjectDefinition,\n  IfcObjectPlacement,\n  IfcObjectTypeEnum,\n  IfcObjective,\n  IfcObjectiveEnum,\n  IfcOccupant,\n  IfcOccupantTypeEnum,\n  IfcOffsetCurve,\n  IfcOffsetCurve2D,\n  IfcOffsetCurve3D,\n  IfcOffsetCurveByDistances,\n  IfcOpenShell,\n  IfcOpeningElement,\n  IfcOpeningElementTypeEnum,\n  IfcOpeningStandardCase,\n  IfcOrganization,\n  IfcOrganizationRelationship,\n  IfcOrientationExpression,\n  IfcOrientedEdge,\n  IfcOuterBoundaryCurve,\n  IfcOutlet,\n  IfcOutletType,\n  IfcOutletTypeEnum,\n  IfcOwnerHistory,\n  IfcPHMeasure,\n  IfcParameterValue,\n  IfcParameterizedProfileDef,\n  IfcPath,\n  IfcPcurve,\n  IfcPerformanceHistory,\n  IfcPerformanceHistoryTypeEnum,\n  IfcPermeableCoveringOperationEnum,\n  IfcPermeableCoveringProperties,\n  IfcPermit,\n  IfcPermitTypeEnum,\n  IfcPerson,\n  IfcPersonAndOrganization,\n  IfcPhysicalComplexQuantity,\n  IfcPhysicalOrVirtualEnum,\n  IfcPhysicalQuantity,\n  IfcPhysicalSimpleQuantity,\n  IfcPile,\n  IfcPileConstructionEnum,\n  IfcPileType,\n  IfcPileTypeEnum,\n  IfcPipeFitting,\n  IfcPipeFittingType,\n  IfcPipeFittingTypeEnum,\n  IfcPipeSegment,\n  IfcPipeSegmentType,\n  IfcPipeSegmentTypeEnum,\n  IfcPixelTexture,\n  IfcPlacement,\n  IfcPlanarBox,\n  IfcPlanarExtent,\n  IfcPlanarForceMeasure,\n  IfcPlane,\n  IfcPlaneAngleMeasure,\n  IfcPlate,\n  IfcPlateStandardCase,\n  IfcPlateType,\n  IfcPlateTypeEnum,\n  IfcPoint,\n  IfcPointOnCurve,\n  IfcPointOnSurface,\n  IfcPolyLoop,\n  IfcPolygonalBoundedHalfSpace,\n  IfcPolygonalFaceSet,\n  IfcPolyline,\n  IfcPort,\n  IfcPositioningElement,\n  IfcPositiveInteger,\n  IfcPositiveLengthMeasure,\n  IfcPositivePlaneAngleMeasure,\n  IfcPositiveRatioMeasure,\n  IfcPostalAddress,\n  IfcPowerMeasure,\n  IfcPreDefinedColour,\n  IfcPreDefinedCurveFont,\n  IfcPreDefinedItem,\n  IfcPreDefinedProperties,\n  IfcPreDefinedPropertySet,\n  IfcPreDefinedTextFont,\n  IfcPreferredSurfaceCurveRepresentation,\n  IfcPresentableText,\n  IfcPresentationItem,\n  IfcPresentationLayerAssignment,\n  IfcPresentationLayerWithStyle,\n  IfcPresentationStyle,\n  IfcPresentationStyleAssignment,\n  IfcPressureMeasure,\n  IfcProcedure,\n  IfcProcedureType,\n  IfcProcedureTypeEnum,\n  IfcProcess,\n  IfcProduct,\n  IfcProductDefinitionShape,\n  IfcProductRepresentation,\n  IfcProfileDef,\n  IfcProfileProperties,\n  IfcProfileTypeEnum,\n  IfcProject,\n  IfcProjectLibrary,\n  IfcProjectOrder,\n  IfcProjectOrderTypeEnum,\n  IfcProjectedCRS,\n  IfcProjectedOrTrueLengthEnum,\n  IfcProjectionElement,\n  IfcProjectionElementTypeEnum,\n  IfcProperty,\n  IfcPropertyAbstraction,\n  IfcPropertyBoundedValue,\n  IfcPropertyDefinition,\n  IfcPropertyDependencyRelationship,\n  IfcPropertyEnumeratedValue,\n  IfcPropertyEnumeration,\n  IfcPropertyListValue,\n  IfcPropertyReferenceValue,\n  IfcPropertySet,\n  IfcPropertySetDefinition,\n  IfcPropertySetTemplate,\n  IfcPropertySetTemplateTypeEnum,\n  IfcPropertySingleValue,\n  IfcPropertyTableValue,\n  IfcPropertyTemplate,\n  IfcPropertyTemplateDefinition,\n  IfcProtectiveDevice,\n  IfcProtectiveDeviceTrippingUnit,\n  IfcProtectiveDeviceTrippingUnitType,\n  IfcProtectiveDeviceTrippingUnitTypeEnum,\n  IfcProtectiveDeviceType,\n  IfcProtectiveDeviceTypeEnum,\n  IfcProxy,\n  IfcPump,\n  IfcPumpType,\n  IfcPumpTypeEnum,\n  IfcQuantityArea,\n  IfcQuantityCount,\n  IfcQuantityLength,\n  IfcQuantitySet,\n  IfcQuantityTime,\n  IfcQuantityVolume,\n  IfcQuantityWeight,\n  IfcRadioActivityMeasure,\n  IfcRailing,\n  IfcRailingType,\n  IfcRailingTypeEnum,\n  IfcRamp,\n  IfcRampFlight,\n  IfcRampFlightType,\n  IfcRampFlightTypeEnum,\n  IfcRampType,\n  IfcRampTypeEnum,\n  IfcRatioMeasure,\n  IfcRationalBSplineCurveWithKnots,\n  IfcRationalBSplineSurfaceWithKnots,\n  IfcReal,\n  IfcRectangleHollowProfileDef,\n  IfcRectangleProfileDef,\n  IfcRectangularPyramid,\n  IfcRectangularTrimmedSurface,\n  IfcRecurrencePattern,\n  IfcRecurrenceTypeEnum,\n  IfcReference,\n  IfcReferent,\n  IfcReferentTypeEnum,\n  IfcReflectanceMethodEnum,\n  IfcRegularTimeSeries,\n  IfcReinforcementBarProperties,\n  IfcReinforcementDefinitionProperties,\n  IfcReinforcingBar,\n  IfcReinforcingBarRoleEnum,\n  IfcReinforcingBarSurfaceEnum,\n  IfcReinforcingBarType,\n  IfcReinforcingBarTypeEnum,\n  IfcReinforcingElement,\n  IfcReinforcingElementType,\n  IfcReinforcingMesh,\n  IfcReinforcingMeshType,\n  IfcReinforcingMeshTypeEnum,\n  IfcRelAggregates,\n  IfcRelAssigns,\n  IfcRelAssignsToActor,\n  IfcRelAssignsToControl,\n  IfcRelAssignsToGroup,\n  IfcRelAssignsToGroupByFactor,\n  IfcRelAssignsToProcess,\n  IfcRelAssignsToProduct,\n  IfcRelAssignsToResource,\n  IfcRelAssociates,\n  IfcRelAssociatesApproval,\n  IfcRelAssociatesClassification,\n  IfcRelAssociatesConstraint,\n  IfcRelAssociatesDocument,\n  IfcRelAssociatesLibrary,\n  IfcRelAssociatesMaterial,\n  IfcRelConnects,\n  IfcRelConnectsElements,\n  IfcRelConnectsPathElements,\n  IfcRelConnectsPortToElement,\n  IfcRelConnectsPorts,\n  IfcRelConnectsStructuralActivity,\n  IfcRelConnectsStructuralMember,\n  IfcRelConnectsWithEccentricity,\n  IfcRelConnectsWithRealizingElements,\n  IfcRelContainedInSpatialStructure,\n  IfcRelCoversBldgElements,\n  IfcRelCoversSpaces,\n  IfcRelDeclares,\n  IfcRelDecomposes,\n  IfcRelDefines,\n  IfcRelDefinesByObject,\n  IfcRelDefinesByProperties,\n  IfcRelDefinesByTemplate,\n  IfcRelDefinesByType,\n  IfcRelFillsElement,\n  IfcRelFlowControlElements,\n  IfcRelInterferesElements,\n  IfcRelNests,\n  IfcRelPositions,\n  IfcRelProjectsElement,\n  IfcRelReferencedInSpatialStructure,\n  IfcRelSequence,\n  IfcRelServicesBuildings,\n  IfcRelSpaceBoundary,\n  IfcRelSpaceBoundary1stLevel,\n  IfcRelSpaceBoundary2ndLevel,\n  IfcRelVoidsElement,\n  IfcRelationship,\n  IfcReparametrisedCompositeCurveSegment,\n  IfcRepresentation,\n  IfcRepresentationContext,\n  IfcRepresentationItem,\n  IfcRepresentationMap,\n  IfcResource,\n  IfcResourceApprovalRelationship,\n  IfcResourceConstraintRelationship,\n  IfcResourceLevelRelationship,\n  IfcResourceTime,\n  IfcRevolvedAreaSolid,\n  IfcRevolvedAreaSolidTapered,\n  IfcRightCircularCone,\n  IfcRightCircularCylinder,\n  IfcRoleEnum,\n  IfcRoof,\n  IfcRoofType,\n  IfcRoofTypeEnum,\n  IfcRoot,\n  IfcRotationalFrequencyMeasure,\n  IfcRotationalMassMeasure,\n  IfcRotationalStiffnessMeasure,\n  IfcRoundedRectangleProfileDef,\n  IfcSIPrefix,\n  IfcSIUnit,\n  IfcSIUnitName,\n  IfcSanitaryTerminal,\n  IfcSanitaryTerminalType,\n  IfcSanitaryTerminalTypeEnum,\n  IfcSchedulingTime,\n  IfcSeamCurve,\n  IfcSectionModulusMeasure,\n  IfcSectionProperties,\n  IfcSectionReinforcementProperties,\n  IfcSectionTypeEnum,\n  IfcSectionalAreaIntegralMeasure,\n  IfcSectionedSolid,\n  IfcSectionedSolidHorizontal,\n  IfcSectionedSpine,\n  IfcSensor,\n  IfcSensorType,\n  IfcSensorTypeEnum,\n  IfcSequenceEnum,\n  IfcShadingDevice,\n  IfcShadingDeviceType,\n  IfcShadingDeviceTypeEnum,\n  IfcShapeAspect,\n  IfcShapeModel,\n  IfcShapeRepresentation,\n  IfcShearModulusMeasure,\n  IfcShellBasedSurfaceModel,\n  IfcSimpleProperty,\n  IfcSimplePropertyTemplate,\n  IfcSimplePropertyTemplateTypeEnum,\n  IfcSite,\n  IfcSlab,\n  IfcSlabElementedCase,\n  IfcSlabStandardCase,\n  IfcSlabType,\n  IfcSlabTypeEnum,\n  IfcSlippageConnectionCondition,\n  IfcSolarDevice,\n  IfcSolarDeviceType,\n  IfcSolarDeviceTypeEnum,\n  IfcSolidAngleMeasure,\n  IfcSolidModel,\n  IfcSoundPowerLevelMeasure,\n  IfcSoundPowerMeasure,\n  IfcSoundPressureLevelMeasure,\n  IfcSoundPressureMeasure,\n  IfcSpace,\n  IfcSpaceHeater,\n  IfcSpaceHeaterType,\n  IfcSpaceHeaterTypeEnum,\n  IfcSpaceType,\n  IfcSpaceTypeEnum,\n  IfcSpatialElement,\n  IfcSpatialElementType,\n  IfcSpatialStructureElement,\n  IfcSpatialStructureElementType,\n  IfcSpatialZone,\n  IfcSpatialZoneType,\n  IfcSpatialZoneTypeEnum,\n  IfcSpecificHeatCapacityMeasure,\n  IfcSpecularExponent,\n  IfcSpecularRoughness,\n  IfcSphere,\n  IfcSphericalSurface,\n  IfcStackTerminal,\n  IfcStackTerminalType,\n  IfcStackTerminalTypeEnum,\n  IfcStair,\n  IfcStairFlight,\n  IfcStairFlightType,\n  IfcStairFlightTypeEnum,\n  IfcStairType,\n  IfcStairTypeEnum,\n  IfcStateEnum,\n  IfcStructuralAction,\n  IfcStructuralActivity,\n  IfcStructuralAnalysisModel,\n  IfcStructuralConnection,\n  IfcStructuralConnectionCondition,\n  IfcStructuralCurveAction,\n  IfcStructuralCurveActivityTypeEnum,\n  IfcStructuralCurveConnection,\n  IfcStructuralCurveMember,\n  IfcStructuralCurveMemberTypeEnum,\n  IfcStructuralCurveMemberVarying,\n  IfcStructuralCurveReaction,\n  IfcStructuralItem,\n  IfcStructuralLinearAction,\n  IfcStructuralLoad,\n  IfcStructuralLoadCase,\n  IfcStructuralLoadConfiguration,\n  IfcStructuralLoadGroup,\n  IfcStructuralLoadLinearForce,\n  IfcStructuralLoadOrResult,\n  IfcStructuralLoadPlanarForce,\n  IfcStructuralLoadSingleDisplacement,\n  IfcStructuralLoadSingleDisplacementDistortion,\n  IfcStructuralLoadSingleForce,\n  IfcStructuralLoadSingleForceWarping,\n  IfcStructuralLoadStatic,\n  IfcStructuralLoadTemperature,\n  IfcStructuralMember,\n  IfcStructuralPlanarAction,\n  IfcStructuralPointAction,\n  IfcStructuralPointConnection,\n  IfcStructuralPointReaction,\n  IfcStructuralReaction,\n  IfcStructuralResultGroup,\n  IfcStructuralSurfaceAction,\n  IfcStructuralSurfaceActivityTypeEnum,\n  IfcStructuralSurfaceConnection,\n  IfcStructuralSurfaceMember,\n  IfcStructuralSurfaceMemberTypeEnum,\n  IfcStructuralSurfaceMemberVarying,\n  IfcStructuralSurfaceReaction,\n  IfcStyleModel,\n  IfcStyledItem,\n  IfcStyledRepresentation,\n  IfcSubContractResource,\n  IfcSubContractResourceType,\n  IfcSubContractResourceTypeEnum,\n  IfcSubedge,\n  IfcSurface,\n  IfcSurfaceCurve,\n  IfcSurfaceCurveSweptAreaSolid,\n  IfcSurfaceFeature,\n  IfcSurfaceFeatureTypeEnum,\n  IfcSurfaceOfLinearExtrusion,\n  IfcSurfaceOfRevolution,\n  IfcSurfaceReinforcementArea,\n  IfcSurfaceSide,\n  IfcSurfaceStyle,\n  IfcSurfaceStyleLighting,\n  IfcSurfaceStyleRefraction,\n  IfcSurfaceStyleRendering,\n  IfcSurfaceStyleShading,\n  IfcSurfaceStyleWithTextures,\n  IfcSurfaceTexture,\n  IfcSweptAreaSolid,\n  IfcSweptDiskSolid,\n  IfcSweptDiskSolidPolygonal,\n  IfcSweptSurface,\n  IfcSwitchingDevice,\n  IfcSwitchingDeviceType,\n  IfcSwitchingDeviceTypeEnum,\n  IfcSystem,\n  IfcSystemFurnitureElement,\n  IfcSystemFurnitureElementType,\n  IfcSystemFurnitureElementTypeEnum,\n  IfcTShapeProfileDef,\n  IfcTable,\n  IfcTableColumn,\n  IfcTableRow,\n  IfcTank,\n  IfcTankType,\n  IfcTankTypeEnum,\n  IfcTask,\n  IfcTaskDurationEnum,\n  IfcTaskTime,\n  IfcTaskTimeRecurring,\n  IfcTaskType,\n  IfcTaskTypeEnum,\n  IfcTelecomAddress,\n  IfcTemperatureGradientMeasure,\n  IfcTemperatureRateOfChangeMeasure,\n  IfcTendon,\n  IfcTendonAnchor,\n  IfcTendonAnchorType,\n  IfcTendonAnchorTypeEnum,\n  IfcTendonConduit,\n  IfcTendonConduitType,\n  IfcTendonConduitTypeEnum,\n  IfcTendonType,\n  IfcTendonTypeEnum,\n  IfcTessellatedFaceSet,\n  IfcTessellatedItem,\n  IfcText,\n  IfcTextAlignment,\n  IfcTextDecoration,\n  IfcTextFontName,\n  IfcTextLiteral,\n  IfcTextLiteralWithExtent,\n  IfcTextPath,\n  IfcTextStyle,\n  IfcTextStyleFontModel,\n  IfcTextStyleForDefinedFont,\n  IfcTextStyleTextModel,\n  IfcTextTransformation,\n  IfcTextureCoordinate,\n  IfcTextureCoordinateGenerator,\n  IfcTextureMap,\n  IfcTextureVertex,\n  IfcTextureVertexList,\n  IfcThermalAdmittanceMeasure,\n  IfcThermalConductivityMeasure,\n  IfcThermalExpansionCoefficientMeasure,\n  IfcThermalResistanceMeasure,\n  IfcThermalTransmittanceMeasure,\n  IfcThermodynamicTemperatureMeasure,\n  IfcTime,\n  IfcTimeMeasure,\n  IfcTimePeriod,\n  IfcTimeSeries,\n  IfcTimeSeriesDataTypeEnum,\n  IfcTimeSeriesValue,\n  IfcTimeStamp,\n  IfcTopologicalRepresentationItem,\n  IfcTopologyRepresentation,\n  IfcToroidalSurface,\n  IfcTorqueMeasure,\n  IfcTransformer,\n  IfcTransformerType,\n  IfcTransformerTypeEnum,\n  IfcTransitionCode,\n  IfcTransitionCurveSegment2D,\n  IfcTransitionCurveType,\n  IfcTransportElement,\n  IfcTransportElementType,\n  IfcTransportElementTypeEnum,\n  IfcTrapeziumProfileDef,\n  IfcTriangulatedFaceSet,\n  IfcTriangulatedIrregularNetwork,\n  IfcTrimmedCurve,\n  IfcTrimmingPreference,\n  IfcTubeBundle,\n  IfcTubeBundleType,\n  IfcTubeBundleTypeEnum,\n  IfcTypeObject,\n  IfcTypeProcess,\n  IfcTypeProduct,\n  IfcTypeResource,\n  IfcURIReference,\n  IfcUShapeProfileDef,\n  IfcUnitAssignment,\n  IfcUnitEnum,\n  IfcUnitaryControlElement,\n  IfcUnitaryControlElementType,\n  IfcUnitaryControlElementTypeEnum,\n  IfcUnitaryEquipment,\n  IfcUnitaryEquipmentType,\n  IfcUnitaryEquipmentTypeEnum,\n  IfcValve,\n  IfcValveType,\n  IfcValveTypeEnum,\n  IfcVaporPermeabilityMeasure,\n  IfcVector,\n  IfcVertex,\n  IfcVertexLoop,\n  IfcVertexPoint,\n  IfcVibrationDamper,\n  IfcVibrationDamperType,\n  IfcVibrationDamperTypeEnum,\n  IfcVibrationIsolator,\n  IfcVibrationIsolatorType,\n  IfcVibrationIsolatorTypeEnum,\n  IfcVirtualElement,\n  IfcVirtualGridIntersection,\n  IfcVoidingFeature,\n  IfcVoidingFeatureTypeEnum,\n  IfcVolumeMeasure,\n  IfcVolumetricFlowRateMeasure,\n  IfcWall,\n  IfcWallElementedCase,\n  IfcWallStandardCase,\n  IfcWallType,\n  IfcWallTypeEnum,\n  IfcWarpingConstantMeasure,\n  IfcWarpingMomentMeasure,\n  IfcWasteTerminal,\n  IfcWasteTerminalType,\n  IfcWasteTerminalTypeEnum,\n  IfcWindow,\n  IfcWindowLiningProperties,\n  IfcWindowPanelOperationEnum,\n  IfcWindowPanelPositionEnum,\n  IfcWindowPanelProperties,\n  IfcWindowStandardCase,\n  IfcWindowStyle,\n  IfcWindowStyleConstructionEnum,\n  IfcWindowStyleOperationEnum,\n  IfcWindowType,\n  IfcWindowTypeEnum,\n  IfcWindowTypePartitioningEnum,\n  IfcWorkCalendar,\n  IfcWorkCalendarTypeEnum,\n  IfcWorkControl,\n  IfcWorkPlan,\n  IfcWorkPlanTypeEnum,\n  IfcWorkSchedule,\n  IfcWorkScheduleTypeEnum,\n  IfcWorkTime,\n  IfcZShapeProfileDef,\n  IfcZone,\n  LABEL,\n  LINE_END,\n  REAL,\n  REF,\n  SET_BEGIN,\n  SET_END,\n  STRING,\n  UNKNOWN,\n  Value,\n  ms\n};\n"],"names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__require","x","require","__commonJS","cb","mod","keys","exports","__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","throw","done","then","apply","require_crypto","require_web_ifc_mt","module","WebIFCWasm2","_scriptDir","document","currentScript","src","__filename","WebIFCWasm3","GROWABLE_HEAP_I8","wasmMemory","buffer","updateGlobalBufferAndViews","HEAP8","GROWABLE_HEAP_U8","HEAPU8","GROWABLE_HEAP_I16","HEAP16","GROWABLE_HEAP_U16","HEAPU16","GROWABLE_HEAP_I32","HEAP32","GROWABLE_HEAP_U32","HEAPU32","GROWABLE_HEAP_F64","HEAPF64","readyPromiseResolve","readyPromiseReject","Module","moduleOverrides","read_","readAsync","readBinary","nodeFS","nodePath","arguments_","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WEB","window","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","process","versions","node","ENVIRONMENT_IS_PTHREAD","scriptDirectory","locateFile","path","nodeWorkerThreads","dirname","__dirname","filename","binary","ret","Uint8Array","assert","onload","onerror","err2","data","length","replace","slice","ex","ExitStatus","abort","keepRuntimeAlive","console","error","global","Worker","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","title","performance","out","log","bind","err","warn","warnOnce","text","shown","wasmBinary","Atomics","load","store","compareExchange","wasmModule","noExitRuntime","WebAssembly","ABORT","condition","TextDecoderWrapper","encoding","textDecoder","TextDecoder","this","decode","SharedArrayBuffer","UTF8Decoder","UTF8ArrayToString","heap","idx","maxBytesToRead","endIdx","endPtr","subarray","str","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","ptr","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","i","u","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","len","HEAPF32","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","buf","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","wasmTable","INITIAL_MEMORY","Memory","Error","byteLength","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATEXIT__","__ATPOSTRUN__","runtimeKeepaliveCounter","initRuntime","FS","init","initialized","ignorePermissions","TTY","callRuntimeCallbacks","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","id","removeRunDependency","clearInterval","callback","what","stack","RuntimeError","wasmBinaryFile","tempDouble","tempI64","isDataURI","startsWith","isFileURI","getBinary","file","ASM_CONSTS","$0","$1","setTimeout","__emscripten_do_dispatch_to_thread","callbacks","shift","func","arg","get","_emscripten_futex_wake","addr","count","Infinity","mainThreadWaitAddress","__emscripten_main_thread_futex","mainThreadWoken","notify","_emscripten_get_now","PThread","unusedWorkers","runningWorkers","tlsInitFunctions","initMainThreadBlock","pthreadPoolSize","navigator","hardwareConcurrency","allocateUnusedWorker","tb","_malloc","headPtr","tlsMemory","__emscripten_thread_init","_emscripten_register_main_browser_thread_id","initWorker","pthreads","threadExitHandlers","runExitHandlers","pop","___pthread_tsd_run_dtors","runExitHandlersAndDeinitThread","exitCode","setExitStatus","threadExit","_pthread_self","postMessage","threadCancel","terminateAllThreads","t","pthread","worker","returnWorkerToPool","terminate","freeThreadData","threadInfoStruct","_free","allocatedOwnStack","stackBase","runWithoutMainThreadQueuedCalls","push","splice","__emscripten_allow_main_runtime_queued_calls","receiveObjectTransfer","threadInit","loadWasmModuleToWorker","onFinishedLoading","onmessage","d","cmd","currentProxiedOperationCallerThread","thread","targetThread","_emscripten_main_thread_process_queued_calls","spawnThread","pthread_ptr","cleanupThread","killThread","cancelThread","loaded","runPthread","alert","exit","e2","target","lineno","message","on","pthreadMainJs","getNewWorker","busySpinWait","msecs","now","stackTop","stackMax","_emscripten_stack_set_limits","stackRestore","setErrNo","___errno_location","ExceptionInfo","excPtr","set_type","type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","add_ref","add","release_ref","sub","PATH","splitPath","exec","normalizeArray","parts","allowAboveRoot","up","last","unshift","normalize","isAbsolute","charAt","trailingSlash","split","filter","p","join","result","root","dir","basename","lastSlash","extname","paths","Array","arguments","join2","l","r","PATH_FS","resolvedPath","resolvedAbsolute","cwd","TypeError","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","ttys","shutdown","register","dev","ops","input","output","registerDevice","stream_ops","stream","tty","rdev","ErrnoError","seekable","close","flush","read","buffer2","offset","pos","get_char","bytesRead","timestamp","Date","write","put_char","default_tty_ops","Buffer","alloc","readSync","stdin","fd","toString","includes","prompt","readline","intArrayFromString","val","default_tty1_ops","mmapAlloc","size","factor","ceil","alignMemory","_memalign","address","fill","zeroMemory","MEMFS","ops_table","mount","createNode","parent","name2","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","max","oldContents","set","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","name","entries","key2","newname","oldpath","position","canOwn","whence","prot","flags","allocated","byteOffset","mmapFlags","mounts","devices","streams","nextInode","nameTable","currentPath","trackingDelegate","tracking","openFlags","READ","WRITE","filesystems","syncFSRequests","lookupPath","opts","defaults","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagModes","modeStringToFlags","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","getStream","createStream","FSStream","object","isRead","isWrite","isAppend","newStream","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","syncfs","populate","completed","doCallback","errored","forEach","pseudo","mountRoot","unmount","create","mkdir","mkdirTree","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","readFiles","trackingFlags","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","readFile","writeFile","actualNumBytes","ArrayBuffer","isView","chdir","createDefaultDirectories","createDefaultDevices","random_device","crypto","randomBuffer","getRandomValues","crypto_module","getRandomDevice","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","errno2","constructor","code","staticInit","quit","fflush","getMode","canRead","canWrite","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","createDataFile","forceLoadFile","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray2","xhr2","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","lazyArray","defineProperties","fn","createPreloadedFile","dontCreateFile","preFinish","Browser","fullname","processData","byteArray","finish","byteArray2","handled","plugin","noRunDep","dep","arrayBuffer","event","asyncLoad","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_NAME","pathname","DB_VERSION","DB_STORE_NAME","saveFilesToDB","openRequest","onupgradeneeded","createObjectStore","onsuccess","transaction","files","objectStore","ok","fail","total","putRequest","put","loadFilesFromDB","db","getRequest","SYSCALLS","mappings","DEFAULT_POLLMASK","umask","calculateAt","dirfd","allowEmpty","dirstream","doStat","abs","floor","getTime","doMsync","doMkdir","doMknod","doReadlink","bufsize","endChar","doAccess","amode","doDup","suggestFD","suggest","doReadv","iov","iovcnt","curr","doWritev","varargs","getStr","getStreamFromFD","get64","low","high","___sys_fcntl64","_emscripten_proxy_to_main_thread_js","___sys_ioctl","op","argp","___sys_open","tupleRegistrations","runDestructors","destructors","del","simpleReadValueFromPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","makeLegalFunctionName","f","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters2","myTypeConverters","registerType","typeConverters","unregisteredTypes","registered","dt","structRegistrations","getShiftFromSize","embind_charCodes","readLatin1String","c","BindingError","throwBindingError","rawType","registeredInstance","options","ignoreDuplicateRegistrations","ClassHandle_isAliasOf","other","ClassHandle","leftClass","$$","ptrType","registeredClass","left","rightClass","right","baseClass","upcast","throwInstanceAlreadyDeleted","finalizationGroup","detachFinalizer","handle","releaseClassHandle","smartPtr","smartPtrType","rawDestructor","runDestructor","attachFinalizer","FinalizationGroup","handle2","iter","unregister","ClassHandle_clone","preservePointerOnDelete","o","clone","getPrototypeOf","deleteScheduled","ClassHandle_delete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","ClassHandle_deleteLater","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","argCount","exposePublicSymbol","numArguments","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","rawConstructor","isConst","sharingPolicy","clonedHandle","rawShare","__emval_register","nonConstNoSmartPtrRawPointerToWireType","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","rv","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","k","setDelayFunction","getInheritedInstance","class_","getBasestPointer","makeClassHandle","record","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","constPointerType","pointerType","dp","RegisteredPointer","destructorFunction","replacePublicSymbol","dynCall","sig","args","dynCallLegacy","embind__requireFunction","signature","rawFunction","fp","argCache","getDynCaller","UnboundTypeError","getTypeName","___getTypeName","throwUnboundTypeError","types","unboundTypes","seen","visit","map","heap32VectorToArray","firstElement","array","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","argumentList","dummy","new_","emval_free_list","emval_handle_array","__emval_decref","count_emval_handles","get_first_emval","enumReadValueFromPointer","signed","requireRegisteredType","impl","v","floatReadValueFromPointer","integerReadValueFromPointer","requireHandle","emval_symbols","getStringOrSymbol","symbol","emval_get_global","globalThis","readAsmConstArgsArray","index","sync","numCallArgs","stackSave","serializedNumCallArgs","stackAlloc","_emscripten_run_in_main_runtime_thread_js","_emscripten_receive_on_main_thread_js_callArgs","emscripten_realloc_buffer","grow","JSEvents","inEventHandler","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","registerRemoveEventListeners","removeEventListenersRegistered","deferCall","targetFunction","precedence","arraysHaveEqualContent","arrA","arrB","i2","sort","y","removeDeferredCalls","canPerformEventHandlerRequests","currentEventHandler","allowsDeferredCalls","runDeferredCalls","removeAllHandlersOnTarget","eventTypeString","h","removeEventListener","eventListenerFunc","useCapture","registerOrRemoveHandler","eventHandler","jsEventHandler","handlerFunc","callbackfunc","addEventListener","queueEventHandlerOnThread_iiii","eventHandlerFunc","eventTypeId","eventData","userData","__emscripten_call_on_thread","getTargetThreadForEventCallback","getNodeNameForTarget","screen","fullscreenEnabled","webkitFullscreenEnabled","_emscripten_set_offscreencanvas_size_on_target_thread_js","targetCanvas","width","height","targetCanvasPtr","jsString","cString","stringToNewUTF8","specialHTMLTargets","findEventTarget","querySelector","findCanvasEventTarget","_emscripten_set_canvas_element_size_calling_thread","canvas","canvasSharedPtr","offscreenCanvas","controlTransferredOffscreen","_emscripten_set_offscreencanvas_size_on_target_thread","autoResizeViewport","GLctxObject","GLctx","prevViewport","getParameter","viewport","_emscripten_set_canvas_element_size_main_thread","GL","counter","buffers","programs","framebuffers","renderbuffers","textures","shaders","vaos","contexts","offscreenCanvases","queries","stringCache","unpackAlignment","recordError","errorCode","lastError","getNewId","table","getSource","shader","string","source","createContext","webGLContextAttributes","getContextSafariWebGL2Fixed","getContext","ver","attrs","gl","WebGLRenderingContext","ctx","registerContext","context","attributes","version","majorVersion","enableExtensionsByDefault","initExtensions","makeContextCurrent","contextHandle","currentContext","deleteContext","initExtensionsDone","GLctx2","ext","getExtension","divisor","first","primcount","indices","__webgl_enable_ANGLE_instanced_arrays","vao","__webgl_enable_OES_vertex_array_object","n","bufs","__webgl_enable_WEBGL_draw_buffers","disjointTimerQueryExt","multiDrawWebgl","getSupportedExtensions","__emscripten_webgl_power_preferences","ENV","getEnvStrings","strings","env","languages","_environ_get","__environ","environ_buf","bufSize","dontAddNull","writeAsciiToMemory","_environ_sizes_get","penviron_count","penviron_buf_size","_fd_close","_fd_read","pnum","num","_fd_seek","offset_low","offset_high","newOffset","DOUBLE_LIMIT","_fd_write","threadParams","stackHigh","stackSize","tis","detached","global_locale","_emscripten_get_global_libc","msg","startRoutine","time","transferList","__isLeapYear","year","__arraySum","sum","__MONTH_DAYS_LEAP","__MONTH_DAYS_REGULAR","__addDays","date","days","newDate","leap","getFullYear","currentMonth","getMonth","daysInCurrentMonth","getDate","setDate","setMonth","setFullYear","_strftime","s","maxsize","format","tm","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","substring","twelveHour","janFirst","firstSunday","endDate","februaryFirstUntilEndMonth","daysDifference","firstMonday","off","ahead","bytes","readMode","writeMode","codes","embind_init_charCodes","proxiedFunctionTable","stringy","u8array","numBytesWritten","calledRun","asmLibraryArg","line","routine","rawTupleType","reg","elements","elementsLength","elementTypes","elt","getterReturnType","setterArgumentType","elementTypes2","getterContext","setter","setterContext","structType","fieldRecords","fields","field","fieldTypes2","fieldName","primitiveType","minRange","maxRange","trueValue","falseValue","wt","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","rawInvoker","isPureVirtual","unboundTypesHandler","Symbol","method","className","memberFunction","isSigned","ctor","values","rawEnumType","enumValue","enumType","Enum","Value2","argTypes2","invokerArgsArray","fromWireType","bitshift","isUnsignedType","dataTypeIndex","TA","decodeMemoryView","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","valueIsOfTypeString","Uint8ClampedArray","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","constructorSignature","getterSignature","setterSignature","isVoid","targetThreadId","mainThreadId","returnType","destructorsRef","rd","argv","__emval_lookupTypes","clk_id","tp","sigPtr","argbuf","double","readAsmConstArgs","expectedStatus","newStatus","timeout","tNow","tEnd","exchange","wait","dest","copyWithin","requestedSize","oldSize","multiple","maxHeapSize","cutDown","overGrownHeapSize","a0","a1","powerPreference","contextAttributes","minorVersion","explicitSwapControl","proxyContextToMainThread","renderViaOffscreenBackBuffer","_emscripten_webgl_do_create_context","start_routine","_emscripten_sync_run_in_main_thread_4","info","receiveInstance","instance","module2","exports3","numWorkersToLoad","w","receiveInstantiationResult","instantiateArrayBuffer","receiver","fetch","credentials","catch","getBinaryPromise","instantiate","reason","instantiateStreaming","createWasm","run","preRun","doRun","shouldRunNow","entryFunction","toLog","callMain","postRun","implicit","runCaller","ready","define","require_web_ifc","prev","IFCACTIONREQUEST","IFCACTOR","IFCACTORROLE","IFCACTUATOR","IFCACTUATORTYPE","IFCADDRESS","IFCADVANCEDBREP","IFCADVANCEDBREPWITHVOIDS","IFCADVANCEDFACE","IFCAIRTERMINAL","IFCAIRTERMINALBOX","IFCAIRTERMINALBOXTYPE","IFCAIRTERMINALTYPE","IFCAIRTOAIRHEATRECOVERY","IFCAIRTOAIRHEATRECOVERYTYPE","IFCALARM","IFCALARMTYPE","IFCALIGNMENT","IFCALIGNMENT2DHORIZONTAL","IFCALIGNMENT2DHORIZONTALSEGMENT","IFCALIGNMENT2DSEGMENT","IFCALIGNMENT2DVERSEGCIRCULARARC","IFCALIGNMENT2DVERSEGLINE","IFCALIGNMENT2DVERSEGPARABOLICARC","IFCALIGNMENT2DVERTICAL","IFCALIGNMENT2DVERTICALSEGMENT","IFCALIGNMENTCURVE","IFCANNOTATION","IFCANNOTATIONFILLAREA","IFCAPPLICATION","IFCAPPLIEDVALUE","IFCAPPROVAL","IFCAPPROVALRELATIONSHIP","IFCARBITRARYCLOSEDPROFILEDEF","IFCARBITRARYOPENPROFILEDEF","IFCARBITRARYPROFILEDEFWITHVOIDS","IFCASSET","IFCASYMMETRICISHAPEPROFILEDEF","IFCAUDIOVISUALAPPLIANCE","IFCAUDIOVISUALAPPLIANCETYPE","IFCAXIS1PLACEMENT","IFCAXIS2PLACEMENT2D","IFCAXIS2PLACEMENT3D","IFCBSPLINECURVE","IFCBSPLINECURVEWITHKNOTS","IFCBSPLINESURFACE","IFCBSPLINESURFACEWITHKNOTS","IFCBEAM","IFCBEAMSTANDARDCASE","IFCBEAMTYPE","IFCBEARING","IFCBEARINGTYPE","IFCBLOBTEXTURE","IFCBLOCK","IFCBOILER","IFCBOILERTYPE","IFCBOOLEANCLIPPINGRESULT","IFCBOOLEANRESULT","IFCBOUNDARYCONDITION","IFCBOUNDARYCURVE","IFCBOUNDARYEDGECONDITION","IFCBOUNDARYFACECONDITION","IFCBOUNDARYNODECONDITION","IFCBOUNDARYNODECONDITIONWARPING","IFCBOUNDEDCURVE","IFCBOUNDEDSURFACE","IFCBOUNDINGBOX","IFCBOXEDHALFSPACE","IFCBRIDGE","IFCBRIDGEPART","IFCBUILDING","IFCBUILDINGELEMENT","IFCBUILDINGELEMENTPART","IFCBUILDINGELEMENTPARTTYPE","IFCBUILDINGELEMENTPROXY","IFCBUILDINGELEMENTPROXYTYPE","IFCBUILDINGELEMENTTYPE","IFCBUILDINGSTOREY","IFCBUILDINGSYSTEM","IFCBURNER","IFCBURNERTYPE","IFCCSHAPEPROFILEDEF","IFCCABLECARRIERFITTING","IFCCABLECARRIERFITTINGTYPE","IFCCABLECARRIERSEGMENT","IFCCABLECARRIERSEGMENTTYPE","IFCCABLEFITTING","IFCCABLEFITTINGTYPE","IFCCABLESEGMENT","IFCCABLESEGMENTTYPE","IFCCAISSONFOUNDATION","IFCCAISSONFOUNDATIONTYPE","IFCCARTESIANPOINT","IFCCARTESIANPOINTLIST","IFCCARTESIANPOINTLIST2D","IFCCARTESIANPOINTLIST3D","IFCCARTESIANTRANSFORMATIONOPERATOR","IFCCARTESIANTRANSFORMATIONOPERATOR2D","IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM","IFCCARTESIANTRANSFORMATIONOPERATOR3D","IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM","IFCCENTERLINEPROFILEDEF","IFCCHILLER","IFCCHILLERTYPE","IFCCHIMNEY","IFCCHIMNEYTYPE","IFCCIRCLE","IFCCIRCLEHOLLOWPROFILEDEF","IFCCIRCLEPROFILEDEF","IFCCIRCULARARCSEGMENT2D","IFCCIVILELEMENT","IFCCIVILELEMENTTYPE","IFCCLASSIFICATION","IFCCLASSIFICATIONREFERENCE","IFCCLOSEDSHELL","IFCCOIL","IFCCOILTYPE","IFCCOLOURRGB","IFCCOLOURRGBLIST","IFCCOLOURSPECIFICATION","IFCCOLUMN","IFCCOLUMNSTANDARDCASE","IFCCOLUMNTYPE","IFCCOMMUNICATIONSAPPLIANCE","IFCCOMMUNICATIONSAPPLIANCETYPE","IFCCOMPLEXPROPERTY","IFCCOMPLEXPROPERTYTEMPLATE","IFCCOMPOSITECURVE","IFCCOMPOSITECURVEONSURFACE","IFCCOMPOSITECURVESEGMENT","IFCCOMPOSITEPROFILEDEF","IFCCOMPRESSOR","IFCCOMPRESSORTYPE","IFCCONDENSER","IFCCONDENSERTYPE","IFCCONIC","IFCCONNECTEDFACESET","IFCCONNECTIONCURVEGEOMETRY","IFCCONNECTIONGEOMETRY","IFCCONNECTIONPOINTECCENTRICITY","IFCCONNECTIONPOINTGEOMETRY","IFCCONNECTIONSURFACEGEOMETRY","IFCCONNECTIONVOLUMEGEOMETRY","IFCCONSTRAINT","IFCCONSTRUCTIONEQUIPMENTRESOURCE","IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE","IFCCONSTRUCTIONMATERIALRESOURCE","IFCCONSTRUCTIONMATERIALRESOURCETYPE","IFCCONSTRUCTIONPRODUCTRESOURCE","IFCCONSTRUCTIONPRODUCTRESOURCETYPE","IFCCONSTRUCTIONRESOURCE","IFCCONSTRUCTIONRESOURCETYPE","IFCCONTEXT","IFCCONTEXTDEPENDENTUNIT","IFCCONTROL","IFCCONTROLLER","IFCCONTROLLERTYPE","IFCCONVERSIONBASEDUNIT","IFCCONVERSIONBASEDUNITWITHOFFSET","IFCCOOLEDBEAM","IFCCOOLEDBEAMTYPE","IFCCOOLINGTOWER","IFCCOOLINGTOWERTYPE","IFCCOORDINATEOPERATION","IFCCOORDINATEREFERENCESYSTEM","IFCCOSTITEM","IFCCOSTSCHEDULE","IFCCOSTVALUE","IFCCOVERING","IFCCOVERINGTYPE","IFCCREWRESOURCE","IFCCREWRESOURCETYPE","IFCCSGPRIMITIVE3D","IFCCSGSOLID","IFCCURRENCYRELATIONSHIP","IFCCURTAINWALL","IFCCURTAINWALLTYPE","IFCCURVE","IFCCURVEBOUNDEDPLANE","IFCCURVEBOUNDEDSURFACE","IFCCURVESEGMENT2D","IFCCURVESTYLE","IFCCURVESTYLEFONT","IFCCURVESTYLEFONTANDSCALING","IFCCURVESTYLEFONTPATTERN","IFCCYLINDRICALSURFACE","IFCDAMPER","IFCDAMPERTYPE","IFCDEEPFOUNDATION","IFCDEEPFOUNDATIONTYPE","IFCDERIVEDPROFILEDEF","IFCDERIVEDUNIT","IFCDERIVEDUNITELEMENT","IFCDIMENSIONALEXPONENTS","IFCDIRECTION","IFCDISCRETEACCESSORY","IFCDISCRETEACCESSORYTYPE","IFCDISTANCEEXPRESSION","IFCDISTRIBUTIONCHAMBERELEMENT","IFCDISTRIBUTIONCHAMBERELEMENTTYPE","IFCDISTRIBUTIONCIRCUIT","IFCDISTRIBUTIONCONTROLELEMENT","IFCDISTRIBUTIONCONTROLELEMENTTYPE","IFCDISTRIBUTIONELEMENT","IFCDISTRIBUTIONELEMENTTYPE","IFCDISTRIBUTIONFLOWELEMENT","IFCDISTRIBUTIONFLOWELEMENTTYPE","IFCDISTRIBUTIONPORT","IFCDISTRIBUTIONSYSTEM","IFCDOCUMENTINFORMATION","IFCDOCUMENTINFORMATIONRELATIONSHIP","IFCDOCUMENTREFERENCE","IFCDOOR","IFCDOORLININGPROPERTIES","IFCDOORPANELPROPERTIES","IFCDOORSTANDARDCASE","IFCDOORSTYLE","IFCDOORTYPE","IFCDRAUGHTINGPREDEFINEDCOLOUR","IFCDRAUGHTINGPREDEFINEDCURVEFONT","IFCDUCTFITTING","IFCDUCTFITTINGTYPE","IFCDUCTSEGMENT","IFCDUCTSEGMENTTYPE","IFCDUCTSILENCER","IFCDUCTSILENCERTYPE","IFCEDGE","IFCEDGECURVE","IFCEDGELOOP","IFCELECTRICAPPLIANCE","IFCELECTRICAPPLIANCETYPE","IFCELECTRICDISTRIBUTIONBOARD","IFCELECTRICDISTRIBUTIONBOARDTYPE","IFCELECTRICFLOWSTORAGEDEVICE","IFCELECTRICFLOWSTORAGEDEVICETYPE","IFCELECTRICGENERATOR","IFCELECTRICGENERATORTYPE","IFCELECTRICMOTOR","IFCELECTRICMOTORTYPE","IFCELECTRICTIMECONTROL","IFCELECTRICTIMECONTROLTYPE","IFCELEMENT","IFCELEMENTASSEMBLY","IFCELEMENTASSEMBLYTYPE","IFCELEMENTCOMPONENT","IFCELEMENTCOMPONENTTYPE","IFCELEMENTQUANTITY","IFCELEMENTTYPE","IFCELEMENTARYSURFACE","IFCELLIPSE","IFCELLIPSEPROFILEDEF","IFCENERGYCONVERSIONDEVICE","IFCENERGYCONVERSIONDEVICETYPE","IFCENGINE","IFCENGINETYPE","IFCEVAPORATIVECOOLER","IFCEVAPORATIVECOOLERTYPE","IFCEVAPORATOR","IFCEVAPORATORTYPE","IFCEVENT","IFCEVENTTIME","IFCEVENTTYPE","IFCEXTENDEDPROPERTIES","IFCEXTERNALINFORMATION","IFCEXTERNALREFERENCE","IFCEXTERNALREFERENCERELATIONSHIP","IFCEXTERNALSPATIALELEMENT","IFCEXTERNALSPATIALSTRUCTUREELEMENT","IFCEXTERNALLYDEFINEDHATCHSTYLE","IFCEXTERNALLYDEFINEDSURFACESTYLE","IFCEXTERNALLYDEFINEDTEXTFONT","IFCEXTRUDEDAREASOLID","IFCEXTRUDEDAREASOLIDTAPERED","IFCFACE","IFCFACEBASEDSURFACEMODEL","IFCFACEBOUND","IFCFACEOUTERBOUND","IFCFACESURFACE","IFCFACETEDBREP","IFCFACETEDBREPWITHVOIDS","IFCFACILITY","IFCFACILITYPART","IFCFAILURECONNECTIONCONDITION","IFCFAN","IFCFANTYPE","IFCFASTENER","IFCFASTENERTYPE","IFCFEATUREELEMENT","IFCFEATUREELEMENTADDITION","IFCFEATUREELEMENTSUBTRACTION","IFCFILLAREASTYLE","IFCFILLAREASTYLEHATCHING","IFCFILLAREASTYLETILES","IFCFILTER","IFCFILTERTYPE","IFCFIRESUPPRESSIONTERMINAL","IFCFIRESUPPRESSIONTERMINALTYPE","IFCFIXEDREFERENCESWEPTAREASOLID","IFCFLOWCONTROLLER","IFCFLOWCONTROLLERTYPE","IFCFLOWFITTING","IFCFLOWFITTINGTYPE","IFCFLOWINSTRUMENT","IFCFLOWINSTRUMENTTYPE","IFCFLOWMETER","IFCFLOWMETERTYPE","IFCFLOWMOVINGDEVICE","IFCFLOWMOVINGDEVICETYPE","IFCFLOWSEGMENT","IFCFLOWSEGMENTTYPE","IFCFLOWSTORAGEDEVICE","IFCFLOWSTORAGEDEVICETYPE","IFCFLOWTERMINAL","IFCFLOWTERMINALTYPE","IFCFLOWTREATMENTDEVICE","IFCFLOWTREATMENTDEVICETYPE","IFCFOOTING","IFCFOOTINGTYPE","IFCFURNISHINGELEMENT","IFCFURNISHINGELEMENTTYPE","IFCFURNITURE","IFCFURNITURETYPE","IFCGEOGRAPHICELEMENT","IFCGEOGRAPHICELEMENTTYPE","IFCGEOMETRICCURVESET","IFCGEOMETRICREPRESENTATIONCONTEXT","IFCGEOMETRICREPRESENTATIONITEM","IFCGEOMETRICREPRESENTATIONSUBCONTEXT","IFCGEOMETRICSET","IFCGRID","IFCGRIDAXIS","IFCGRIDPLACEMENT","IFCGROUP","IFCHALFSPACESOLID","IFCHEATEXCHANGER","IFCHEATEXCHANGERTYPE","IFCHUMIDIFIER","IFCHUMIDIFIERTYPE","IFCISHAPEPROFILEDEF","IFCIMAGETEXTURE","IFCINDEXEDCOLOURMAP","IFCINDEXEDPOLYCURVE","IFCINDEXEDPOLYGONALFACE","IFCINDEXEDPOLYGONALFACEWITHVOIDS","IFCINDEXEDTEXTUREMAP","IFCINDEXEDTRIANGLETEXTUREMAP","IFCINTERCEPTOR","IFCINTERCEPTORTYPE","IFCINTERSECTIONCURVE","IFCINVENTORY","IFCIRREGULARTIMESERIES","IFCIRREGULARTIMESERIESVALUE","IFCJUNCTIONBOX","IFCJUNCTIONBOXTYPE","IFCLSHAPEPROFILEDEF","IFCLABORRESOURCE","IFCLABORRESOURCETYPE","IFCLAGTIME","IFCLAMP","IFCLAMPTYPE","IFCLIBRARYINFORMATION","IFCLIBRARYREFERENCE","IFCLIGHTDISTRIBUTIONDATA","IFCLIGHTFIXTURE","IFCLIGHTFIXTURETYPE","IFCLIGHTINTENSITYDISTRIBUTION","IFCLIGHTSOURCE","IFCLIGHTSOURCEAMBIENT","IFCLIGHTSOURCEDIRECTIONAL","IFCLIGHTSOURCEGONIOMETRIC","IFCLIGHTSOURCEPOSITIONAL","IFCLIGHTSOURCESPOT","IFCLINE","IFCLINESEGMENT2D","IFCLINEARPLACEMENT","IFCLINEARPOSITIONINGELEMENT","IFCLOCALPLACEMENT","IFCLOOP","IFCMANIFOLDSOLIDBREP","IFCMAPCONVERSION","IFCMAPPEDITEM","IFCMATERIAL","IFCMATERIALCLASSIFICATIONRELATIONSHIP","IFCMATERIALCONSTITUENT","IFCMATERIALCONSTITUENTSET","IFCMATERIALDEFINITION","IFCMATERIALDEFINITIONREPRESENTATION","IFCMATERIALLAYER","IFCMATERIALLAYERSET","IFCMATERIALLAYERSETUSAGE","IFCMATERIALLAYERWITHOFFSETS","IFCMATERIALLIST","IFCMATERIALPROFILE","IFCMATERIALPROFILESET","IFCMATERIALPROFILESETUSAGE","IFCMATERIALPROFILESETUSAGETAPERING","IFCMATERIALPROFILEWITHOFFSETS","IFCMATERIALPROPERTIES","IFCMATERIALRELATIONSHIP","IFCMATERIALUSAGEDEFINITION","IFCMEASUREWITHUNIT","IFCMECHANICALFASTENER","IFCMECHANICALFASTENERTYPE","IFCMEDICALDEVICE","IFCMEDICALDEVICETYPE","IFCMEMBER","IFCMEMBERSTANDARDCASE","IFCMEMBERTYPE","IFCMETRIC","IFCMIRROREDPROFILEDEF","IFCMONETARYUNIT","IFCMOTORCONNECTION","IFCMOTORCONNECTIONTYPE","IFCNAMEDUNIT","IFCOBJECT","IFCOBJECTDEFINITION","IFCOBJECTPLACEMENT","IFCOBJECTIVE","IFCOCCUPANT","IFCOFFSETCURVE","IFCOFFSETCURVE2D","IFCOFFSETCURVE3D","IFCOFFSETCURVEBYDISTANCES","IFCOPENSHELL","IFCOPENINGELEMENT","IFCOPENINGSTANDARDCASE","IFCORGANIZATION","IFCORGANIZATIONRELATIONSHIP","IFCORIENTATIONEXPRESSION","IFCORIENTEDEDGE","IFCOUTERBOUNDARYCURVE","IFCOUTLET","IFCOUTLETTYPE","IFCOWNERHISTORY","IFCPARAMETERIZEDPROFILEDEF","IFCPATH","IFCPCURVE","IFCPERFORMANCEHISTORY","IFCPERMEABLECOVERINGPROPERTIES","IFCPERMIT","IFCPERSON","IFCPERSONANDORGANIZATION","IFCPHYSICALCOMPLEXQUANTITY","IFCPHYSICALQUANTITY","IFCPHYSICALSIMPLEQUANTITY","IFCPILE","IFCPILETYPE","IFCPIPEFITTING","IFCPIPEFITTINGTYPE","IFCPIPESEGMENT","IFCPIPESEGMENTTYPE","IFCPIXELTEXTURE","IFCPLACEMENT","IFCPLANARBOX","IFCPLANAREXTENT","IFCPLANE","IFCPLATE","IFCPLATESTANDARDCASE","IFCPLATETYPE","IFCPOINT","IFCPOINTONCURVE","IFCPOINTONSURFACE","IFCPOLYLOOP","IFCPOLYGONALBOUNDEDHALFSPACE","IFCPOLYGONALFACESET","IFCPOLYLINE","IFCPORT","IFCPOSITIONINGELEMENT","IFCPOSTALADDRESS","IFCPREDEFINEDCOLOUR","IFCPREDEFINEDCURVEFONT","IFCPREDEFINEDITEM","IFCPREDEFINEDPROPERTIES","IFCPREDEFINEDPROPERTYSET","IFCPREDEFINEDTEXTFONT","IFCPRESENTATIONITEM","IFCPRESENTATIONLAYERASSIGNMENT","IFCPRESENTATIONLAYERWITHSTYLE","IFCPRESENTATIONSTYLE","IFCPRESENTATIONSTYLEASSIGNMENT","IFCPROCEDURE","IFCPROCEDURETYPE","IFCPROCESS","IFCPRODUCT","IFCPRODUCTDEFINITIONSHAPE","IFCPRODUCTREPRESENTATION","IFCPROFILEDEF","IFCPROFILEPROPERTIES","IFCPROJECT","IFCPROJECTLIBRARY","IFCPROJECTORDER","IFCPROJECTEDCRS","IFCPROJECTIONELEMENT","IFCPROPERTY","IFCPROPERTYABSTRACTION","IFCPROPERTYBOUNDEDVALUE","IFCPROPERTYDEFINITION","IFCPROPERTYDEPENDENCYRELATIONSHIP","IFCPROPERTYENUMERATEDVALUE","IFCPROPERTYENUMERATION","IFCPROPERTYLISTVALUE","IFCPROPERTYREFERENCEVALUE","IFCPROPERTYSET","IFCPROPERTYSETDEFINITION","IFCPROPERTYSETTEMPLATE","IFCPROPERTYSINGLEVALUE","IFCPROPERTYTABLEVALUE","IFCPROPERTYTEMPLATE","IFCPROPERTYTEMPLATEDEFINITION","IFCPROTECTIVEDEVICE","IFCPROTECTIVEDEVICETRIPPINGUNIT","IFCPROTECTIVEDEVICETRIPPINGUNITTYPE","IFCPROTECTIVEDEVICETYPE","IFCPROXY","IFCPUMP","IFCPUMPTYPE","IFCQUANTITYAREA","IFCQUANTITYCOUNT","IFCQUANTITYLENGTH","IFCQUANTITYSET","IFCQUANTITYTIME","IFCQUANTITYVOLUME","IFCQUANTITYWEIGHT","IFCRAILING","IFCRAILINGTYPE","IFCRAMP","IFCRAMPFLIGHT","IFCRAMPFLIGHTTYPE","IFCRAMPTYPE","IFCRATIONALBSPLINECURVEWITHKNOTS","IFCRATIONALBSPLINESURFACEWITHKNOTS","IFCRECTANGLEHOLLOWPROFILEDEF","IFCRECTANGLEPROFILEDEF","IFCRECTANGULARPYRAMID","IFCRECTANGULARTRIMMEDSURFACE","IFCRECURRENCEPATTERN","IFCREFERENCE","IFCREFERENT","IFCREGULARTIMESERIES","IFCREINFORCEMENTBARPROPERTIES","IFCREINFORCEMENTDEFINITIONPROPERTIES","IFCREINFORCINGBAR","IFCREINFORCINGBARTYPE","IFCREINFORCINGELEMENT","IFCREINFORCINGELEMENTTYPE","IFCREINFORCINGMESH","IFCREINFORCINGMESHTYPE","IFCRELAGGREGATES","IFCRELASSIGNS","IFCRELASSIGNSTOACTOR","IFCRELASSIGNSTOCONTROL","IFCRELASSIGNSTOGROUP","IFCRELASSIGNSTOGROUPBYFACTOR","IFCRELASSIGNSTOPROCESS","IFCRELASSIGNSTOPRODUCT","IFCRELASSIGNSTORESOURCE","IFCRELASSOCIATES","IFCRELASSOCIATESAPPROVAL","IFCRELASSOCIATESCLASSIFICATION","IFCRELASSOCIATESCONSTRAINT","IFCRELASSOCIATESDOCUMENT","IFCRELASSOCIATESLIBRARY","IFCRELASSOCIATESMATERIAL","IFCRELCONNECTS","IFCRELCONNECTSELEMENTS","IFCRELCONNECTSPATHELEMENTS","IFCRELCONNECTSPORTTOELEMENT","IFCRELCONNECTSPORTS","IFCRELCONNECTSSTRUCTURALACTIVITY","IFCRELCONNECTSSTRUCTURALMEMBER","IFCRELCONNECTSWITHECCENTRICITY","IFCRELCONNECTSWITHREALIZINGELEMENTS","IFCRELCONTAINEDINSPATIALSTRUCTURE","IFCRELCOVERSBLDGELEMENTS","IFCRELCOVERSSPACES","IFCRELDECLARES","IFCRELDECOMPOSES","IFCRELDEFINES","IFCRELDEFINESBYOBJECT","IFCRELDEFINESBYPROPERTIES","IFCRELDEFINESBYTEMPLATE","IFCRELDEFINESBYTYPE","IFCRELFILLSELEMENT","IFCRELFLOWCONTROLELEMENTS","IFCRELINTERFERESELEMENTS","IFCRELNESTS","IFCRELPOSITIONS","IFCRELPROJECTSELEMENT","IFCRELREFERENCEDINSPATIALSTRUCTURE","IFCRELSEQUENCE","IFCRELSERVICESBUILDINGS","IFCRELSPACEBOUNDARY","IFCRELSPACEBOUNDARY1STLEVEL","IFCRELSPACEBOUNDARY2NDLEVEL","IFCRELVOIDSELEMENT","IFCRELATIONSHIP","IFCREPARAMETRISEDCOMPOSITECURVESEGMENT","IFCREPRESENTATION","IFCREPRESENTATIONCONTEXT","IFCREPRESENTATIONITEM","IFCREPRESENTATIONMAP","IFCRESOURCE","IFCRESOURCEAPPROVALRELATIONSHIP","IFCRESOURCECONSTRAINTRELATIONSHIP","IFCRESOURCELEVELRELATIONSHIP","IFCRESOURCETIME","IFCREVOLVEDAREASOLID","IFCREVOLVEDAREASOLIDTAPERED","IFCRIGHTCIRCULARCONE","IFCRIGHTCIRCULARCYLINDER","IFCROOF","IFCROOFTYPE","IFCROOT","IFCROUNDEDRECTANGLEPROFILEDEF","IFCSIUNIT","IFCSANITARYTERMINAL","IFCSANITARYTERMINALTYPE","IFCSCHEDULINGTIME","IFCSEAMCURVE","IFCSECTIONPROPERTIES","IFCSECTIONREINFORCEMENTPROPERTIES","IFCSECTIONEDSOLID","IFCSECTIONEDSOLIDHORIZONTAL","IFCSECTIONEDSPINE","IFCSENSOR","IFCSENSORTYPE","IFCSHADINGDEVICE","IFCSHADINGDEVICETYPE","IFCSHAPEASPECT","IFCSHAPEMODEL","IFCSHAPEREPRESENTATION","IFCSHELLBASEDSURFACEMODEL","IFCSIMPLEPROPERTY","IFCSIMPLEPROPERTYTEMPLATE","IFCSITE","IFCSLAB","IFCSLABELEMENTEDCASE","IFCSLABSTANDARDCASE","IFCSLABTYPE","IFCSLIPPAGECONNECTIONCONDITION","IFCSOLARDEVICE","IFCSOLARDEVICETYPE","IFCSOLIDMODEL","IFCSPACE","IFCSPACEHEATER","IFCSPACEHEATERTYPE","IFCSPACETYPE","IFCSPATIALELEMENT","IFCSPATIALELEMENTTYPE","IFCSPATIALSTRUCTUREELEMENT","IFCSPATIALSTRUCTUREELEMENTTYPE","IFCSPATIALZONE","IFCSPATIALZONETYPE","IFCSPHERE","IFCSPHERICALSURFACE","IFCSTACKTERMINAL","IFCSTACKTERMINALTYPE","IFCSTAIR","IFCSTAIRFLIGHT","IFCSTAIRFLIGHTTYPE","IFCSTAIRTYPE","IFCSTRUCTURALACTION","IFCSTRUCTURALACTIVITY","IFCSTRUCTURALANALYSISMODEL","IFCSTRUCTURALCONNECTION","IFCSTRUCTURALCONNECTIONCONDITION","IFCSTRUCTURALCURVEACTION","IFCSTRUCTURALCURVECONNECTION","IFCSTRUCTURALCURVEMEMBER","IFCSTRUCTURALCURVEMEMBERVARYING","IFCSTRUCTURALCURVEREACTION","IFCSTRUCTURALITEM","IFCSTRUCTURALLINEARACTION","IFCSTRUCTURALLOAD","IFCSTRUCTURALLOADCASE","IFCSTRUCTURALLOADCONFIGURATION","IFCSTRUCTURALLOADGROUP","IFCSTRUCTURALLOADLINEARFORCE","IFCSTRUCTURALLOADORRESULT","IFCSTRUCTURALLOADPLANARFORCE","IFCSTRUCTURALLOADSINGLEDISPLACEMENT","IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION","IFCSTRUCTURALLOADSINGLEFORCE","IFCSTRUCTURALLOADSINGLEFORCEWARPING","IFCSTRUCTURALLOADSTATIC","IFCSTRUCTURALLOADTEMPERATURE","IFCSTRUCTURALMEMBER","IFCSTRUCTURALPLANARACTION","IFCSTRUCTURALPOINTACTION","IFCSTRUCTURALPOINTCONNECTION","IFCSTRUCTURALPOINTREACTION","IFCSTRUCTURALREACTION","IFCSTRUCTURALRESULTGROUP","IFCSTRUCTURALSURFACEACTION","IFCSTRUCTURALSURFACECONNECTION","IFCSTRUCTURALSURFACEMEMBER","IFCSTRUCTURALSURFACEMEMBERVARYING","IFCSTRUCTURALSURFACEREACTION","IFCSTYLEMODEL","IFCSTYLEDITEM","IFCSTYLEDREPRESENTATION","IFCSUBCONTRACTRESOURCE","IFCSUBCONTRACTRESOURCETYPE","IFCSUBEDGE","IFCSURFACE","IFCSURFACECURVE","IFCSURFACECURVESWEPTAREASOLID","IFCSURFACEFEATURE","IFCSURFACEOFLINEAREXTRUSION","IFCSURFACEOFREVOLUTION","IFCSURFACEREINFORCEMENTAREA","IFCSURFACESTYLE","IFCSURFACESTYLELIGHTING","IFCSURFACESTYLEREFRACTION","IFCSURFACESTYLERENDERING","IFCSURFACESTYLESHADING","IFCSURFACESTYLEWITHTEXTURES","IFCSURFACETEXTURE","IFCSWEPTAREASOLID","IFCSWEPTDISKSOLID","IFCSWEPTDISKSOLIDPOLYGONAL","IFCSWEPTSURFACE","IFCSWITCHINGDEVICE","IFCSWITCHINGDEVICETYPE","IFCSYSTEM","IFCSYSTEMFURNITUREELEMENT","IFCSYSTEMFURNITUREELEMENTTYPE","IFCTSHAPEPROFILEDEF","IFCTABLE","IFCTABLECOLUMN","IFCTABLEROW","IFCTANK","IFCTANKTYPE","IFCTASK","IFCTASKTIME","IFCTASKTIMERECURRING","IFCTASKTYPE","IFCTELECOMADDRESS","IFCTENDON","IFCTENDONANCHOR","IFCTENDONANCHORTYPE","IFCTENDONCONDUIT","IFCTENDONCONDUITTYPE","IFCTENDONTYPE","IFCTESSELLATEDFACESET","IFCTESSELLATEDITEM","IFCTEXTLITERAL","IFCTEXTLITERALWITHEXTENT","IFCTEXTSTYLE","IFCTEXTSTYLEFONTMODEL","IFCTEXTSTYLEFORDEFINEDFONT","IFCTEXTSTYLETEXTMODEL","IFCTEXTURECOORDINATE","IFCTEXTURECOORDINATEGENERATOR","IFCTEXTUREMAP","IFCTEXTUREVERTEX","IFCTEXTUREVERTEXLIST","IFCTIMEPERIOD","IFCTIMESERIES","IFCTIMESERIESVALUE","IFCTOPOLOGICALREPRESENTATIONITEM","IFCTOPOLOGYREPRESENTATION","IFCTOROIDALSURFACE","IFCTRANSFORMER","IFCTRANSFORMERTYPE","IFCTRANSITIONCURVESEGMENT2D","IFCTRANSPORTELEMENT","IFCTRANSPORTELEMENTTYPE","IFCTRAPEZIUMPROFILEDEF","IFCTRIANGULATEDFACESET","IFCTRIANGULATEDIRREGULARNETWORK","IFCTRIMMEDCURVE","IFCTUBEBUNDLE","IFCTUBEBUNDLETYPE","IFCTYPEOBJECT","IFCTYPEPROCESS","IFCTYPEPRODUCT","IFCTYPERESOURCE","IFCUSHAPEPROFILEDEF","IFCUNITASSIGNMENT","IFCUNITARYCONTROLELEMENT","IFCUNITARYCONTROLELEMENTTYPE","IFCUNITARYEQUIPMENT","IFCUNITARYEQUIPMENTTYPE","IFCVALVE","IFCVALVETYPE","IFCVECTOR","IFCVERTEX","IFCVERTEXLOOP","IFCVERTEXPOINT","IFCVIBRATIONDAMPER","IFCVIBRATIONDAMPERTYPE","IFCVIBRATIONISOLATOR","IFCVIBRATIONISOLATORTYPE","IFCVIRTUALELEMENT","IFCVIRTUALGRIDINTERSECTION","IFCVOIDINGFEATURE","IFCWALL","IFCWALLELEMENTEDCASE","IFCWALLSTANDARDCASE","IFCWALLTYPE","IFCWASTETERMINAL","IFCWASTETERMINALTYPE","IFCWINDOW","IFCWINDOWLININGPROPERTIES","IFCWINDOWPANELPROPERTIES","IFCWINDOWSTANDARDCASE","IFCWINDOWSTYLE","IFCWINDOWTYPE","IFCWORKCALENDAR","IFCWORKCONTROL","IFCWORKPLAN","IFCWORKSCHEDULE","IFCWORKTIME","IFCZSHAPEPROFILEDEF","IFCZONE","IfcElements","FromRawLineData","IfcActionRequest","FromTape","ID","IfcActor","IfcActorRole","IfcActuator","IfcActuatorType","IfcAddress","IfcAdvancedBrep","IfcAdvancedBrepWithVoids","IfcAdvancedFace","IfcAirTerminal","IfcAirTerminalBox","IfcAirTerminalBoxType","IfcAirTerminalType","IfcAirToAirHeatRecovery","IfcAirToAirHeatRecoveryType","IfcAlarm","IfcAlarmType","IfcAlignment","IfcAlignment2DHorizontal","IfcAlignment2DHorizontalSegment","IfcAlignment2DSegment","IfcAlignment2DVerSegCircularArc","IfcAlignment2DVerSegLine","IfcAlignment2DVerSegParabolicArc","IfcAlignment2DVertical","IfcAlignment2DVerticalSegment","IfcAlignmentCurve","IfcAnnotation","IfcAnnotationFillArea","IfcApplication","IfcAppliedValue","IfcApproval","IfcApprovalRelationship","IfcArbitraryClosedProfileDef","IfcArbitraryOpenProfileDef","IfcArbitraryProfileDefWithVoids","IfcAsset","IfcAsymmetricIShapeProfileDef","IfcAudioVisualAppliance","IfcAudioVisualApplianceType","IfcAxis1Placement","IfcAxis2Placement2D","IfcAxis2Placement3D","IfcBSplineCurve","IfcBSplineCurveWithKnots","IfcBSplineSurface","IfcBSplineSurfaceWithKnots","IfcBeam","IfcBeamStandardCase","IfcBeamType","IfcBearing","IfcBearingType","IfcBlobTexture","IfcBlock","IfcBoiler","IfcBoilerType","IfcBooleanClippingResult","IfcBooleanResult","IfcBoundaryCondition","IfcBoundaryCurve","IfcBoundaryEdgeCondition","IfcBoundaryFaceCondition","IfcBoundaryNodeCondition","IfcBoundaryNodeConditionWarping","IfcBoundedCurve","IfcBoundedSurface","IfcBoundingBox","IfcBoxedHalfSpace","IfcBridge","IfcBridgePart","IfcBuilding","IfcBuildingElement","IfcBuildingElementPart","IfcBuildingElementPartType","IfcBuildingElementProxy","IfcBuildingElementProxyType","IfcBuildingElementType","IfcBuildingStorey","IfcBuildingSystem","IfcBurner","IfcBurnerType","IfcCShapeProfileDef","IfcCableCarrierFitting","IfcCableCarrierFittingType","IfcCableCarrierSegment","IfcCableCarrierSegmentType","IfcCableFitting","IfcCableFittingType","IfcCableSegment","IfcCableSegmentType","IfcCaissonFoundation","IfcCaissonFoundationType","IfcCartesianPoint","IfcCartesianPointList","IfcCartesianPointList2D","IfcCartesianPointList3D","IfcCartesianTransformationOperator","IfcCartesianTransformationOperator2D","IfcCartesianTransformationOperator2DnonUniform","IfcCartesianTransformationOperator3D","IfcCartesianTransformationOperator3DnonUniform","IfcCenterLineProfileDef","IfcChiller","IfcChillerType","IfcChimney","IfcChimneyType","IfcCircle","IfcCircleHollowProfileDef","IfcCircleProfileDef","IfcCircularArcSegment2D","IfcCivilElement","IfcCivilElementType","IfcClassification","IfcClassificationReference","IfcClosedShell","IfcCoil","IfcCoilType","IfcColourRgb","IfcColourRgbList","IfcColourSpecification","IfcColumn","IfcColumnStandardCase","IfcColumnType","IfcCommunicationsAppliance","IfcCommunicationsApplianceType","IfcComplexProperty","IfcComplexPropertyTemplate","IfcCompositeCurve","IfcCompositeCurveOnSurface","IfcCompositeCurveSegment","IfcCompositeProfileDef","IfcCompressor","IfcCompressorType","IfcCondenser","IfcCondenserType","IfcConic","IfcConnectedFaceSet","IfcConnectionCurveGeometry","IfcConnectionGeometry","IfcConnectionPointEccentricity","IfcConnectionPointGeometry","IfcConnectionSurfaceGeometry","IfcConnectionVolumeGeometry","IfcConstraint","IfcConstructionEquipmentResource","IfcConstructionEquipmentResourceType","IfcConstructionMaterialResource","IfcConstructionMaterialResourceType","IfcConstructionProductResource","IfcConstructionProductResourceType","IfcConstructionResource","IfcConstructionResourceType","IfcContext","IfcContextDependentUnit","IfcControl","IfcController","IfcControllerType","IfcConversionBasedUnit","IfcConversionBasedUnitWithOffset","IfcCooledBeam","IfcCooledBeamType","IfcCoolingTower","IfcCoolingTowerType","IfcCoordinateOperation","IfcCoordinateReferenceSystem","IfcCostItem","IfcCostSchedule","IfcCostValue","IfcCovering","IfcCoveringType","IfcCrewResource","IfcCrewResourceType","IfcCsgPrimitive3D","IfcCsgSolid","IfcCurrencyRelationship","IfcCurtainWall","IfcCurtainWallType","IfcCurve","IfcCurveBoundedPlane","IfcCurveBoundedSurface","IfcCurveSegment2D","IfcCurveStyle","IfcCurveStyleFont","IfcCurveStyleFontAndScaling","IfcCurveStyleFontPattern","IfcCylindricalSurface","IfcDamper","IfcDamperType","IfcDeepFoundation","IfcDeepFoundationType","IfcDerivedProfileDef","IfcDerivedUnit","IfcDerivedUnitElement","IfcDimensionalExponents","IfcDirection","IfcDiscreteAccessory","IfcDiscreteAccessoryType","IfcDistanceExpression","IfcDistributionChamberElement","IfcDistributionChamberElementType","IfcDistributionCircuit","IfcDistributionControlElement","IfcDistributionControlElementType","IfcDistributionElement","IfcDistributionElementType","IfcDistributionFlowElement","IfcDistributionFlowElementType","IfcDistributionPort","IfcDistributionSystem","IfcDocumentInformation","IfcDocumentInformationRelationship","IfcDocumentReference","IfcDoor","IfcDoorLiningProperties","IfcDoorPanelProperties","IfcDoorStandardCase","IfcDoorStyle","IfcDoorType","IfcDraughtingPreDefinedColour","IfcDraughtingPreDefinedCurveFont","IfcDuctFitting","IfcDuctFittingType","IfcDuctSegment","IfcDuctSegmentType","IfcDuctSilencer","IfcDuctSilencerType","IfcEdge","IfcEdgeCurve","IfcEdgeLoop","IfcElectricAppliance","IfcElectricApplianceType","IfcElectricDistributionBoard","IfcElectricDistributionBoardType","IfcElectricFlowStorageDevice","IfcElectricFlowStorageDeviceType","IfcElectricGenerator","IfcElectricGeneratorType","IfcElectricMotor","IfcElectricMotorType","IfcElectricTimeControl","IfcElectricTimeControlType","IfcElement","IfcElementAssembly","IfcElementAssemblyType","IfcElementComponent","IfcElementComponentType","IfcElementQuantity","IfcElementType","IfcElementarySurface","IfcEllipse","IfcEllipseProfileDef","IfcEnergyConversionDevice","IfcEnergyConversionDeviceType","IfcEngine","IfcEngineType","IfcEvaporativeCooler","IfcEvaporativeCoolerType","IfcEvaporator","IfcEvaporatorType","IfcEvent","IfcEventTime","IfcEventType","IfcExtendedProperties","IfcExternalInformation","IfcExternalReference","IfcExternalReferenceRelationship","IfcExternalSpatialElement","IfcExternalSpatialStructureElement","IfcExternallyDefinedHatchStyle","IfcExternallyDefinedSurfaceStyle","IfcExternallyDefinedTextFont","IfcExtrudedAreaSolid","IfcExtrudedAreaSolidTapered","IfcFace","IfcFaceBasedSurfaceModel","IfcFaceBound","IfcFaceOuterBound","IfcFaceSurface","IfcFacetedBrep","IfcFacetedBrepWithVoids","IfcFacility","IfcFacilityPart","IfcFailureConnectionCondition","IfcFan","IfcFanType","IfcFastener","IfcFastenerType","IfcFeatureElement","IfcFeatureElementAddition","IfcFeatureElementSubtraction","IfcFillAreaStyle","IfcFillAreaStyleHatching","IfcFillAreaStyleTiles","IfcFilter","IfcFilterType","IfcFireSuppressionTerminal","IfcFireSuppressionTerminalType","IfcFixedReferenceSweptAreaSolid","IfcFlowController","IfcFlowControllerType","IfcFlowFitting","IfcFlowFittingType","IfcFlowInstrument","IfcFlowInstrumentType","IfcFlowMeter","IfcFlowMeterType","IfcFlowMovingDevice","IfcFlowMovingDeviceType","IfcFlowSegment","IfcFlowSegmentType","IfcFlowStorageDevice","IfcFlowStorageDeviceType","IfcFlowTerminal","IfcFlowTerminalType","IfcFlowTreatmentDevice","IfcFlowTreatmentDeviceType","IfcFooting","IfcFootingType","IfcFurnishingElement","IfcFurnishingElementType","IfcFurniture","IfcFurnitureType","IfcGeographicElement","IfcGeographicElementType","IfcGeometricCurveSet","IfcGeometricRepresentationContext","IfcGeometricRepresentationItem","IfcGeometricRepresentationSubContext","IfcGeometricSet","IfcGrid","IfcGridAxis","IfcGridPlacement","IfcGroup","IfcHalfSpaceSolid","IfcHeatExchanger","IfcHeatExchangerType","IfcHumidifier","IfcHumidifierType","IfcIShapeProfileDef","IfcImageTexture","IfcIndexedColourMap","IfcIndexedPolyCurve","IfcIndexedPolygonalFace","IfcIndexedPolygonalFaceWithVoids","IfcIndexedTextureMap","IfcIndexedTriangleTextureMap","IfcInterceptor","IfcInterceptorType","IfcIntersectionCurve","IfcInventory","IfcIrregularTimeSeries","IfcIrregularTimeSeriesValue","IfcJunctionBox","IfcJunctionBoxType","IfcLShapeProfileDef","IfcLaborResource","IfcLaborResourceType","IfcLagTime","IfcLamp","IfcLampType","IfcLibraryInformation","IfcLibraryReference","IfcLightDistributionData","IfcLightFixture","IfcLightFixtureType","IfcLightIntensityDistribution","IfcLightSource","IfcLightSourceAmbient","IfcLightSourceDirectional","IfcLightSourceGoniometric","IfcLightSourcePositional","IfcLightSourceSpot","IfcLine","IfcLineSegment2D","IfcLinearPlacement","IfcLinearPositioningElement","IfcLocalPlacement","IfcLoop","IfcManifoldSolidBrep","IfcMapConversion","IfcMappedItem","IfcMaterial","IfcMaterialClassificationRelationship","IfcMaterialConstituent","IfcMaterialConstituentSet","IfcMaterialDefinition","IfcMaterialDefinitionRepresentation","IfcMaterialLayer","IfcMaterialLayerSet","IfcMaterialLayerSetUsage","IfcMaterialLayerWithOffsets","IfcMaterialList","IfcMaterialProfile","IfcMaterialProfileSet","IfcMaterialProfileSetUsage","IfcMaterialProfileSetUsageTapering","IfcMaterialProfileWithOffsets","IfcMaterialProperties","IfcMaterialRelationship","IfcMaterialUsageDefinition","IfcMeasureWithUnit","IfcMechanicalFastener","IfcMechanicalFastenerType","IfcMedicalDevice","IfcMedicalDeviceType","IfcMember","IfcMemberStandardCase","IfcMemberType","IfcMetric","IfcMirroredProfileDef","IfcMonetaryUnit","IfcMotorConnection","IfcMotorConnectionType","IfcNamedUnit","IfcObject","IfcObjectDefinition","IfcObjectPlacement","IfcObjective","IfcOccupant","IfcOffsetCurve","IfcOffsetCurve2D","IfcOffsetCurve3D","IfcOffsetCurveByDistances","IfcOpenShell","IfcOpeningElement","IfcOpeningStandardCase","IfcOrganization","IfcOrganizationRelationship","IfcOrientationExpression","IfcOrientedEdge","IfcOuterBoundaryCurve","IfcOutlet","IfcOutletType","IfcOwnerHistory","IfcParameterizedProfileDef","IfcPath","IfcPcurve","IfcPerformanceHistory","IfcPermeableCoveringProperties","IfcPermit","IfcPerson","IfcPersonAndOrganization","IfcPhysicalComplexQuantity","IfcPhysicalQuantity","IfcPhysicalSimpleQuantity","IfcPile","IfcPileType","IfcPipeFitting","IfcPipeFittingType","IfcPipeSegment","IfcPipeSegmentType","IfcPixelTexture","IfcPlacement","IfcPlanarBox","IfcPlanarExtent","IfcPlane","IfcPlate","IfcPlateStandardCase","IfcPlateType","IfcPoint","IfcPointOnCurve","IfcPointOnSurface","IfcPolyLoop","IfcPolygonalBoundedHalfSpace","IfcPolygonalFaceSet","IfcPolyline","IfcPort","IfcPositioningElement","IfcPostalAddress","IfcPreDefinedColour","IfcPreDefinedCurveFont","IfcPreDefinedItem","IfcPreDefinedProperties","IfcPreDefinedPropertySet","IfcPreDefinedTextFont","IfcPresentationItem","IfcPresentationLayerAssignment","IfcPresentationLayerWithStyle","IfcPresentationStyle","IfcPresentationStyleAssignment","IfcProcedure","IfcProcedureType","IfcProcess","IfcProduct","IfcProductDefinitionShape","IfcProductRepresentation","IfcProfileDef","IfcProfileProperties","IfcProject","IfcProjectLibrary","IfcProjectOrder","IfcProjectedCRS","IfcProjectionElement","IfcProperty","IfcPropertyAbstraction","IfcPropertyBoundedValue","IfcPropertyDefinition","IfcPropertyDependencyRelationship","IfcPropertyEnumeratedValue","IfcPropertyEnumeration","IfcPropertyListValue","IfcPropertyReferenceValue","IfcPropertySet","IfcPropertySetDefinition","IfcPropertySetTemplate","IfcPropertySingleValue","IfcPropertyTableValue","IfcPropertyTemplate","IfcPropertyTemplateDefinition","IfcProtectiveDevice","IfcProtectiveDeviceTrippingUnit","IfcProtectiveDeviceTrippingUnitType","IfcProtectiveDeviceType","IfcProxy","IfcPump","IfcPumpType","IfcQuantityArea","IfcQuantityCount","IfcQuantityLength","IfcQuantitySet","IfcQuantityTime","IfcQuantityVolume","IfcQuantityWeight","IfcRailing","IfcRailingType","IfcRamp","IfcRampFlight","IfcRampFlightType","IfcRampType","IfcRationalBSplineCurveWithKnots","IfcRationalBSplineSurfaceWithKnots","IfcRectangleHollowProfileDef","IfcRectangleProfileDef","IfcRectangularPyramid","IfcRectangularTrimmedSurface","IfcRecurrencePattern","IfcReference","IfcReferent","IfcRegularTimeSeries","IfcReinforcementBarProperties","IfcReinforcementDefinitionProperties","IfcReinforcingBar","IfcReinforcingBarType","IfcReinforcingElement","IfcReinforcingElementType","IfcReinforcingMesh","IfcReinforcingMeshType","IfcRelAggregates","IfcRelAssigns","IfcRelAssignsToActor","IfcRelAssignsToControl","IfcRelAssignsToGroup","IfcRelAssignsToGroupByFactor","IfcRelAssignsToProcess","IfcRelAssignsToProduct","IfcRelAssignsToResource","IfcRelAssociates","IfcRelAssociatesApproval","IfcRelAssociatesClassification","IfcRelAssociatesConstraint","IfcRelAssociatesDocument","IfcRelAssociatesLibrary","IfcRelAssociatesMaterial","IfcRelConnects","IfcRelConnectsElements","IfcRelConnectsPathElements","IfcRelConnectsPortToElement","IfcRelConnectsPorts","IfcRelConnectsStructuralActivity","IfcRelConnectsStructuralMember","IfcRelConnectsWithEccentricity","IfcRelConnectsWithRealizingElements","IfcRelContainedInSpatialStructure","IfcRelCoversBldgElements","IfcRelCoversSpaces","IfcRelDeclares","IfcRelDecomposes","IfcRelDefines","IfcRelDefinesByObject","IfcRelDefinesByProperties","IfcRelDefinesByTemplate","IfcRelDefinesByType","IfcRelFillsElement","IfcRelFlowControlElements","IfcRelInterferesElements","IfcRelNests","IfcRelPositions","IfcRelProjectsElement","IfcRelReferencedInSpatialStructure","IfcRelSequence","IfcRelServicesBuildings","IfcRelSpaceBoundary","IfcRelSpaceBoundary1stLevel","IfcRelSpaceBoundary2ndLevel","IfcRelVoidsElement","IfcRelationship","IfcReparametrisedCompositeCurveSegment","IfcRepresentation","IfcRepresentationContext","IfcRepresentationItem","IfcRepresentationMap","IfcResource","IfcResourceApprovalRelationship","IfcResourceConstraintRelationship","IfcResourceLevelRelationship","IfcResourceTime","IfcRevolvedAreaSolid","IfcRevolvedAreaSolidTapered","IfcRightCircularCone","IfcRightCircularCylinder","IfcRoof","IfcRoofType","IfcRoot","IfcRoundedRectangleProfileDef","IfcSIUnit","IfcSanitaryTerminal","IfcSanitaryTerminalType","IfcSchedulingTime","IfcSeamCurve","IfcSectionProperties","IfcSectionReinforcementProperties","IfcSectionedSolid","IfcSectionedSolidHorizontal","IfcSectionedSpine","IfcSensor","IfcSensorType","IfcShadingDevice","IfcShadingDeviceType","IfcShapeAspect","IfcShapeModel","IfcShapeRepresentation","IfcShellBasedSurfaceModel","IfcSimpleProperty","IfcSimplePropertyTemplate","IfcSite","IfcSlab","IfcSlabElementedCase","IfcSlabStandardCase","IfcSlabType","IfcSlippageConnectionCondition","IfcSolarDevice","IfcSolarDeviceType","IfcSolidModel","IfcSpace","IfcSpaceHeater","IfcSpaceHeaterType","IfcSpaceType","IfcSpatialElement","IfcSpatialElementType","IfcSpatialStructureElement","IfcSpatialStructureElementType","IfcSpatialZone","IfcSpatialZoneType","IfcSphere","IfcSphericalSurface","IfcStackTerminal","IfcStackTerminalType","IfcStair","IfcStairFlight","IfcStairFlightType","IfcStairType","IfcStructuralAction","IfcStructuralActivity","IfcStructuralAnalysisModel","IfcStructuralConnection","IfcStructuralConnectionCondition","IfcStructuralCurveAction","IfcStructuralCurveConnection","IfcStructuralCurveMember","IfcStructuralCurveMemberVarying","IfcStructuralCurveReaction","IfcStructuralItem","IfcStructuralLinearAction","IfcStructuralLoad","IfcStructuralLoadCase","IfcStructuralLoadConfiguration","IfcStructuralLoadGroup","IfcStructuralLoadLinearForce","IfcStructuralLoadOrResult","IfcStructuralLoadPlanarForce","IfcStructuralLoadSingleDisplacement","IfcStructuralLoadSingleDisplacementDistortion","IfcStructuralLoadSingleForce","IfcStructuralLoadSingleForceWarping","IfcStructuralLoadStatic","IfcStructuralLoadTemperature","IfcStructuralMember","IfcStructuralPlanarAction","IfcStructuralPointAction","IfcStructuralPointConnection","IfcStructuralPointReaction","IfcStructuralReaction","IfcStructuralResultGroup","IfcStructuralSurfaceAction","IfcStructuralSurfaceConnection","IfcStructuralSurfaceMember","IfcStructuralSurfaceMemberVarying","IfcStructuralSurfaceReaction","IfcStyleModel","IfcStyledItem","IfcStyledRepresentation","IfcSubContractResource","IfcSubContractResourceType","IfcSubedge","IfcSurface","IfcSurfaceCurve","IfcSurfaceCurveSweptAreaSolid","IfcSurfaceFeature","IfcSurfaceOfLinearExtrusion","IfcSurfaceOfRevolution","IfcSurfaceReinforcementArea","IfcSurfaceStyle","IfcSurfaceStyleLighting","IfcSurfaceStyleRefraction","IfcSurfaceStyleRendering","IfcSurfaceStyleShading","IfcSurfaceStyleWithTextures","IfcSurfaceTexture","IfcSweptAreaSolid","IfcSweptDiskSolid","IfcSweptDiskSolidPolygonal","IfcSweptSurface","IfcSwitchingDevice","IfcSwitchingDeviceType","IfcSystem","IfcSystemFurnitureElement","IfcSystemFurnitureElementType","IfcTShapeProfileDef","IfcTable","IfcTableColumn","IfcTableRow","IfcTank","IfcTankType","IfcTask","IfcTaskTime","IfcTaskTimeRecurring","IfcTaskType","IfcTelecomAddress","IfcTendon","IfcTendonAnchor","IfcTendonAnchorType","IfcTendonConduit","IfcTendonConduitType","IfcTendonType","IfcTessellatedFaceSet","IfcTessellatedItem","IfcTextLiteral","IfcTextLiteralWithExtent","IfcTextStyle","IfcTextStyleFontModel","IfcTextStyleForDefinedFont","IfcTextStyleTextModel","IfcTextureCoordinate","IfcTextureCoordinateGenerator","IfcTextureMap","IfcTextureVertex","IfcTextureVertexList","IfcTimePeriod","IfcTimeSeries","IfcTimeSeriesValue","IfcTopologicalRepresentationItem","IfcTopologyRepresentation","IfcToroidalSurface","IfcTransformer","IfcTransformerType","IfcTransitionCurveSegment2D","IfcTransportElement","IfcTransportElementType","IfcTrapeziumProfileDef","IfcTriangulatedFaceSet","IfcTriangulatedIrregularNetwork","IfcTrimmedCurve","IfcTubeBundle","IfcTubeBundleType","IfcTypeObject","IfcTypeProcess","IfcTypeProduct","IfcTypeResource","IfcUShapeProfileDef","IfcUnitAssignment","IfcUnitaryControlElement","IfcUnitaryControlElementType","IfcUnitaryEquipment","IfcUnitaryEquipmentType","IfcValve","IfcValveType","IfcVector","IfcVertex","IfcVertexLoop","IfcVertexPoint","IfcVibrationDamper","IfcVibrationDamperType","IfcVibrationIsolator","IfcVibrationIsolatorType","IfcVirtualElement","IfcVirtualGridIntersection","IfcVoidingFeature","IfcWall","IfcWallElementedCase","IfcWallStandardCase","IfcWallType","IfcWasteTerminal","IfcWasteTerminalType","IfcWindow","IfcWindowLiningProperties","IfcWindowPanelProperties","IfcWindowStandardCase","IfcWindowStyle","IfcWindowType","IfcWorkCalendar","IfcWorkControl","IfcWorkPlan","IfcWorkSchedule","IfcWorkTime","IfcZShapeProfileDef","IfcZone","Handle","Value","IfcAbsorbedDoseMeasure","IfcAccelerationMeasure","IfcAmountOfSubstanceMeasure","IfcAngularVelocityMeasure","IfcAreaDensityMeasure","IfcAreaMeasure","IfcBinary","IfcBoolean","IfcBoxAlignment","IfcCardinalPointReference","IfcContextDependentMeasure","IfcCountMeasure","IfcCurvatureMeasure","IfcDate","IfcDateTime","IfcDayInMonthNumber","IfcDayInWeekNumber","IfcDescriptiveMeasure","IfcDimensionCount","IfcDoseEquivalentMeasure","IfcDuration","IfcDynamicViscosityMeasure","IfcElectricCapacitanceMeasure","IfcElectricChargeMeasure","IfcElectricConductanceMeasure","IfcElectricCurrentMeasure","IfcElectricResistanceMeasure","IfcElectricVoltageMeasure","IfcEnergyMeasure","IfcFontStyle","IfcFontVariant","IfcFontWeight","IfcForceMeasure","IfcFrequencyMeasure","IfcGloballyUniqueId","IfcHeatFluxDensityMeasure","IfcHeatingValueMeasure","IfcIdentifier","IfcIlluminanceMeasure","IfcInductanceMeasure","IfcInteger","IfcIntegerCountRateMeasure","IfcIonConcentrationMeasure","IfcIsothermalMoistureCapacityMeasure","IfcKinematicViscosityMeasure","IfcLabel","IfcLanguageId","IfcLengthMeasure","IfcLinearForceMeasure","IfcLinearMomentMeasure","IfcLinearStiffnessMeasure","IfcLinearVelocityMeasure","IfcLogical","IfcLuminousFluxMeasure","IfcLuminousIntensityDistributionMeasure","IfcLuminousIntensityMeasure","IfcMagneticFluxDensityMeasure","IfcMagneticFluxMeasure","IfcMassDensityMeasure","IfcMassFlowRateMeasure","IfcMassMeasure","IfcMassPerLengthMeasure","IfcModulusOfElasticityMeasure","IfcModulusOfLinearSubgradeReactionMeasure","IfcModulusOfRotationalSubgradeReactionMeasure","IfcModulusOfSubgradeReactionMeasure","IfcMoistureDiffusivityMeasure","IfcMolecularWeightMeasure","IfcMomentOfInertiaMeasure","IfcMonetaryMeasure","IfcMonthInYearNumber","IfcNonNegativeLengthMeasure","IfcNormalisedRatioMeasure","IfcNumericMeasure","IfcPHMeasure","IfcParameterValue","IfcPlanarForceMeasure","IfcPlaneAngleMeasure","IfcPositiveInteger","IfcPositiveLengthMeasure","IfcPositivePlaneAngleMeasure","IfcPositiveRatioMeasure","IfcPowerMeasure","IfcPresentableText","IfcPressureMeasure","IfcRadioActivityMeasure","IfcRatioMeasure","IfcReal","IfcRotationalFrequencyMeasure","IfcRotationalMassMeasure","IfcRotationalStiffnessMeasure","IfcSectionModulusMeasure","IfcSectionalAreaIntegralMeasure","IfcShearModulusMeasure","IfcSolidAngleMeasure","IfcSoundPowerLevelMeasure","IfcSoundPowerMeasure","IfcSoundPressureLevelMeasure","IfcSoundPressureMeasure","IfcSpecificHeatCapacityMeasure","IfcSpecularExponent","IfcSpecularRoughness","IfcTemperatureGradientMeasure","IfcTemperatureRateOfChangeMeasure","IfcText","IfcTextAlignment","IfcTextDecoration","IfcTextFontName","IfcTextTransformation","IfcThermalAdmittanceMeasure","IfcThermalConductivityMeasure","IfcThermalExpansionCoefficientMeasure","IfcThermalResistanceMeasure","IfcThermalTransmittanceMeasure","IfcThermodynamicTemperatureMeasure","IfcTime","IfcTimeMeasure","IfcTimeStamp","IfcTorqueMeasure","IfcURIReference","IfcVaporPermeabilityMeasure","IfcVolumeMeasure","IfcVolumetricFlowRateMeasure","IfcWarpingConstantMeasure","IfcWarpingMomentMeasure","IfcActionRequestTypeEnum","EMAIL","FAX","PHONE","POST","VERBAL","USERDEFINED","NOTDEFINED","IfcActionSourceTypeEnum","DEAD_LOAD_G","COMPLETION_G1","LIVE_LOAD_Q","SNOW_S","WIND_W","PRESTRESSING_P","SETTLEMENT_U","TEMPERATURE_T","EARTHQUAKE_E","FIRE","IMPULSE","IMPACT","TRANSPORT","ERECTION","PROPPING","SYSTEM_IMPERFECTION","SHRINKAGE","CREEP","LACK_OF_FIT","BUOYANCY","ICE","CURRENT","WAVE","RAIN","BRAKES","IfcActionTypeEnum","PERMANENT_G","VARIABLE_Q","EXTRAORDINARY_A","IfcActuatorTypeEnum","ELECTRICACTUATOR","HANDOPERATEDACTUATOR","HYDRAULICACTUATOR","PNEUMATICACTUATOR","THERMOSTATICACTUATOR","IfcAddressTypeEnum","OFFICE","SITE","HOME","DISTRIBUTIONPOINT","IfcAirTerminalBoxTypeEnum","CONSTANTFLOW","VARIABLEFLOWPRESSUREDEPENDANT","VARIABLEFLOWPRESSUREINDEPENDANT","IfcAirTerminalTypeEnum","DIFFUSER","GRILLE","LOUVRE","REGISTER","IfcAirToAirHeatRecoveryTypeEnum","FIXEDPLATECOUNTERFLOWEXCHANGER","FIXEDPLATECROSSFLOWEXCHANGER","FIXEDPLATEPARALLELFLOWEXCHANGER","ROTARYWHEEL","RUNAROUNDCOILLOOP","HEATPIPE","TWINTOWERENTHALPYRECOVERYLOOPS","THERMOSIPHONSEALEDTUBEHEATEXCHANGERS","THERMOSIPHONCOILTYPEHEATEXCHANGERS","IfcAlarmTypeEnum","BELL","BREAKGLASSBUTTON","LIGHT","MANUALPULLBOX","SIREN","WHISTLE","IfcAlignmentTypeEnum","IfcAnalysisModelTypeEnum","IN_PLANE_LOADING_2D","OUT_PLANE_LOADING_2D","LOADING_3D","IfcAnalysisTheoryTypeEnum","FIRST_ORDER_THEORY","SECOND_ORDER_THEORY","THIRD_ORDER_THEORY","FULL_NONLINEAR_THEORY","IfcArithmeticOperatorEnum","ADD","DIVIDE","MULTIPLY","SUBTRACT","IfcAssemblyPlaceEnum","FACTORY","IfcAudioVisualApplianceTypeEnum","AMPLIFIER","CAMERA","DISPLAY","MICROPHONE","PLAYER","PROJECTOR","RECEIVER","SPEAKER","SWITCHER","TELEPHONE","TUNER","IfcBSplineCurveForm","POLYLINE_FORM","CIRCULAR_ARC","ELLIPTIC_ARC","PARABOLIC_ARC","HYPERBOLIC_ARC","UNSPECIFIED","IfcBSplineSurfaceForm","PLANE_SURF","CYLINDRICAL_SURF","CONICAL_SURF","SPHERICAL_SURF","TOROIDAL_SURF","SURF_OF_REVOLUTION","RULED_SURF","GENERALISED_CONE","QUADRIC_SURF","SURF_OF_LINEAR_EXTRUSION","IfcBeamTypeEnum","BEAM","JOIST","HOLLOWCORE","LINTEL","SPANDREL","T_BEAM","GIRDER_SEGMENT","DIAPHRAGM","PIERCAP","HATSTONE","CORNICE","EDGEBEAM","IfcBearingTypeDisplacementEnum","FIXED_MOVEMENT","GUIDED_LONGITUDINAL","GUIDED_TRANSVERSAL","FREE_MOVEMENT","IfcBearingTypeEnum","CYLINDRICAL","SPHERICAL","ELASTOMERIC","POT","GUIDE","ROCKER","ROLLER","DISK","IfcBenchmarkEnum","GREATERTHAN","GREATERTHANOREQUALTO","LESSTHAN","LESSTHANOREQUALTO","EQUALTO","NOTEQUALTO","INCLUDES","NOTINCLUDES","INCLUDEDIN","NOTINCLUDEDIN","IfcBoilerTypeEnum","WATER","STEAM","IfcBooleanOperator","UNION","INTERSECTION","DIFFERENCE","IfcBridgePartTypeEnum","ABUTMENT","DECK","DECK_SEGMENT","FOUNDATION","PIER","PIER_SEGMENT","PYLON","SUBSTRUCTURE","SUPERSTRUCTURE","SURFACESTRUCTURE","IfcBridgeTypeEnum","ARCHED","CABLE_STAYED","CANTILEVER","CULVERT","FRAMEWORK","GIRDER","SUSPENSION","TRUSS","IfcBuildingElementPartTypeEnum","INSULATION","PRECASTPANEL","APRON","IfcBuildingElementProxyTypeEnum","COMPLEX","ELEMENT","PARTIAL","PROVISIONFORVOID","PROVISIONFORSPACE","IfcBuildingSystemTypeEnum","FENESTRATION","LOADBEARING","OUTERSHELL","SHADING","REINFORCING","PRESTRESSING","IfcBurnerTypeEnum","IfcCableCarrierFittingTypeEnum","BEND","CROSS","REDUCER","TEE","IfcCableCarrierSegmentTypeEnum","CABLELADDERSEGMENT","CABLETRAYSEGMENT","CABLETRUNKINGSEGMENT","CONDUITSEGMENT","IfcCableFittingTypeEnum","CONNECTOR","ENTRY","EXIT","JUNCTION","TRANSITION","IfcCableSegmentTypeEnum","BUSBARSEGMENT","CABLESEGMENT","CONDUCTORSEGMENT","CORESEGMENT","IfcCaissonFoundationTypeEnum","WELL","CAISSON","IfcChangeActionEnum","NOCHANGE","MODIFIED","ADDED","DELETED","IfcChillerTypeEnum","AIRCOOLED","WATERCOOLED","HEATRECOVERY","IfcChimneyTypeEnum","IfcCoilTypeEnum","DXCOOLINGCOIL","ELECTRICHEATINGCOIL","GASHEATINGCOIL","HYDRONICCOIL","STEAMHEATINGCOIL","WATERCOOLINGCOIL","WATERHEATINGCOIL","IfcColumnTypeEnum","COLUMN","PILASTER","PIERSTEM","PIERSTEM_SEGMENT","STANDCOLUMN","IfcCommunicationsApplianceTypeEnum","ANTENNA","COMPUTER","GATEWAY","MODEM","NETWORKAPPLIANCE","NETWORKBRIDGE","NETWORKHUB","PRINTER","REPEATER","ROUTER","SCANNER","IfcComplexPropertyTemplateTypeEnum","P_COMPLEX","Q_COMPLEX","IfcCompressorTypeEnum","DYNAMIC","RECIPROCATING","ROTARY","SCROLL","TROCHOIDAL","SINGLESTAGE","BOOSTER","OPENTYPE","HERMETIC","SEMIHERMETIC","WELDEDSHELLHERMETIC","ROLLINGPISTON","ROTARYVANE","SINGLESCREW","TWINSCREW","IfcCondenserTypeEnum","EVAPORATIVECOOLED","WATERCOOLEDBRAZEDPLATE","WATERCOOLEDSHELLCOIL","WATERCOOLEDSHELLTUBE","WATERCOOLEDTUBEINTUBE","IfcConnectionTypeEnum","ATPATH","ATSTART","ATEND","IfcConstraintEnum","HARD","SOFT","ADVISORY","IfcConstructionEquipmentResourceTypeEnum","DEMOLISHING","EARTHMOVING","ERECTING","HEATING","LIGHTING","PAVING","PUMPING","TRANSPORTING","IfcConstructionMaterialResourceTypeEnum","AGGREGATES","CONCRETE","DRYWALL","FUEL","GYPSUM","MASONRY","METAL","PLASTIC","WOOD","IfcConstructionProductResourceTypeEnum","ASSEMBLY","FORMWORK","IfcControllerTypeEnum","FLOATING","PROGRAMMABLE","PROPORTIONAL","MULTIPOSITION","TWOPOSITION","IfcCooledBeamTypeEnum","ACTIVE","PASSIVE","IfcCoolingTowerTypeEnum","NATURALDRAFT","MECHANICALINDUCEDDRAFT","MECHANICALFORCEDDRAFT","IfcCostItemTypeEnum","IfcCostScheduleTypeEnum","BUDGET","COSTPLAN","ESTIMATE","TENDER","PRICEDBILLOFQUANTITIES","UNPRICEDBILLOFQUANTITIES","SCHEDULEOFRATES","IfcCoveringTypeEnum","CEILING","FLOORING","CLADDING","ROOFING","MOLDING","SKIRTINGBOARD","MEMBRANE","SLEEVING","WRAPPING","COPING","IfcCrewResourceTypeEnum","IfcCurtainWallTypeEnum","IfcCurveInterpolationEnum","LINEAR","LOG_LINEAR","LOG_LOG","IfcDamperTypeEnum","BACKDRAFTDAMPER","BALANCINGDAMPER","BLASTDAMPER","CONTROLDAMPER","FIREDAMPER","FIRESMOKEDAMPER","FUMEHOODEXHAUST","GRAVITYDAMPER","GRAVITYRELIEFDAMPER","RELIEFDAMPER","SMOKEDAMPER","IfcDataOriginEnum","MEASURED","PREDICTED","SIMULATED","IfcDerivedUnitEnum","ANGULARVELOCITYUNIT","AREADENSITYUNIT","COMPOUNDPLANEANGLEUNIT","DYNAMICVISCOSITYUNIT","HEATFLUXDENSITYUNIT","INTEGERCOUNTRATEUNIT","ISOTHERMALMOISTURECAPACITYUNIT","KINEMATICVISCOSITYUNIT","LINEARVELOCITYUNIT","MASSDENSITYUNIT","MASSFLOWRATEUNIT","MOISTUREDIFFUSIVITYUNIT","MOLECULARWEIGHTUNIT","SPECIFICHEATCAPACITYUNIT","THERMALADMITTANCEUNIT","THERMALCONDUCTANCEUNIT","THERMALRESISTANCEUNIT","THERMALTRANSMITTANCEUNIT","VAPORPERMEABILITYUNIT","VOLUMETRICFLOWRATEUNIT","ROTATIONALFREQUENCYUNIT","TORQUEUNIT","MOMENTOFINERTIAUNIT","LINEARMOMENTUNIT","LINEARFORCEUNIT","PLANARFORCEUNIT","MODULUSOFELASTICITYUNIT","SHEARMODULUSUNIT","LINEARSTIFFNESSUNIT","ROTATIONALSTIFFNESSUNIT","MODULUSOFSUBGRADEREACTIONUNIT","ACCELERATIONUNIT","CURVATUREUNIT","HEATINGVALUEUNIT","IONCONCENTRATIONUNIT","LUMINOUSINTENSITYDISTRIBUTIONUNIT","MASSPERLENGTHUNIT","MODULUSOFLINEARSUBGRADEREACTIONUNIT","MODULUSOFROTATIONALSUBGRADEREACTIONUNIT","PHUNIT","ROTATIONALMASSUNIT","SECTIONAREAINTEGRALUNIT","SECTIONMODULUSUNIT","SOUNDPOWERLEVELUNIT","SOUNDPOWERUNIT","SOUNDPRESSURELEVELUNIT","SOUNDPRESSUREUNIT","TEMPERATUREGRADIENTUNIT","TEMPERATURERATEOFCHANGEUNIT","THERMALEXPANSIONCOEFFICIENTUNIT","WARPINGCONSTANTUNIT","WARPINGMOMENTUNIT","IfcDirectionSenseEnum","POSITIVE","NEGATIVE","IfcDiscreteAccessoryTypeEnum","ANCHORPLATE","BRACKET","SHOE","EXPANSION_JOINT_DEVICE","IfcDistributionChamberElementTypeEnum","FORMEDDUCT","INSPECTIONCHAMBER","INSPECTIONPIT","MANHOLE","METERCHAMBER","SUMP","TRENCH","VALVECHAMBER","IfcDistributionPortTypeEnum","CABLE","CABLECARRIER","DUCT","PIPE","IfcDistributionSystemEnum","AIRCONDITIONING","AUDIOVISUAL","CHEMICAL","CHILLEDWATER","COMMUNICATION","COMPRESSEDAIR","CONDENSERWATER","CONTROL","CONVEYING","DATA","DISPOSAL","DOMESTICCOLDWATER","DOMESTICHOTWATER","DRAINAGE","EARTHING","ELECTRICAL","ELECTROACOUSTIC","EXHAUST","FIREPROTECTION","GAS","HAZARDOUS","LIGHTNINGPROTECTION","MUNICIPALSOLIDWASTE","OIL","OPERATIONAL","POWERGENERATION","RAINWATER","REFRIGERATION","SECURITY","SEWAGE","SIGNAL","STORMWATER","TV","VACUUM","VENT","VENTILATION","WASTEWATER","WATERSUPPLY","IfcDocumentConfidentialityEnum","PUBLIC","RESTRICTED","CONFIDENTIAL","PERSONAL","IfcDocumentStatusEnum","DRAFT","FINALDRAFT","FINAL","REVISION","IfcDoorPanelOperationEnum","SWINGING","DOUBLE_ACTING","SLIDING","FOLDING","REVOLVING","ROLLINGUP","FIXEDPANEL","IfcDoorPanelPositionEnum","LEFT","MIDDLE","RIGHT","IfcDoorStyleConstructionEnum","ALUMINIUM","HIGH_GRADE_STEEL","STEEL","ALUMINIUM_WOOD","ALUMINIUM_PLASTIC","IfcDoorStyleOperationEnum","SINGLE_SWING_LEFT","SINGLE_SWING_RIGHT","DOUBLE_DOOR_SINGLE_SWING","DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT","DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT","DOUBLE_SWING_LEFT","DOUBLE_SWING_RIGHT","DOUBLE_DOOR_DOUBLE_SWING","SLIDING_TO_LEFT","SLIDING_TO_RIGHT","DOUBLE_DOOR_SLIDING","FOLDING_TO_LEFT","FOLDING_TO_RIGHT","DOUBLE_DOOR_FOLDING","IfcDoorTypeEnum","DOOR","GATE","TRAPDOOR","IfcDoorTypeOperationEnum","SWING_FIXED_LEFT","SWING_FIXED_RIGHT","IfcDuctFittingTypeEnum","OBSTRUCTION","IfcDuctSegmentTypeEnum","RIGIDSEGMENT","FLEXIBLESEGMENT","IfcDuctSilencerTypeEnum","FLATOVAL","RECTANGULAR","ROUND","IfcElectricApplianceTypeEnum","DISHWASHER","ELECTRICCOOKER","FREESTANDINGELECTRICHEATER","FREESTANDINGFAN","FREESTANDINGWATERHEATER","FREESTANDINGWATERCOOLER","FREEZER","FRIDGE_FREEZER","HANDDRYER","KITCHENMACHINE","MICROWAVE","PHOTOCOPIER","REFRIGERATOR","TUMBLEDRYER","VENDINGMACHINE","WASHINGMACHINE","IfcElectricDistributionBoardTypeEnum","CONSUMERUNIT","DISTRIBUTIONBOARD","MOTORCONTROLCENTRE","SWITCHBOARD","IfcElectricFlowStorageDeviceTypeEnum","BATTERY","CAPACITORBANK","HARMONICFILTER","INDUCTORBANK","UPS","IfcElectricGeneratorTypeEnum","CHP","ENGINEGENERATOR","STANDALONE","IfcElectricMotorTypeEnum","DC","INDUCTION","POLYPHASE","RELUCTANCESYNCHRONOUS","SYNCHRONOUS","IfcElectricTimeControlTypeEnum","TIMECLOCK","TIMEDELAY","RELAY","IfcElementAssemblyTypeEnum","ACCESSORY_ASSEMBLY","ARCH","BEAM_GRID","BRACED_FRAME","REINFORCEMENT_UNIT","RIGID_FRAME","SLAB_FIELD","CROSS_BRACING","IfcElementCompositionEnum","IfcEngineTypeEnum","EXTERNALCOMBUSTION","INTERNALCOMBUSTION","IfcEvaporativeCoolerTypeEnum","DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER","DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER","DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER","DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER","DIRECTEVAPORATIVEAIRWASHER","INDIRECTEVAPORATIVEPACKAGEAIRCOOLER","INDIRECTEVAPORATIVEWETCOIL","INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER","INDIRECTDIRECTCOMBINATION","IfcEvaporatorTypeEnum","DIRECTEXPANSION","DIRECTEXPANSIONSHELLANDTUBE","DIRECTEXPANSIONTUBEINTUBE","DIRECTEXPANSIONBRAZEDPLATE","FLOODEDSHELLANDTUBE","SHELLANDCOIL","IfcEventTriggerTypeEnum","EVENTRULE","EVENTMESSAGE","EVENTTIME","EVENTCOMPLEX","IfcEventTypeEnum","STARTEVENT","ENDEVENT","INTERMEDIATEEVENT","IfcExternalSpatialElementTypeEnum","EXTERNAL","EXTERNAL_EARTH","EXTERNAL_WATER","EXTERNAL_FIRE","IfcFanTypeEnum","CENTRIFUGALFORWARDCURVED","CENTRIFUGALRADIAL","CENTRIFUGALBACKWARDINCLINEDCURVED","CENTRIFUGALAIRFOIL","TUBEAXIAL","VANEAXIAL","PROPELLORAXIAL","IfcFastenerTypeEnum","GLUE","MORTAR","WELD","IfcFilterTypeEnum","AIRPARTICLEFILTER","COMPRESSEDAIRFILTER","ODORFILTER","OILFILTER","STRAINER","WATERFILTER","IfcFireSuppressionTerminalTypeEnum","BREECHINGINLET","FIREHYDRANT","HOSEREEL","SPRINKLER","SPRINKLERDEFLECTOR","IfcFlowDirectionEnum","SOURCE","SINK","SOURCEANDSINK","IfcFlowInstrumentTypeEnum","PRESSUREGAUGE","THERMOMETER","AMMETER","FREQUENCYMETER","POWERFACTORMETER","PHASEANGLEMETER","VOLTMETER_PEAK","VOLTMETER_RMS","IfcFlowMeterTypeEnum","ENERGYMETER","GASMETER","OILMETER","WATERMETER","IfcFootingTypeEnum","CAISSON_FOUNDATION","FOOTING_BEAM","PAD_FOOTING","PILE_CAP","STRIP_FOOTING","IfcFurnitureTypeEnum","CHAIR","TABLE","DESK","BED","FILECABINET","SHELF","SOFA","IfcGeographicElementTypeEnum","TERRAIN","SOIL_BORING_POINT","IfcGeometricProjectionEnum","GRAPH_VIEW","SKETCH_VIEW","MODEL_VIEW","PLAN_VIEW","REFLECTED_PLAN_VIEW","SECTION_VIEW","ELEVATION_VIEW","IfcGlobalOrLocalEnum","GLOBAL_COORDS","LOCAL_COORDS","IfcGridTypeEnum","RADIAL","TRIANGULAR","IRREGULAR","IfcHeatExchangerTypeEnum","PLATE","SHELLANDTUBE","IfcHumidifierTypeEnum","STEAMINJECTION","ADIABATICAIRWASHER","ADIABATICPAN","ADIABATICWETTEDELEMENT","ADIABATICATOMIZING","ADIABATICULTRASONIC","ADIABATICRIGIDMEDIA","ADIABATICCOMPRESSEDAIRNOZZLE","ASSISTEDELECTRIC","ASSISTEDNATURALGAS","ASSISTEDPROPANE","ASSISTEDBUTANE","ASSISTEDSTEAM","IfcInterceptorTypeEnum","CYCLONIC","GREASE","PETROL","IfcInternalOrExternalEnum","INTERNAL","IfcInventoryTypeEnum","ASSETINVENTORY","SPACEINVENTORY","FURNITUREINVENTORY","IfcJunctionBoxTypeEnum","POWER","IfcKnotType","UNIFORM_KNOTS","QUASI_UNIFORM_KNOTS","PIECEWISE_BEZIER_KNOTS","IfcLaborResourceTypeEnum","ADMINISTRATION","CARPENTRY","CLEANING","ELECTRIC","FINISHING","GENERAL","HVAC","LANDSCAPING","PAINTING","PLUMBING","SITEGRADING","STEELWORK","SURVEYING","IfcLampTypeEnum","COMPACTFLUORESCENT","FLUORESCENT","HALOGEN","HIGHPRESSUREMERCURY","HIGHPRESSURESODIUM","LED","METALHALIDE","OLED","TUNGSTENFILAMENT","IfcLayerSetDirectionEnum","AXIS1","AXIS2","AXIS3","IfcLightDistributionCurveEnum","TYPE_A","TYPE_B","TYPE_C","IfcLightEmissionSourceEnum","LIGHTEMITTINGDIODE","LOWPRESSURESODIUM","LOWVOLTAGEHALOGEN","MAINVOLTAGEHALOGEN","IfcLightFixtureTypeEnum","POINTSOURCE","DIRECTIONSOURCE","SECURITYLIGHTING","IfcLoadGroupTypeEnum","LOAD_GROUP","LOAD_CASE","LOAD_COMBINATION","IfcLogicalOperatorEnum","LOGICALAND","LOGICALOR","LOGICALXOR","LOGICALNOTAND","LOGICALNOTOR","IfcMechanicalFastenerTypeEnum","ANCHORBOLT","BOLT","DOWEL","NAIL","NAILPLATE","RIVET","SCREW","SHEARCONNECTOR","STAPLE","STUDSHEARCONNECTOR","COUPLER","IfcMedicalDeviceTypeEnum","AIRSTATION","FEEDAIRUNIT","OXYGENGENERATOR","OXYGENPLANT","VACUUMSTATION","IfcMemberTypeEnum","BRACE","CHORD","COLLAR","MEMBER","MULLION","PURLIN","RAFTER","STRINGER","STRUT","STUD","STIFFENING_RIB","ARCH_SEGMENT","SUSPENSION_CABLE","SUSPENDER","STAY_CABLE","IfcMotorConnectionTypeEnum","BELTDRIVE","COUPLING","DIRECTDRIVE","IfcNullStyle","NULL","IfcObjectTypeEnum","PRODUCT","PROCESS","RESOURCE","ACTOR","GROUP","PROJECT","IfcObjectiveEnum","CODECOMPLIANCE","CODEWAIVER","DESIGNINTENT","HEALTHANDSAFETY","MERGECONFLICT","MODELVIEW","PARAMETER","REQUIREMENT","SPECIFICATION","TRIGGERCONDITION","IfcOccupantTypeEnum","ASSIGNEE","ASSIGNOR","LESSEE","LESSOR","LETTINGAGENT","OWNER","TENANT","IfcOpeningElementTypeEnum","OPENING","RECESS","IfcOutletTypeEnum","AUDIOVISUALOUTLET","COMMUNICATIONSOUTLET","POWEROUTLET","DATAOUTLET","TELEPHONEOUTLET","IfcPerformanceHistoryTypeEnum","IfcPermeableCoveringOperationEnum","GRILL","LOUVER","SCREEN","IfcPermitTypeEnum","ACCESS","BUILDING","WORK","IfcPhysicalOrVirtualEnum","PHYSICAL","VIRTUAL","IfcPileConstructionEnum","CAST_IN_PLACE","COMPOSITE","PRECAST_CONCRETE","PREFAB_STEEL","IfcPileTypeEnum","BORED","DRIVEN","JETGROUTING","COHESION","FRICTION","SUPPORT","IfcPipeFittingTypeEnum","IfcPipeSegmentTypeEnum","GUTTER","SPOOL","IfcPlateTypeEnum","CURTAIN_PANEL","SHEET","FLANGE_PLATE","WEB_PLATE","STIFFENER_PLATE","GUSSET_PLATE","COVER_PLATE","SPLICE_PLATE","BASE_PLATE","IfcPreferredSurfaceCurveRepresentation","CURVE3D","PCURVE_S1","PCURVE_S2","IfcProcedureTypeEnum","ADVICE_CAUTION","ADVICE_NOTE","ADVICE_WARNING","CALIBRATION","DIAGNOSTIC","SHUTDOWN","STARTUP","IfcProfileTypeEnum","CURVE","AREA","IfcProjectOrderTypeEnum","CHANGEORDER","MAINTENANCEWORKORDER","MOVEORDER","PURCHASEORDER","WORKORDER","IfcProjectedOrTrueLengthEnum","PROJECTED_LENGTH","TRUE_LENGTH","IfcProjectionElementTypeEnum","BLISTER","DEVIATOR","IfcPropertySetTemplateTypeEnum","PSET_TYPEDRIVENONLY","PSET_TYPEDRIVENOVERRIDE","PSET_OCCURRENCEDRIVEN","PSET_PERFORMANCEDRIVEN","QTO_TYPEDRIVENONLY","QTO_TYPEDRIVENOVERRIDE","QTO_OCCURRENCEDRIVEN","IfcProtectiveDeviceTrippingUnitTypeEnum","ELECTRONIC","ELECTROMAGNETIC","RESIDUALCURRENT","THERMAL","IfcProtectiveDeviceTypeEnum","CIRCUITBREAKER","EARTHLEAKAGECIRCUITBREAKER","EARTHINGSWITCH","FUSEDISCONNECTOR","RESIDUALCURRENTCIRCUITBREAKER","RESIDUALCURRENTSWITCH","VARISTOR","IfcPumpTypeEnum","CIRCULATOR","ENDSUCTION","SPLITCASE","SUBMERSIBLEPUMP","SUMPPUMP","VERTICALINLINE","VERTICALTURBINE","IfcRailingTypeEnum","HANDRAIL","GUARDRAIL","BALUSTRADE","IfcRampFlightTypeEnum","STRAIGHT","SPIRAL","IfcRampTypeEnum","STRAIGHT_RUN_RAMP","TWO_STRAIGHT_RUN_RAMP","QUARTER_TURN_RAMP","TWO_QUARTER_TURN_RAMP","HALF_TURN_RAMP","SPIRAL_RAMP","IfcRecurrenceTypeEnum","DAILY","WEEKLY","MONTHLY_BY_DAY_OF_MONTH","MONTHLY_BY_POSITION","BY_DAY_COUNT","BY_WEEKDAY_COUNT","YEARLY_BY_DAY_OF_MONTH","YEARLY_BY_POSITION","IfcReferentTypeEnum","KILOPOINT","MILEPOINT","STATION","IfcReflectanceMethodEnum","BLINN","FLAT","GLASS","MATT","MIRROR","PHONG","STRAUSS","IfcReinforcingBarRoleEnum","MAIN","SHEAR","LIGATURE","PUNCHING","EDGE","RING","ANCHORING","IfcReinforcingBarSurfaceEnum","PLAIN","TEXTURED","IfcReinforcingBarTypeEnum","SPACEBAR","IfcReinforcingMeshTypeEnum","IfcRoleEnum","SUPPLIER","MANUFACTURER","CONTRACTOR","SUBCONTRACTOR","ARCHITECT","STRUCTURALENGINEER","COSTENGINEER","CLIENT","BUILDINGOWNER","BUILDINGOPERATOR","MECHANICALENGINEER","ELECTRICALENGINEER","PROJECTMANAGER","FACILITIESMANAGER","CIVILENGINEER","COMMISSIONINGENGINEER","ENGINEER","CONSULTANT","CONSTRUCTIONMANAGER","FIELDCONSTRUCTIONMANAGER","RESELLER","IfcRoofTypeEnum","FLAT_ROOF","SHED_ROOF","GABLE_ROOF","HIP_ROOF","HIPPED_GABLE_ROOF","GAMBREL_ROOF","MANSARD_ROOF","BARREL_ROOF","RAINBOW_ROOF","BUTTERFLY_ROOF","PAVILION_ROOF","DOME_ROOF","FREEFORM","IfcSIPrefix","EXA","PETA","TERA","GIGA","MEGA","KILO","HECTO","DECA","DECI","CENTI","MILLI","MICRO","NANO","PICO","FEMTO","ATTO","IfcSIUnitName","AMPERE","BECQUEREL","CANDELA","COULOMB","CUBIC_METRE","DEGREE_CELSIUS","FARAD","GRAM","GRAY","HENRY","HERTZ","JOULE","KELVIN","LUMEN","LUX","METRE","MOLE","NEWTON","OHM","PASCAL","RADIAN","SECOND","SIEMENS","SIEVERT","SQUARE_METRE","STERADIAN","TESLA","VOLT","WATT","WEBER","IfcSanitaryTerminalTypeEnum","BATH","BIDET","CISTERN","SHOWER","SANITARYFOUNTAIN","TOILETPAN","URINAL","WASHHANDBASIN","WCSEAT","IfcSectionTypeEnum","UNIFORM","TAPERED","IfcSensorTypeEnum","COSENSOR","CO2SENSOR","CONDUCTANCESENSOR","CONTACTSENSOR","FIRESENSOR","FLOWSENSOR","FROSTSENSOR","GASSENSOR","HEATSENSOR","HUMIDITYSENSOR","IDENTIFIERSENSOR","IONCONCENTRATIONSENSOR","LEVELSENSOR","LIGHTSENSOR","MOISTURESENSOR","MOVEMENTSENSOR","PHSENSOR","PRESSURESENSOR","RADIATIONSENSOR","RADIOACTIVITYSENSOR","SMOKESENSOR","SOUNDSENSOR","TEMPERATURESENSOR","WINDSENSOR","IfcSequenceEnum","START_START","START_FINISH","FINISH_START","FINISH_FINISH","IfcShadingDeviceTypeEnum","JALOUSIE","SHUTTER","AWNING","IfcSimplePropertyTemplateTypeEnum","P_SINGLEVALUE","P_ENUMERATEDVALUE","P_BOUNDEDVALUE","P_LISTVALUE","P_TABLEVALUE","P_REFERENCEVALUE","Q_LENGTH","Q_AREA","Q_VOLUME","Q_COUNT","Q_WEIGHT","Q_TIME","IfcSlabTypeEnum","FLOOR","ROOF","LANDING","BASESLAB","APPROACH_SLAB","WEARING","SIDEWALK","IfcSolarDeviceTypeEnum","SOLARCOLLECTOR","SOLARPANEL","IfcSpaceHeaterTypeEnum","CONVECTOR","RADIATOR","IfcSpaceTypeEnum","SPACE","PARKING","GFA","IfcSpatialZoneTypeEnum","CONSTRUCTION","FIRESAFETY","OCCUPANCY","IfcStackTerminalTypeEnum","BIRDCAGE","COWL","RAINWATERHOPPER","IfcStairFlightTypeEnum","WINDER","CURVED","IfcStairTypeEnum","STRAIGHT_RUN_STAIR","TWO_STRAIGHT_RUN_STAIR","QUARTER_WINDING_STAIR","QUARTER_TURN_STAIR","HALF_WINDING_STAIR","HALF_TURN_STAIR","TWO_QUARTER_WINDING_STAIR","TWO_QUARTER_TURN_STAIR","THREE_QUARTER_WINDING_STAIR","THREE_QUARTER_TURN_STAIR","SPIRAL_STAIR","DOUBLE_RETURN_STAIR","CURVED_RUN_STAIR","TWO_CURVED_RUN_STAIR","IfcStateEnum","READWRITE","READONLY","LOCKED","READWRITELOCKED","READONLYLOCKED","IfcStructuralCurveActivityTypeEnum","CONST","POLYGONAL","EQUIDISTANT","SINUS","PARABOLA","DISCRETE","IfcStructuralCurveMemberTypeEnum","RIGID_JOINED_MEMBER","PIN_JOINED_MEMBER","TENSION_MEMBER","COMPRESSION_MEMBER","IfcStructuralSurfaceActivityTypeEnum","BILINEAR","ISOCONTOUR","IfcStructuralSurfaceMemberTypeEnum","BENDING_ELEMENT","MEMBRANE_ELEMENT","SHELL","IfcSubContractResourceTypeEnum","PURCHASE","IfcSurfaceFeatureTypeEnum","MARK","TAG","TREATMENT","DEFECT","IfcSurfaceSide","BOTH","IfcSwitchingDeviceTypeEnum","CONTACTOR","DIMMERSWITCH","EMERGENCYSTOP","KEYPAD","MOMENTARYSWITCH","SELECTORSWITCH","STARTER","SWITCHDISCONNECTOR","TOGGLESWITCH","IfcSystemFurnitureElementTypeEnum","PANEL","WORKSURFACE","IfcTankTypeEnum","BASIN","BREAKPRESSURE","EXPANSION","FEEDANDEXPANSION","PRESSUREVESSEL","STORAGE","VESSEL","IfcTaskDurationEnum","ELAPSEDTIME","WORKTIME","IfcTaskTypeEnum","ATTENDANCE","DEMOLITION","DISMANTLE","INSTALLATION","LOGISTIC","MAINTENANCE","MOVE","OPERATION","REMOVAL","RENOVATION","IfcTendonAnchorTypeEnum","FIXED_END","TENSIONING_END","IfcTendonConduitTypeEnum","GROUTING_DUCT","TRUMPET","DIABOLO","IfcTendonTypeEnum","BAR","COATED","STRAND","WIRE","IfcTextPath","UP","DOWN","IfcTimeSeriesDataTypeEnum","CONTINUOUS","DISCRETEBINARY","PIECEWISEBINARY","PIECEWISECONSTANT","PIECEWISECONTINUOUS","IfcTransformerTypeEnum","FREQUENCY","INVERTER","RECTIFIER","VOLTAGE","IfcTransitionCode","DISCONTINUOUS","CONTSAMEGRADIENT","CONTSAMEGRADIENTSAMECURVATURE","IfcTransitionCurveType","BIQUADRATICPARABOLA","BLOSSCURVE","CLOTHOIDCURVE","COSINECURVE","CUBICPARABOLA","SINECURVE","IfcTransportElementTypeEnum","ELEVATOR","ESCALATOR","MOVINGWALKWAY","CRANEWAY","LIFTINGGEAR","IfcTrimmingPreference","CARTESIAN","IfcTubeBundleTypeEnum","FINNED","IfcUnitEnum","ABSORBEDDOSEUNIT","AMOUNTOFSUBSTANCEUNIT","AREAUNIT","DOSEEQUIVALENTUNIT","ELECTRICCAPACITANCEUNIT","ELECTRICCHARGEUNIT","ELECTRICCONDUCTANCEUNIT","ELECTRICCURRENTUNIT","ELECTRICRESISTANCEUNIT","ELECTRICVOLTAGEUNIT","ENERGYUNIT","FORCEUNIT","FREQUENCYUNIT","ILLUMINANCEUNIT","INDUCTANCEUNIT","LENGTHUNIT","LUMINOUSFLUXUNIT","LUMINOUSINTENSITYUNIT","MAGNETICFLUXDENSITYUNIT","MAGNETICFLUXUNIT","MASSUNIT","PLANEANGLEUNIT","POWERUNIT","PRESSUREUNIT","RADIOACTIVITYUNIT","SOLIDANGLEUNIT","THERMODYNAMICTEMPERATUREUNIT","TIMEUNIT","VOLUMEUNIT","IfcUnitaryControlElementTypeEnum","ALARMPANEL","CONTROLPANEL","GASDETECTIONPANEL","INDICATORPANEL","MIMICPANEL","HUMIDISTAT","THERMOSTAT","WEATHERSTATION","IfcUnitaryEquipmentTypeEnum","AIRHANDLER","AIRCONDITIONINGUNIT","DEHUMIDIFIER","SPLITSYSTEM","ROOFTOPUNIT","IfcValveTypeEnum","AIRRELEASE","ANTIVACUUM","CHANGEOVER","CHECK","COMMISSIONING","DIVERTING","DRAWOFFCOCK","DOUBLECHECK","DOUBLEREGULATING","FAUCET","FLUSHING","GASCOCK","GASTAP","ISOLATING","MIXING","PRESSUREREDUCING","PRESSURERELIEF","REGULATING","SAFETYCUTOFF","STEAMTRAP","STOPCOCK","IfcVibrationDamperTypeEnum","BENDING_YIELD","SHEAR_YIELD","AXIAL_YIELD","VISCOUS","RUBBER","IfcVibrationIsolatorTypeEnum","COMPRESSION","SPRING","BASE","IfcVoidingFeatureTypeEnum","CUTOUT","NOTCH","HOLE","MITER","CHAMFER","IfcWallTypeEnum","MOVABLE","PARAPET","PARTITIONING","PLUMBINGWALL","SOLIDWALL","STANDARD","ELEMENTEDWALL","RETAININGWALL","IfcWasteTerminalTypeEnum","FLOORTRAP","FLOORWASTE","GULLYSUMP","GULLYTRAP","ROOFDRAIN","WASTEDISPOSALUNIT","WASTETRAP","IfcWindowPanelOperationEnum","SIDEHUNGRIGHTHAND","SIDEHUNGLEFTHAND","TILTANDTURNRIGHTHAND","TILTANDTURNLEFTHAND","TOPHUNG","BOTTOMHUNG","PIVOTHORIZONTAL","PIVOTVERTICAL","SLIDINGHORIZONTAL","SLIDINGVERTICAL","REMOVABLECASEMENT","FIXEDCASEMENT","OTHEROPERATION","IfcWindowPanelPositionEnum","BOTTOM","TOP","IfcWindowStyleConstructionEnum","OTHER_CONSTRUCTION","IfcWindowStyleOperationEnum","SINGLE_PANEL","DOUBLE_PANEL_VERTICAL","DOUBLE_PANEL_HORIZONTAL","TRIPLE_PANEL_VERTICAL","TRIPLE_PANEL_BOTTOM","TRIPLE_PANEL_TOP","TRIPLE_PANEL_LEFT","TRIPLE_PANEL_RIGHT","TRIPLE_PANEL_HORIZONTAL","IfcWindowTypeEnum","WINDOW","SKYLIGHT","LIGHTDOME","IfcWindowTypePartitioningEnum","IfcWorkCalendarTypeEnum","FIRSTSHIFT","SECONDSHIFT","THIRDSHIFT","IfcWorkPlanTypeEnum","ACTUAL","BASELINE","PLANNED","IfcWorkScheduleTypeEnum","WebIFCWasm","expressID","GlobalId","OwnerHistory","Name","Description","ObjectType","Identification","PredefinedType","Status","LongDescription","tape","TheActor","Role","UserDefinedRole","ObjectPlacement","Representation","Tag","ApplicableOccurrence","HasPropertySets","RepresentationMaps","ElementType","Purpose","UserDefinedPurpose","Outer","Voids","Bounds","FaceSurface","SameSense","Axis","StartDistAlong","Segments","TangentialContinuity","StartTag","EndTag","CurveGeometry","HorizontalLength","StartHeight","StartGradient","Radius","IsConvex","ParabolaConstant","Horizontal","Vertical","OuterBoundary","InnerBoundaries","ApplicationDeveloper","Version","ApplicationFullName","ApplicationIdentifier","AppliedValue","UnitBasis","ApplicableDate","FixedUntilDate","Category","Condition","ArithmeticOperator","Components","Identifier","TimeOfApproval","Level","Qualifier","RequestingApproval","GivingApproval","RelatingApproval","RelatedApprovals","ProfileType","ProfileName","OuterCurve","Curve","InnerCurves","OriginalValue","CurrentValue","TotalReplacementCost","Owner","User","ResponsiblePerson","IncorporationDate","DepreciatedValue","Position","BottomFlangeWidth","OverallDepth","WebThickness","BottomFlangeThickness","BottomFlangeFilletRadius","TopFlangeWidth","TopFlangeThickness","TopFlangeFilletRadius","BottomFlangeEdgeRadius","BottomFlangeSlope","TopFlangeEdgeRadius","TopFlangeSlope","Location","RefDirection","Degree","ControlPointsList","CurveForm","ClosedCurve","SelfIntersect","KnotMultiplicities","Knots","KnotSpec","UDegree","VDegree","SurfaceForm","UClosed","VClosed","UMultiplicities","VMultiplicities","UKnots","VKnots","RepeatS","RepeatT","Mode","TextureTransform","Parameter","RasterFormat","RasterCode","XLength","YLength","ZLength","Operator","FirstOperand","SecondOperand","TranslationalStiffnessByLengthX","TranslationalStiffnessByLengthY","TranslationalStiffnessByLengthZ","RotationalStiffnessByLengthX","RotationalStiffnessByLengthY","RotationalStiffnessByLengthZ","TranslationalStiffnessByAreaX","TranslationalStiffnessByAreaY","TranslationalStiffnessByAreaZ","TranslationalStiffnessX","TranslationalStiffnessY","TranslationalStiffnessZ","RotationalStiffnessX","RotationalStiffnessY","RotationalStiffnessZ","WarpingStiffness","Corner","XDim","YDim","ZDim","BaseSurface","AgreementFlag","Enclosure","LongName","CompositionType","ElevationOfRefHeight","ElevationOfTerrain","BuildingAddress","Elevation","Depth","Width","WallThickness","Girth","InternalFilletRadius","Coordinates","CoordList","TagList","Axis1","Axis2","LocalOrigin","Scale","Scale2","Axis3","Scale3","Thickness","StartPoint","StartDirection","SegmentLength","IsCCW","Source","Edition","EditionDate","ReferenceTokens","ReferencedSource","Sort","CfsFaces","Red","Green","Blue","ColourList","UsageName","HasProperties","TemplateType","HasPropertyTemplates","Transition","ParentCurve","Profiles","Label","CurveOnRelatingElement","CurveOnRelatedElement","PointOnRelatingElement","PointOnRelatedElement","EccentricityInX","EccentricityInY","EccentricityInZ","SurfaceOnRelatingElement","SurfaceOnRelatedElement","VolumeOnRelatingElement","VolumeOnRelatedElement","ConstraintGrade","ConstraintSource","CreatingActor","CreationTime","UserDefinedGrade","Usage","BaseCosts","BaseQuantity","ResourceType","Phase","RepresentationContexts","UnitsInContext","Dimensions","UnitType","ConversionFactor","ConversionOffset","SourceCRS","TargetCRS","GeodeticDatum","VerticalDatum","CostValues","CostQuantities","SubmittedOn","UpdateDate","TreeRootExpression","RelatingMonetaryUnit","RelatedMonetaryUnit","ExchangeRate","RateDateTime","RateSource","BasisSurface","Boundaries","ImplicitOuter","CurveFont","CurveWidth","CurveColour","ModelOrDraughting","PatternList","CurveFontScaling","VisibleSegmentLength","InvisibleSegmentLength","ParentProfile","Elements","UserDefinedType","Unit","Exponent","LengthExponent","MassExponent","TimeExponent","ElectricCurrentExponent","ThermodynamicTemperatureExponent","AmountOfSubstanceExponent","LuminousIntensityExponent","DirectionRatios","DistanceAlong","OffsetLateral","OffsetVertical","OffsetLongitudinal","AlongHorizontal","FlowDirection","SystemType","IntendedUse","Scope","Revision","DocumentOwner","Editors","LastRevisionTime","ElectronicFormat","ValidFrom","ValidUntil","Confidentiality","RelatingDocument","RelatedDocuments","RelationshipType","ReferencedDocument","OverallHeight","OverallWidth","OperationType","UserDefinedOperationType","LiningDepth","LiningThickness","ThresholdDepth","ThresholdThickness","TransomThickness","TransomOffset","LiningOffset","ThresholdOffset","CasingThickness","CasingDepth","ShapeAspectStyle","LiningToPanelOffsetX","LiningToPanelOffsetY","PanelDepth","PanelOperation","PanelWidth","PanelPosition","ConstructionType","ParameterTakesPrecedence","Sizeable","EdgeStart","EdgeEnd","EdgeGeometry","EdgeList","AssemblyPlace","MethodOfMeasurement","Quantities","SemiAxis1","SemiAxis2","EventTriggerType","UserDefinedEventTriggerType","EventOccurenceTime","DataOrigin","UserDefinedDataOrigin","ActualDate","EarlyDate","LateDate","ScheduleDate","ProcessType","Properties2","Properties","RelatingReference","RelatedResourceObjects","SweptArea","ExtrudedDirection","EndSweptArea","FbsmFaces","Bound","Orientation","TensionFailureX","TensionFailureY","TensionFailureZ","CompressionFailureX","CompressionFailureY","CompressionFailureZ","FillStyles","ModelorDraughting","HatchLineAppearance","StartOfNextHatchLine","PointOfReferenceHatchLine","PatternStart","HatchLineAngle","TilingPattern","Tiles","TilingScale","Directrix","StartParam","EndParam","FixedReference","ContextIdentifier","ContextType","CoordinateSpaceDimension","Precision","WorldCoordinateSystem","TrueNorth","ParentContext","TargetScale","TargetView","UserDefinedTargetView","UAxes","VAxes","WAxes","AxisTag","AxisCurve","PlacementRelTo","PlacementLocation","PlacementRefDirection","FlangeThickness","FilletRadius","FlangeEdgeRadius","FlangeSlope","URLReference","MappedTo","Opacity","Colours","ColourIndex","Points","CoordIndex","InnerCoordIndices","Maps","TexCoords","TexCoordIndex","Curve3D","AssociatedGeometry","MasterRepresentation","Jurisdiction","ResponsiblePersons","LastUpdateDate","StartTime","EndTime","TimeSeriesDataType","Values","TimeStamp","ListValues","EdgeRadius","LegSlope","LagValue","DurationType","Publisher","VersionDate","Language","ReferencedLibrary","MainPlaneAngle","SecondaryPlaneAngle","LuminousIntensity","LightDistributionCurve","DistributionData","LightColour","AmbientIntensity","Intensity","ColourAppearance","ColourTemperature","LuminousFlux","LightEmissionSource","LightDistributionDataSource","ConstantAttenuation","DistanceAttenuation","QuadricAttenuation","ConcentrationExponent","SpreadAngle","BeamWidthAngle","Pnt","Dir","PlacementMeasuredAlong","Distance","CartesianPosition","RelativePlacement","Eastings","Northings","OrthogonalHeight","XAxisAbscissa","XAxisOrdinate","MappingSource","MappingTarget","MaterialClassifications","ClassifiedMaterial","Material","Fraction","MaterialConstituents","Representations","RepresentedMaterial","LayerThickness","IsVentilated","Priority","MaterialLayers","LayerSetName","ForLayerSet","LayerSetDirection","DirectionSense","OffsetFromReferenceLine","ReferenceExtent","OffsetDirection","OffsetValues","Materials","Profile","MaterialProfiles","CompositeProfile","ForProfileSet","CardinalPoint","ForProfileEndSet","CardinalEndPoint","RelatingMaterial","RelatedMaterials","Expression","ValueComponent","UnitComponent","NominalDiameter","NominalLength","Benchmark","ValueSource","DataValue","ReferencePath","Currency","BenchmarkValues","LogicalAggregator","ObjectiveQualifier","UserDefinedQualifier","BasisCurve","Roles","Addresses","RelatingOrganization","RelatedOrganizations","LateralAxisDirection","VerticalAxisDirection","EdgeElement","OwningUser","OwningApplication","State","ChangeAction","LastModifiedDate","LastModifyingUser","LastModifyingApplication","CreationDate","ReferenceCurve","LifeCyclePhase","FrameDepth","FrameThickness","FamilyName","GivenName","MiddleNames","PrefixTitles","SuffixTitles","ThePerson","TheOrganization","HasQuantities","Discrimination","Quality","Height","ColourComponents","Pixel","SizeInX","SizeInY","Placement","PointParameter","PointParameterU","PointParameterV","Polygon","PolygonalBoundary","Closed","Faces","PnIndex","InternalLocation","AddressLines","PostalBox","Town","Region","PostalCode","Country","AssignedItems","LayerOn","LayerFrozen","LayerBlocked","LayerStyles","Styles","ProfileDefinition","MapProjection","MapZone","MapUnit","UpperBoundValue","LowerBoundValue","SetPointValue","DependingProperty","DependantProperty","EnumerationValues","EnumerationReference","PropertyReference","ApplicableEntity","NominalValue","DefiningValues","DefinedValues","DefiningUnit","DefinedUnit","CurveInterpolation","ProxyType","AreaValue","Formula","CountValue","LengthValue","TimeValue","VolumeValue","WeightValue","WeightsData","InnerFilletRadius","OuterFilletRadius","U1","V1","U2","V2","Usense","Vsense","RecurrenceType","DayComponent","WeekdayComponent","MonthComponent","Interval","Occurrences","TimePeriods","TypeIdentifier","AttributeIdentifier","InstanceName","ListPositions","InnerReference","RestartDistance","TimeStep","TotalCrossSectionArea","SteelGrade","BarSurface","EffectiveDepth","NominalBarDiameter","BarCount","DefinitionType","ReinforcementSectionDefinitions","CrossSectionArea","BarLength","BendingShapeCode","BendingParameters","MeshLength","MeshWidth","LongitudinalBarNominalDiameter","TransverseBarNominalDiameter","LongitudinalBarCrossSectionArea","TransverseBarCrossSectionArea","LongitudinalBarSpacing","TransverseBarSpacing","RelatingObject","RelatedObjects","RelatedObjectsType","RelatingActor","ActingRole","RelatingControl","RelatingGroup","Factor","RelatingProcess","QuantityInProcess","RelatingProduct","RelatingResource","RelatingClassification","Intent","RelatingConstraint","RelatingLibrary","ConnectionGeometry","RelatingElement","RelatedElement","RelatingPriorities","RelatedPriorities","RelatedConnectionType","RelatingConnectionType","RelatingPort","RelatedPort","RealizingElement","RelatedStructuralActivity","RelatingStructuralMember","RelatedStructuralConnection","AppliedCondition","AdditionalConditions","SupportedLength","ConditionCoordinateSystem","ConnectionConstraint","RealizingElements","ConnectionType","RelatedElements","RelatingStructure","RelatingBuildingElement","RelatedCoverings","RelatingSpace","RelatingContext","RelatedDefinitions","RelatingPropertyDefinition","RelatedPropertySets","RelatingTemplate","RelatingType","RelatingOpeningElement","RelatedBuildingElement","RelatedControlElements","RelatingFlowElement","InterferenceGeometry","InterferenceType","ImpliedOrder","RelatingPositioningElement","RelatedProducts","RelatedFeatureElement","RelatedProcess","TimeLag","SequenceType","UserDefinedSequenceType","RelatingSystem","RelatedBuildings","PhysicalOrVirtualBoundary","InternalOrExternalBoundary","ParentBoundary","CorrespondingBoundary","RelatedOpeningElement","ParamLength","ContextOfItems","RepresentationIdentifier","RepresentationType","Items","MappingOrigin","MappedRepresentation","ScheduleWork","ScheduleUsage","ScheduleStart","ScheduleFinish","ScheduleContour","LevelingDelay","IsOverAllocated","StatusTime","ActualWork","ActualUsage","ActualStart","ActualFinish","RemainingWork","RemainingUsage","Completion","Angle","BottomRadius","RoundingRadius","Prefix","SectionType","StartProfile","EndProfile","LongitudinalStartPosition","LongitudinalEndPosition","TransversePosition","ReinforcementRole","SectionDefinition","CrossSectionReinforcementDefinitions","CrossSections","CrossSectionPositions","FixedAxisVertical","SpineCurve","ShapeRepresentations","ProductDefinitional","PartOfProductDefinitionShape","SbsmBoundary","PrimaryMeasureType","SecondaryMeasureType","Enumerators","PrimaryUnit","SecondaryUnit","AccessState","RefLatitude","RefLongitude","RefElevation","LandTitleNumber","SiteAddress","SlippageX","SlippageY","SlippageZ","ElevationWithFlooring","NumberOfRisers","NumberOfTreads","RiserHeight","TreadLength","AppliedLoad","GlobalOrLocal","DestabilizingLoad","OrientationOf2DPlane","LoadedBy","HasResults","SharedPlacement","ProjectedOrTrue","ActionType","ActionSource","Coefficient","SelfWeightCoefficients","Locations","LinearForceX","LinearForceY","LinearForceZ","LinearMomentX","LinearMomentY","LinearMomentZ","PlanarForceX","PlanarForceY","PlanarForceZ","DisplacementX","DisplacementY","DisplacementZ","RotationalDisplacementRX","RotationalDisplacementRY","RotationalDisplacementRZ","Distortion","ForceX","ForceY","ForceZ","MomentX","MomentY","MomentZ","WarpingMoment","DeltaTConstant","DeltaTY","DeltaTZ","TheoryType","ResultForLoadGroup","IsLinear","Item","ParentEdge","ReferenceSurface","SweptCurve","AxisPosition","SurfaceReinforcement1","SurfaceReinforcement2","ShearReinforcement","Side","DiffuseTransmissionColour","DiffuseReflectionColour","TransmissionColour","ReflectanceColour","RefractionIndex","DispersionFactor","SurfaceColour","Transparency","DiffuseColour","ReflectionColour","SpecularColour","SpecularHighlight","ReflectanceMethod","Textures","InnerRadius","FlangeWidth","WebEdgeRadius","WebSlope","Rows","Columns","RowCells","IsHeading","WorkMethod","IsMilestone","TaskTime","ScheduleDuration","EarlyStart","EarlyFinish","LateStart","LateFinish","FreeFloat","TotalFloat","IsCritical","ActualDuration","RemainingTime","Recurrence","TelephoneNumbers","FacsimileNumbers","PagerNumber","ElectronicMailAddresses","WWWHomePageURL","MessagingIDs","TensionForce","PreStress","FrictionCoefficient","AnchorageSlip","MinCurvatureRadius","SheathDiameter","Literal","Path","Extent","BoxAlignment","TextCharacterAppearance","TextStyle","TextFontStyle","FontFamily","FontStyle","FontVariant","FontWeight","FontSize","Colour","BackgroundColour","TextIndent","TextAlign","TextDecoration","LetterSpacing","WordSpacing","TextTransform","LineHeight","Vertices","TexCoordsList","MajorRadius","MinorRadius","StartRadius","EndRadius","IsStartRadiusCCW","IsEndRadiusCCW","TransitionCurveType","BottomXDim","TopXDim","TopXOffset","Normals","Flags","Trim1","Trim2","SenseAgreement","Units","Magnitude","LoopVertex","VertexGeometry","IntersectingAxes","OffsetDistances","PartitioningType","UserDefinedPartitioningType","MullionThickness","FirstTransomOffset","SecondTransomOffset","FirstMullionOffset","SecondMullionOffset","WorkingTimes","ExceptionTimes","Creators","Duration","FinishTime","RecurrencePattern","Start","Finish","IfcElements2","IfcTypesMap","PropsNames","aggregates","relating","related","spatial","psets","materials","api","modelID","recursive","GetLine","elementID","getProperty","includeProperties","getAllTypesOfModel","getSpatialTreeChunks","GetLineIDsWithType","allLines","projectID","project","newIfcProject","getSpatialNode","cleanupTypes","verbose","items","lines","propName","getAllRelatedItemsOfType","propSetIds","propNames","relation","rel","saveChunk","treeChunks","getChildren","children","nodes","child","node2","newNode","getItemProperties","getNodeType","typeID","getChunks","IDs","element","isArray","ele","isRelated","getRelated","parseInt","relatedItems","item","crossOriginIsolated","UNKNOWN","STRING","LABEL","ENUM","REAL","REF","EMPTY","SET_BEGIN","SET_END","LINE_END","ms","IfcAPI2","fs","wasmPath","isWasmPathAbsolute","ifcGuidMap","Map","customLocateFileHandler","locateFileHandler","prefix","endsWith","noInitialRun","settings","COORDINATE_TO_ORIGIN","USE_FAST_BOOLS","CIRCLE_SEGMENTS_LOW","CIRCLE_SEGMENTS_MEDIUM","CIRCLE_SEGMENTS_HIGH","BOOL_ABORT_THRESHOLD","offsetInSrc","OpenModel","destPtr","destSize","srcSize","CreateModel","ExportFileAsIFC","geometryExpressID","GetGeometry","flatten","rawLineData","GetRawLineData","lineData","FlattenLine","GetAndClearErrors","lineObject","propertyName","property","WriteLine","ToTape","WriteRawLineData","GetAllLines","transformationMatrix","SetGeometryTransformation","GetCoordinationMatrix","getSubArray","sizeBytes","delete","CloseModel","meshCallback","StreamAllMeshes","StreamAllMeshesWithTypes","IsModelOpen","LoadAllGeometry","GetFlatMesh","globalID","absolute"],"sourceRoot":""}